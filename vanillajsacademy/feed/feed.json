{
  "version": "https://jsonfeed.org/version/1",
  "title": "miguelslp - Vanilla JS",
  "home_page_url": "https://example.com/",
  "feed_url": "https://example.com/feed/feed.json",
  "description": "Exercises on Vanilla JS Academy 2020",
  "author": {
    "name": "Miguel Pinto",
    "url": ""
  },
  "items": [{
      "id": "https://example.com/vanillajsacademy/posts/1/",
      "url": "https://example.com/vanillajsacademy/posts/1/",
      "title": "Password Visibility",
      "content_html": "\n\n<div class=\"htmlBox\">\n  \n<p>Enter your username and password to login.</p>\n\n<form>\n  <div>\n    <label for=\"username\">Username</label>\n    <input type=\"text\" name=\"username\" id=\"username\">\n  </div>\n\n  <div>\n    <label for=\"password\">Password</label>\n    <input type=\"password\" name=\"password\" id=\"password\">\n  </div>\n\n  <div>\n    <label for=\"show-password\">\n      <input type=\"checkbox\" name=\"show-passwords\" id=\"show-password\">\n      Show password\n    </label>\n  </div>\n\n  <p>\n    <button type=\"submit\">Log In</button>\n  </p>\n</form>\n\n</div>\n\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Enter your username and password to login.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Username<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Password<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>show-password<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>show-passwords<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>show-password<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>      Show password<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Log In<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></code></pre>\n\n\n\n\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">async</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br><br>  <span class=\"token comment\">// Variables</span><br>  <span class=\"token keyword\">var</span> password <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#password'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">var</span> passwordToggle <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#show-password'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Methods</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">togglePassword</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target <span class=\"token operator\">!=</span> passwordToggle<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>    password<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> passwordToggle<span class=\"token punctuation\">.</span>checked <span class=\"token operator\">?</span> <span class=\"token string\">'text'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'password'</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Listeners</span><br>  document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token function\">togglePassword</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<div class=\"htmlBox\">\n  <h2>Other ideas</h2>\n<ul>\n<li>\n<p><code>if</code> statement could have replaced the ternary operator.</p>\n</li>\n<li>\n<p>The event listener could instead be attached to the <code>passwordToggle</code> element.</p>\n</li>\n</ul>\n\n</div>\n\n\n<script async>\n\n  // Variables\n  var password = document.querySelector('#password');\n  var passwordToggle = document.querySelector('#show-password');\n\n  // Methods\n  var togglePassword = function (event) {\n    if (event.target != passwordToggle) return;\n    password.type = passwordToggle.checked ? 'text' : 'password';\n  };\n\n  // Listeners\n  document.addEventListener('click', function (event) {\n    togglePassword(event);\n  });\n\n</script>\n",
      "date_published": "2020-10-12T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/3/",
      "url": "https://example.com/vanillajsacademy/posts/3/",
      "title": "Toggling multiple password fields",
      "content_html": "\n\n<div class=\"htmlBox\">\n\t\n<form>\n\t<div>\n\t\t<label for=\"current-password\">Current Password</label>\n\t\t<input type=\"password\" name=\"current-password\" id=\"current-password\" data-password>\n\t</div>\n\n\t<div>\n\t\t<label for=\"new-password\">New Password</label>\n\t\t<input type=\"password\" name=\"new-password\" id=\"new-password\" data-password>\n\t</div>\n\n\t<div>\n\t\t<label for=\"show-passwords\">\n\t\t\t<input type=\"checkbox\" name=\"show-passwords\" id=\"show-passwords\">\n\t\t\tShow passwords\n\t\t</label>\n\t</div>\n\n\t<p>\n\t\t<button type=\"submit\">Change Passwords</button>\n\t</p>\n</form>\n\n</div>\n\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span><span class=\"token punctuation\">></span></span><br>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><br>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>current-password<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Current Password<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>current-password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>current-password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-password</span><span class=\"token punctuation\">></span></span><br>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><br>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><br>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>new-password<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>New Password<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>new-password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>new-password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-password</span><span class=\"token punctuation\">></span></span><br>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><br>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><br>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>show-passwords<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>show-passwords<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>show-passwords<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>\t\t\tShow passwords<br>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><br>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><br>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Change Passwords<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><br>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></code></pre>\n\n\n\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">async</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br><br>\t<span class=\"token comment\">// Variables</span><br>\t<span class=\"token keyword\">var</span> passwords <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[data-password]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>\t<span class=\"token keyword\">var</span> passwordToggle <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#show-passwords'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>\t<span class=\"token comment\">// Methods</span><br>\t<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">togglePasswords</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target <span class=\"token operator\">!=</span> passwordToggle<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>\t\tpasswords<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>\t\t\telement<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> passwordToggle<span class=\"token punctuation\">.</span>checked <span class=\"token operator\">?</span> <span class=\"token string\">'text'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'password'</span><span class=\"token punctuation\">;</span><br>\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>\t<span class=\"token comment\">// Listeners</span><br>\tdocument<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>\t\t<span class=\"token function\">togglePasswords</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<div class=\"htmlBox\">\n\t<h2>Other ideas</h2>\n<ul>\n<li>\n<p><code>type=password</code> could instead have been used as a selector.</p>\n</li>\n<li>\n<p><code>Array.from()</code> could replace the <code>Array.prototype.slice.call()</code>.</p>\n</li>\n<li>\n<p>Or with a pure function</p>\n<pre><code>function togglePassword (checkbox, field) {\n  field.type = checkbox.checked ? 'text' : 'password';\n}\n\nfunction handleChange () {\n  passwords.forEach(password =&gt; {\n    togglePassword(this, password);\n  });\n}\n</code></pre>\n</li>\n</ul>\n\n</div>\n\n\n<script async>\n\n\t// Variables\n\tvar passwords = Array.prototype.slice.call(document.querySelectorAll('[data-password]'));\n\tvar passwordToggle = document.querySelector('#show-passwords');\n\n\t// Methods\n\tvar togglePasswords = function (event) {\n\t\tif (event.target != passwordToggle) return;\n\t\tpasswords.forEach(element => {\n\t\t\telement.type = passwordToggle.checked ? 'text' : 'password';\n\t\t});\n\t};\n\n\t// Listeners\n\tdocument.addEventListener('click', function (event) {\n\t\ttogglePasswords(event);\n\t});\n\n</script>\n",
      "date_published": "2020-10-14T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/5/",
      "url": "https://example.com/vanillajsacademy/posts/5/",
      "title": "Toggling passwords in multiple forms",
      "content_html": "\n\n<div class=\"htmlBox\">\n  \n<h2>Change Username</h2>\n\n<p>Enter your username and password to change your username.</p>\n\n<form>\n  <div>\n    <label for=\"username\">Username</label>\n    <input type=\"text\" name=\"username\" id=\"username\">\n  </div>\n\n  <div>\n    <label for=\"password\">Password</label>\n    <input type=\"password\" name=\"password\" id=\"password\" data-target=\"changeUsername\">\n  </div>\n\n  <div>\n    <label for=\"show-password\">\n      <input type=\"checkbox\" name=\"show-passwords\" id=\"show-password\" data-passwordToggle=\"changeUsername\">\n      Show password\n    </label>\n  </div>\n\n  <p>\n    <button type=\"submit\">Change Username</button>\n  </p>\n</form>\n\n<h2>Change Password</h2>\n\n<p>Enter your current password and new password below.</p>\n\n<form>\n  <div>\n    <label for=\"current-password\">Current Password</label>\n    <input type=\"password\" name=\"current-password\" id=\"current-password\" data-target=\"changePassword\">\n  </div>\n\n  <div>\n    <label for=\"new-password\">New Password</label>\n    <input type=\"password\" name=\"new-password\" id=\"new-password\" data-target=\"changePassword\">\n  </div>\n\n  <div>\n    <label for=\"show-passwords\">\n      <input type=\"checkbox\" name=\"show-passwords\" id=\"show-passwords\" data-passwordToggle=\"changePassword\">\n      Show passwords\n    </label>\n  </div>\n\n  <p>\n    <button type=\"submit\">Change Passwords</button>\n  </p>\n</form>\n\n</div>\n\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>Change Username<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><br><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Enter your username and password to change your username.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Username<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Password<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeUsername<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>show-password<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>show-passwords<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>show-password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-passwordToggle</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changeUsername<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>      Show password<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Change Username<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span><br><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>Change Password<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><br><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Enter your current password and new password below.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>current-password<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Current Password<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>current-password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>current-password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changePassword<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>new-password<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>New Password<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>new-password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>new-password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changePassword<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>show-passwords<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>show-passwords<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>show-passwords<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-passwordToggle</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>changePassword<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>      Show passwords<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Change Passwords<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></code></pre>\n\n\n\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">async</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br><br>  <span class=\"token comment\">// Variables</span><br>  <span class=\"token keyword\">var</span> passwords <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[type=\"password\"]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Methods</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">togglePasswords</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">matches</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[data-passwordToggle]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">var</span> targets <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-passwordToggle'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    passwords<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">.</span><span class=\"token function\">matches</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">[data-target=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>targets<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"]</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        element<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>checked <span class=\"token operator\">?</span> <span class=\"token string\">'text'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'password'</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Listeners</span><br>  document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> togglePasswords<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<div class=\"htmlBox\">\n  <h2>Other ideas</h2>\n<ul>\n<li>Making the selection with a data attribute only on the password inputs and querying the parent form. The form querying could also be done with the <code>form</code> property.<pre><code>var otherAlternative = function (event) {\n  if (event.target.matches('[name=&quot;show-passwords&quot;]')) {\n    let formPasswords = Array.from(event.target.closest('form').querySelectorAll('[data-password]'));\n    formPasswords.forEach(element =&gt; {\n      element.type = event.target.checked ? 'text' : 'password';\n    });\n  };\n};\n</code></pre>\n</li>\n</ul>\n\n</div>\n\n\n<script async>\n\n  // Variables\n  var passwords = Array.from(document.querySelectorAll('[type=\"password\"]'));\n\n  // Methods\n  var togglePasswords = function (event) {\n    if (!event.target.matches('[data-passwordToggle]')) return;\n    var targets = event.target.getAttribute('data-passwordToggle');\n    passwords.forEach(element => {\n      if (element.matches(`[data-target=\"${targets}\"]`)) {\n        element.type = event.target.checked ? 'text' : 'password';\n      };\n    })\n  };\n\n  // Listeners\n  document.addEventListener('click', togglePasswords);\n\n</script>\n",
      "date_published": "2020-10-16T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/7/",
      "url": "https://example.com/vanillajsacademy/posts/7/",
      "title": "Character Count",
      "content_html": "\n\n<div class=\"htmlBox\">\n  \n<label for=\"text\">Enter your text below.</label>\n<textarea id=\"text\"></textarea>\n\n<p>You've written <strong><span id=\"character-count\">0</span> characters</strong>.</p>\n\n</div>\n\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Enter your text below.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">></span></span><br><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>You've written <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>character-count<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> characters<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">></span></span>.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre>\n\n\n\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">async</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br><br>  <span class=\"token comment\">// Variables</span><br>  <span class=\"token keyword\">let</span> inputElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'textarea'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">let</span> counter <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#character-count'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Methods</span><br>  <span class=\"token keyword\">function</span> <span class=\"token function\">characterCount</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    counter<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> inputElement<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">// Listeners</span><br>  inputElement<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">,</span> characterCount<span class=\"token punctuation\">)</span><br><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<div class=\"htmlBox\">\n  <h2>Other ideas</h2>\n<ul>\n<li>With reusable functions<pre><code>function getCharacterCount (field) {\n  return field.value.length;\n}\n\nfunction handleInput (count, text) {\n  count.textContent = getCharacterCount(text);\n}\n\ninputElement.addEventListener('input', function() {\n  handleInput(counter, this);\n});\n</code></pre>\n</li>\n</ul>\n\n</div>\n\n\n<script async>\n\n  // Variables\n  let inputElement = document.querySelector('textarea');\n  let counter = document.querySelector('#character-count');\n\n  // Methods\n  function characterCount () {\n    counter.textContent = inputElement.value.length;\n  }\n\n  // Listeners\n  inputElement.addEventListener('input', characterCount)\n\n</script>\n",
      "date_published": "2020-10-18T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/9/",
      "url": "https://example.com/vanillajsacademy/posts/9/",
      "title": "Character and Word Count",
      "content_html": "\n\n<div class=\"htmlBox\">\n  \n<label for=\"text\">Enter your text below.</label>\n<textarea id=\"text\"></textarea>\n<p>You've written <strong><span id=\"word-count\">0</span> words</strong> and <strong><span id=\"character-count\">0</span>\n    characters</strong>.</p>\n\n</div>\n\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Enter your text below.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>You've written <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>word-count<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> words<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">></span></span> and <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>character-count<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span><br>    characters<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">></span></span>.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre>\n\n\n\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">async</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br><br>  <span class=\"token comment\">// Variables</span><br>  <span class=\"token keyword\">let</span> textArea <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'textarea'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">let</span> charCounter <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#character-count'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">let</span> wordCounter <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#word-count'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Methods</span><br>  <span class=\"token keyword\">function</span> <span class=\"token function\">handleInput</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">inputElement<span class=\"token punctuation\">,</span> countElement<span class=\"token punctuation\">,</span> wordCountElement</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">let</span> newArray <span class=\"token operator\">=</span> inputElement<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\s+</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> item <span class=\"token operator\">!=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>    countElement<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> newArray<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span><br>    wordCountElement<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> newArray<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">// Listeners</span><br>  textArea<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token function\">handleInput</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> charCounter<span class=\"token punctuation\">,</span> wordCounter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<div class=\"htmlBox\">\n  \n</div>\n\n\n<script async>\n\n  // Variables\n  let textArea = document.querySelector('textarea');\n  let charCounter = document.querySelector('#character-count');\n  let wordCounter = document.querySelector('#word-count');\n\n  // Methods\n  function handleInput(inputElement, countElement, wordCountElement) {\n    let newArray = inputElement.value.split(/\\s+/).filter(function (item) {\n      return item != '';\n    })\n    countElement.textContent = newArray.join('').length;\n    wordCountElement.textContent = newArray.length;\n  }\n\n  // Listeners\n  textArea.addEventListener('input', function () {\n    handleInput(this, charCounter, wordCounter);\n  });\n\n</script>\n",
      "date_published": "2020-10-20T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/11/",
      "url": "https://example.com/vanillajsacademy/posts/11/",
      "title": "Announcing the Count",
      "content_html": "\n\n<div class=\"htmlBox\">\n  \n<label for=\"text\">Enter your text below.</label>\n<textarea id=\"text\"></textarea>\n<p aria-live=\"polite\" aria-atomic=\"true\" id=\"counterParagraph\">You've written <strong>0 words</strong> and <strong>0\n    characters</strong>.</p>\n\n</div>\n\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Enter your text below.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">aria-live</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>polite<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aria-atomic</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>counterParagraph<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>You've written <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">></span></span>0 words<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">></span></span> and <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">></span></span>0<br>    characters<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">></span></span>.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre>\n\n\n\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">async</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br><br>  <span class=\"token comment\">// Variables</span><br>  <span class=\"token keyword\">let</span> textArea <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'textarea'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">let</span> counterParagraph <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#counterParagraph'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Methods</span><br>  <span class=\"token keyword\">function</span> <span class=\"token function\">handleInput</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">inputElement</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">let</span> newArray <span class=\"token operator\">=</span> inputElement<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\s+</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> item <span class=\"token operator\">!==</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>    <span class=\"token keyword\">let</span> wordCount <span class=\"token operator\">=</span> newArray<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">let</span> characterCount <span class=\"token operator\">=</span> newArray<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span><br>    counterParagraph<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">You've written &lt;strong></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>wordCount<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> words&lt;/strong> and &lt;strong></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>characterCount<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"><br>    characters&lt;/strong>.</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">// Listeners</span><br>  textArea<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token function\">handleInput</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<div class=\"htmlBox\">\n  \n</div>\n\n\n<script async>\n\n  // Variables\n  let textArea = document.querySelector('textarea');\n  let counterParagraph = document.querySelector('#counterParagraph');\n\n  // Methods\n  function handleInput(inputElement) {\n    let newArray = inputElement.value.split(/\\s+/).filter(function (item) {\n      return item !== '';\n    })\n    let wordCount = newArray.length;\n    let characterCount = newArray.join('').length;\n    counterParagraph.innerHTML = `You've written <strong>${wordCount} words</strong> and <strong>${characterCount}\n    characters</strong>.`;\n  }\n\n  // Listeners\n  textArea.addEventListener('input', function () {\n    handleInput(this);\n  });\n\n</script>\n",
      "date_published": "2020-10-22T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/13/",
      "url": "https://example.com/vanillajsacademy/posts/13/",
      "title": "Random Rom",
      "content_html": "\n\n<div class=\"htmlBox\">\n  \n<blockquote aria-live=\"polite\">Loading quote...</blockquote>\n\n<button>More Ron</button>\n\n\n\n</div>\n\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>blockquote</span> <span class=\"token attr-name\">aria-live</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>polite<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Loading quote...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>blockquote</span><span class=\"token punctuation\">></span></span><br><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span>More Ron<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre>\n\n\n\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">async</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br><br>  <span class=\"token comment\">// Variables</span><br>  <span class=\"token keyword\">let</span> ronQuote <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'blockquote'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">let</span> ronButton <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Methods</span><br>  <span class=\"token keyword\">function</span> <span class=\"token function\">callRon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://ron-swanson-quotes.herokuapp.com/v2/quotes'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">let</span> errorState <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#errorState\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>errorState<span class=\"token punctuation\">)</span> errorState<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      ronQuote<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>      &lt;p></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/p><br>      &lt;footer>— Ron Swanson&lt;/footer></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><br>      <span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        console<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"oh no something went wrong\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">let</span> errorState <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#errorState\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>errorState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          errorState <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>          errorState<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"errorState\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>          errorState<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">;</span><br>          errorState<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">\"There was an error getting a new quote, please try again.\"</span><br>          ronButton<span class=\"token punctuation\">.</span><span class=\"token function\">after</span><span class=\"token punctuation\">(</span>errorState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">function</span> <span class=\"token function\">handleInput</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target <span class=\"token operator\">!==</span> ronButton<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">callRon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Listeners and inits</span><br>  <span class=\"token function\">callRon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> handleInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<div class=\"htmlBox\">\n  \n</div>\n\n\n<script async>\n\n  // Variables\n  let ronQuote = document.querySelector('blockquote');\n  let ronButton = document.querySelector('button');\n\n  // Methods\n  function callRon() {\n    fetch('https://ron-swanson-quotes.herokuapp.com/v2/quotes').then(function (response) {\n      if (response.ok) {\n        return response.json();\n      } else {\n        return Promise.reject(response);\n      }\n    }).then(function (data) {\n      let errorState = document.querySelector(\"#errorState\");\n      if (errorState) errorState.remove();\n      ronQuote.innerHTML = `\n      <p>${data[0]}</p>\n      <footer>— Ron Swanson</footer>`;\n    }).\n      catch(function (err) {\n        console.warn(\"oh no something went wrong\", err);\n        let errorState = document.querySelector(\"#errorState\");\n        if (!errorState) {\n          errorState = document.createElement('p');\n          errorState.setAttribute(\"id\", \"errorState\");\n          errorState.style.color = \"red\";\n          errorState.textContent = \"There was an error getting a new quote, please try again.\"\n          ronButton.after(errorState);\n        }\n      })\n  };\n  function handleInput(event) {\n    if (event.target !== ronButton) return;\n    callRon();\n  };\n\n  // Listeners and inits\n  callRon();\n  document.addEventListener('click', handleInput);\n\n</script>\n",
      "date_published": "2020-10-24T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/15/",
      "url": "https://example.com/vanillajsacademy/posts/15/",
      "title": "Random Rom without duplicates",
      "content_html": "\n\n<div class=\"htmlBox\">\n  \n<blockquote aria-live=\"polite\">Loading quote...</blockquote>\n\n<button>More Ron</button>\n\n\n\n</div>\n\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>blockquote</span> <span class=\"token attr-name\">aria-live</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>polite<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Loading quote...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>blockquote</span><span class=\"token punctuation\">></span></span><br><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span>More Ron<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre>\n\n\n\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">async</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br>  <span class=\"token comment\">// Variables</span><br>  <span class=\"token keyword\">let</span> ronQuote <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'blockquote'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">let</span> ronButton <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">let</span> savedQuotes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Methods</span><br>  <span class=\"token keyword\">function</span> <span class=\"token function\">updateQuote</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">quote</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>savedQuotes<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>quote<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">||</span> quote <span class=\"token operator\">===</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token function\">callRon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>savedQuotes<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">49</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      savedQuotes<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      savedQuotes<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>quote<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span><br>      savedQuotes<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>quote<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    ronQuote<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>      &lt;p></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>savedQuotes<span class=\"token punctuation\">[</span>savedQuotes<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/p><br>      &lt;footer>— Ron Swanson&lt;/footer></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">function</span> <span class=\"token function\">callRon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://ron-swanson-quotes.herokuapp.com/v2/quotes'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">let</span> errorState <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#errorState\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>errorState<span class=\"token punctuation\">)</span> errorState<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token function\">updateQuote</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><br>      <span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        console<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Oh no something went wrong\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">let</span> errorState <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#errorState\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>errorState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          errorState <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>          errorState<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"errorState\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>          errorState<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">;</span><br>          errorState<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">\"There was an error getting a new quote, please try again.\"</span><br>          ronButton<span class=\"token punctuation\">.</span><span class=\"token function\">after</span><span class=\"token punctuation\">(</span>errorState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">function</span> <span class=\"token function\">handleInput</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target <span class=\"token operator\">!==</span> ronButton<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">callRon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Listeners and inits</span><br>  <span class=\"token function\">callRon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> handleInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<div class=\"htmlBox\">\n\n</div>\n\n\n<script async>\n  // Variables\n  let ronQuote = document.querySelector('blockquote');\n  let ronButton = document.querySelector('button');\n  let savedQuotes = [];\n\n  // Methods\n  function updateQuote(quote) {\n    if (savedQuotes.indexOf(quote) > -1 || quote === \"\") {\n      callRon();\n      return;\n    }\n    else if (savedQuotes.length > 49) {\n      savedQuotes.splice(0, 1);\n      savedQuotes.push(quote);\n    }\n    else {\n      savedQuotes.push(quote);\n    }\n    ronQuote.innerHTML = `\n      <p>${savedQuotes[savedQuotes.length - 1]}</p>\n      <footer>— Ron Swanson</footer>`;\n  };\n  function callRon() {\n    fetch('https://ron-swanson-quotes.herokuapp.com/v2/quotes').then(function (response) {\n      if (response.ok) {\n        return response.json();\n      } else {\n        return Promise.reject(response);\n      }\n    }).then(function (data) {\n      let errorState = document.querySelector(\"#errorState\");\n      if (errorState) errorState.remove();\n      updateQuote(data[0]);\n    }).\n      catch(function (err) {\n        console.warn(\"Oh no something went wrong\", err);\n        let errorState = document.querySelector(\"#errorState\");\n        if (!errorState) {\n          errorState = document.createElement('p');\n          errorState.setAttribute(\"id\", \"errorState\");\n          errorState.style.color = \"red\";\n          errorState.textContent = \"There was an error getting a new quote, please try again.\"\n          ronButton.after(errorState);\n        }\n      })\n  };\n  function handleInput(event) {\n    if (event.target !== ronButton) return;\n    callRon();\n  };\n\n  // Listeners and inits\n  callRon();\n  document.addEventListener('click', handleInput);\n\n</script>\n",
      "date_published": "2020-10-26T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/17/",
      "url": "https://example.com/vanillajsacademy/posts/17/",
      "title": "Latest 5 NYT top stories",
      "content_html": "\n\n<div class=\"htmlBox\">\n  \n<div id=\"app\">Loading latest stories...</div>\n\n</div>\n\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Loading latest stories...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n\n\n\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">async</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br><br>  <span class=\"token comment\">// Variables</span><br>  <span class=\"token keyword\">let</span> elem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Methods</span><br>  <span class=\"token comment\">// ---Get the arrays and call updateDOM</span><br>  <span class=\"token keyword\">function</span> <span class=\"token function\">callNYT</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://api.nytimes.com/svc/topstories/v2/home.json?api-key=V4DAxXaiDzvGkumnpxfO4LpmCd7dM9om'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">array</span> <span class=\"token operator\">=></span> <span class=\"token function\">updateDOM</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">.</span>results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>  <span class=\"token comment\">// ---Helper function to insert the newest 5 as list items in the DOM</span><br>  <span class=\"token keyword\">function</span> <span class=\"token function\">updateDOM</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">storiesArray</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">let</span> top5 <span class=\"token operator\">=</span> storiesArray<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">let</span> stories <span class=\"token operator\">=</span> top5<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">story</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;li>&lt;a href=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>story<span class=\"token punctuation\">.</span>short_url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>story<span class=\"token punctuation\">.</span>title<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/a>&lt;/li></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    elem<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;ul></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>stories<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/ul></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">// Inits</span><br> <span class=\"token function\">callNYT</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<div class=\"htmlBox\">\n\n</div>\n\n\n<script async>\n\n  // Variables\n  let elem = document.querySelector('#app');\n\n  // Methods\n  // ---Get the arrays and call updateDOM\n  function callNYT() {\n    fetch('https://api.nytimes.com/svc/topstories/v2/home.json?api-key=V4DAxXaiDzvGkumnpxfO4LpmCd7dM9om').then(function (response) {\n      if (response.ok) {\n        return response.json();\n      } else {\n        return Promise.reject(response);\n      }\n    }).then(array => updateDOM(array.results))};\n  // ---Helper function to insert the newest 5 as list items in the DOM\n  function updateDOM(storiesArray) {\n    let top5 = storiesArray.slice(0, 5);\n    let stories = top5.map(function (story) {\n      return `<li><a href=\"${story.short_url}\">${story.title}</a></li>`;\n    }).join('');\n    elem.innerHTML = `<ul>${stories}</ul>`;\n  }\n\n  // Inits\n callNYT();\n\n</script>\n",
      "date_published": "2020-10-28T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/19/",
      "url": "https://example.com/vanillajsacademy/posts/19/",
      "title": "Latest 5 NYT top stories on Technology, Arts and Movies",
      "content_html": "\n\n<div class=\"htmlBox\">\n  \n<div id=\"app\">\n  <span id=\"placeholder\">Loading latest stories...</span>\n</div>\n\n</div>\n\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>placeholder<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Loading latest stories...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre>\n\n\n\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">async</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br><br>  <span class=\"token comment\">// Variables</span><br>  <span class=\"token keyword\">let</span> elem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">let</span> apiKey <span class=\"token operator\">=</span> <span class=\"token string\">'V4DAxXaiDzvGkumnpxfO4LpmCd7dM9om'</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">let</span> sections <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'technology'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'arts'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'movies'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'nonexisting'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">let</span> numberOfArticles <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Methods</span><br>  <span class=\"token comment\">// ---Get the arrays and call updateDOM</span><br>  <span class=\"token keyword\">function</span> <span class=\"token function\">callNYT</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">section</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://api.nytimes.com/svc/topstories/v2/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>section<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.json?api-key=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>apiKey<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">array</span> <span class=\"token operator\">=></span> <span class=\"token function\">updateDOM</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><br>      <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        console<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Oh no something went wrong\"</span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">let</span> placeholder <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#placeholder\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>placeholder<span class=\"token punctuation\">)</span> placeholder<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">let</span> errorState <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#errorState'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>errorState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          errorState <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>          errorState<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"errorState\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>          errorState<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">\"Sorry, something went wrong gathering stories on\"</span><br>          app<span class=\"token punctuation\">.</span><span class=\"token function\">after</span><span class=\"token punctuation\">(</span>errorState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><br>        errorState<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>        &lt;code> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>section<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/code><br>        </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// ---Helper function to insert the newest 5 as list items in the DOM</span><br>  <span class=\"token keyword\">function</span> <span class=\"token function\">updateDOM</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">let</span> top5 <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span>results<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> numberOfArticles<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">let</span> stories <span class=\"token operator\">=</span> top5<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">story</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;article>&lt;a href=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>story<span class=\"token punctuation\">.</span>short_url<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>story<span class=\"token punctuation\">.</span>title<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/a>&lt;/article></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">let</span> placeholder <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#placeholder\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>placeholder<span class=\"token punctuation\">)</span> placeholder<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    elem<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>    &lt;h2></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>array<span class=\"token punctuation\">.</span>section<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/h2><br>    </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>stories<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"><br>    </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">// Inits</span><br>  <span class=\"token comment\">// ---Calling also 'nonexisting' as an error on purpose</span><br>  sections<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">section</span> <span class=\"token operator\">=></span> <span class=\"token function\">callNYT</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<div class=\"htmlBox\">\n\n</div>\n\n\n<script async>\n\n  // Variables\n  let elem = document.querySelector('#app');\n  let apiKey = 'V4DAxXaiDzvGkumnpxfO4LpmCd7dM9om';\n  let sections = ['technology', 'arts', 'movies','nonexisting'];\n  let numberOfArticles = 5;\n\n  // Methods\n  // ---Get the arrays and call updateDOM\n  function callNYT(section) {\n    fetch(`https://api.nytimes.com/svc/topstories/v2/${section}.json?api-key=${apiKey}`).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      } else {\n        return Promise.reject(response);\n      }\n    })\n      .then(array => updateDOM(array))\n      .catch(function (error) {\n        console.warn(\"Oh no something went wrong\", error);\n        let placeholder = document.querySelector(\"#placeholder\");\n        if (placeholder) placeholder.remove();\n        let errorState = document.querySelector('#errorState');\n        if (!errorState) {\n          errorState = document.createElement('p');\n          errorState.setAttribute(\"id\", \"errorState\");\n          errorState.textContent = \"Sorry, something went wrong gathering stories on\"\n          app.after(errorState);\n        }\n        errorState.innerHTML += `\n        <code> ${section}</code>\n        `;\n      })\n  };\n\n  // ---Helper function to insert the newest 5 as list items in the DOM\n  function updateDOM(array) {\n    let top5 = array.results.slice(0, numberOfArticles);\n    let stories = top5.map(function (story) {\n      return `<article><a href=\"${story.short_url}\">${story.title}</a></article>`;\n    }).join('');\n    let placeholder = document.querySelector(\"#placeholder\");\n    if (placeholder) placeholder.remove();\n    elem.innerHTML += `\n    <h2>${array.section}</h2>\n    ${stories}\n    `;\n  }\n\n  // Inits\n  // ---Calling also 'nonexisting' as an error on purpose\n  sections.forEach(section => callNYT(section));\n\n</script>\n",
      "date_published": "2020-10-30T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/21/",
      "url": "https://example.com/vanillajsacademy/posts/21/",
      "title": "Sanitizing the NYT API Data",
      "content_html": "\n<!-- Setting the html code -->\n\n\n<!-- Setting the js code -->\n\n\n<!-- Rendering the html -->\n<div class=\"htmlBox\">\n<div id=\"app\">\n  <span id=\"placeholder\">Loading latest stories...</span>\n</div>\n</div>\n\n<!-- Rendering the html and js as syntax highlight -->\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"highlight-line\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></span><br><span class=\"highlight-line\">  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>placeholder<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Loading latest stories...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span></span><br><span class=\"highlight-line\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></span><br><span class=\"highlight-line\"> </span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">async</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br><span class=\"highlight-line\">  <span class=\"token comment\">// Variables</span></span><br><span class=\"highlight-line\">  <span class=\"token keyword\">let</span> elem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><br><span class=\"highlight-line\">  <span class=\"token keyword\">let</span> apiKey <span class=\"token operator\">=</span> <span class=\"token string\">\"V4DAxXaiDzvGkumnpxfO4LpmCd7dM9om\"</span><span class=\"token punctuation\">;</span></span><br><span class=\"highlight-line\">  <span class=\"token keyword\">let</span> sections <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"automobiles\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"books\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"health\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"travel\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></span><br><span class=\"highlight-line\">  <span class=\"token keyword\">let</span> numberOfArticles <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></span><br><span class=\"highlight-line\"></span><br><span class=\"highlight-line\">  <span class=\"token comment\">// Methods</span></span><br><span class=\"highlight-line\">  <span class=\"token comment\">// ---Get the arrays and call updateDOM</span></span><br><span class=\"highlight-line\">  <span class=\"token keyword\">function</span> <span class=\"token function\">callNYT</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">section</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><br><span class=\"highlight-line\">    <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span></span><br><span class=\"highlight-line\">      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://api.nytimes.com/svc/topstories/v2/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>section<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.json?api-key=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>apiKey<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span></span><br><span class=\"highlight-line\">    <span class=\"token punctuation\">)</span></span><br><span class=\"highlight-line\">      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> response<span class=\"token punctuation\">.</span>ok <span class=\"token operator\">?</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span><br><span class=\"highlight-line\">      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">array</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">updateDOM</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span><br><span class=\"highlight-line\">      <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">errorState</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">,</span> section<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><br><span class=\"highlight-line\">  <span class=\"token punctuation\">}</span></span><br><span class=\"highlight-line\"></span><br><span class=\"highlight-line\">  <span class=\"token comment\">// ---Helper function to insert the newest 5 as list items in the DOM</span></span><br><mark class=\"highlight-line highlight-line-active\">  <span class=\"token keyword\">function</span> <span class=\"token function\">updateDOM</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></mark><br><span class=\"highlight-line\">    <span class=\"token keyword\">let</span> latestArticles <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span>results<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> numberOfArticles<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><br><span class=\"highlight-line\">    <span class=\"token keyword\">let</span> stories <span class=\"token operator\">=</span> latestArticles</span><br><span class=\"highlight-line\">      <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">story</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><br><span class=\"highlight-line\">        <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;article>&lt;a href=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">sanitizeHTML</span><span class=\"token punctuation\">(</span>story<span class=\"token punctuation\">.</span>short_url<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">sanitizeHTML</span><span class=\"token punctuation\">(</span>story<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/a>&lt;/article></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></span><br><span class=\"highlight-line\">      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></span><br><span class=\"highlight-line\">      <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><br><span class=\"highlight-line\">    <span class=\"token keyword\">let</span> placeholder <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#placeholder\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><br><span class=\"highlight-line\">    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>placeholder<span class=\"token punctuation\">)</span> placeholder<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><br><span class=\"highlight-line\">    elem<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;h2></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">sanitizeHTML</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">.</span>section<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/h2></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>stories<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></span><br><span class=\"highlight-line\">  <span class=\"token punctuation\">}</span></span><br><span class=\"highlight-line\"></span><br><span class=\"highlight-line\">  <span class=\"token comment\">// ---Sanitizing function</span></span><br><mark class=\"highlight-line highlight-line-active\">  <span class=\"token keyword\">function</span> <span class=\"token function\">sanitizeHTML</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">str</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></mark><br><span class=\"highlight-line\">    <span class=\"token keyword\">return</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">[^\\w. ]</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">gi</span></span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">c</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><br><span class=\"highlight-line\">      <span class=\"token keyword\">return</span> <span class=\"token string\">\"&amp;#\"</span> <span class=\"token operator\">+</span> c<span class=\"token punctuation\">.</span><span class=\"token function\">charCodeAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\";\"</span><span class=\"token punctuation\">;</span></span><br><span class=\"highlight-line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><br><span class=\"highlight-line\">  <span class=\"token punctuation\">}</span></span><br><span class=\"highlight-line\"></span><br><span class=\"highlight-line\">  <span class=\"token comment\">// ---Error message UI</span></span><br><span class=\"highlight-line\">  <span class=\"token keyword\">function</span> <span class=\"token function\">errorState</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> section</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><br><span class=\"highlight-line\">    console<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Oh no something went wrong\"</span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><br><span class=\"highlight-line\">    <span class=\"token keyword\">let</span> placeholder <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#placeholder\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><br><span class=\"highlight-line\">    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>placeholder<span class=\"token punctuation\">)</span> placeholder<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><br><span class=\"highlight-line\">    <span class=\"token keyword\">let</span> errorState <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#errorState\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><br><span class=\"highlight-line\">    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>errorState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></span><br><span class=\"highlight-line\">      errorState <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><br><span class=\"highlight-line\">      errorState<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"errorState\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><br><span class=\"highlight-line\">      errorState<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span></span><br><span class=\"highlight-line\">        <span class=\"token string\">\"Sorry, something went wrong gathering stories on\"</span><span class=\"token punctuation\">;</span></span><br><span class=\"highlight-line\">      app<span class=\"token punctuation\">.</span><span class=\"token function\">after</span><span class=\"token punctuation\">(</span>errorState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><br><span class=\"highlight-line\">    <span class=\"token punctuation\">}</span></span><br>    errorState<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">+=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br><span class=\"highlight-line\">        &lt;code> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>section<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/code></span><br>        </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br><span class=\"highlight-line\">  <span class=\"token punctuation\">}</span></span><br><span class=\"highlight-line\"></span><br><span class=\"highlight-line\">  <span class=\"token comment\">// Inits</span></span><br><span class=\"highlight-line\">  sections<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">section</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">callNYT</span><span class=\"token punctuation\">(</span>section<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<!-- Inserting the js as a script -->\n\n<script async>\n  // Variables\n  let elem = document.querySelector(\"#app\");\n  let apiKey = \"V4DAxXaiDzvGkumnpxfO4LpmCd7dM9om\";\n  let sections = [\"automobiles\", \"books\", \"health\", \"travel\"];\n  let numberOfArticles = 2;\n\n  // Methods\n  // ---Get the arrays and call updateDOM\n  function callNYT(section) {\n    fetch(\n      `https://api.nytimes.com/svc/topstories/v2/${section}.json?api-key=${apiKey}`\n    )\n      .then((response) => response.ok ? response.json() : Promise.reject(response))\n      .then((array) => updateDOM(array))\n      .catch((error) => errorState(error, section));\n  }\n\n  // ---Helper function to insert the newest 5 as list items in the DOM\n  function updateDOM(array) {\n    let latestArticles = array.results.slice(0, numberOfArticles);\n    let stories = latestArticles\n      .map(function (story) {\n        return `<article><a href=\"${sanitizeHTML(story.short_url)}\">${sanitizeHTML(story.title)}</a></article>`;\n      })\n      .join(\"\");\n    let placeholder = document.querySelector(\"#placeholder\");\n    if (placeholder) placeholder.remove();\n    elem.innerHTML += `<h2>${sanitizeHTML(array.section)}</h2>${stories}`;\n  }\n\n  // ---Sanitizing function\n  function sanitizeHTML(str) {\n    return str.replace(/[^\\w. ]/gi, function (c) {\n      return \"&#\" + c.charCodeAt(0) + \";\";\n    });\n  }\n\n  // ---Error message UI\n  function errorState(error, section) {\n    console.warn(\"Oh no something went wrong\", error);\n    let placeholder = document.querySelector(\"#placeholder\");\n    if (placeholder) placeholder.remove();\n    let errorState = document.querySelector(\"#errorState\");\n    if (!errorState) {\n      errorState = document.createElement(\"p\");\n      errorState.setAttribute(\"id\", \"errorState\");\n      errorState.textContent =\n        \"Sorry, something went wrong gathering stories on\";\n      app.after(errorState);\n    }\n    errorState.innerHTML += `\n        <code> ${section}</code>\n        `;\n  }\n\n  // Inits\n  sections.forEach((section) => callNYT(section));\n</script>\n",
      "date_published": "2020-11-01T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/23/",
      "url": "https://example.com/vanillajsacademy/posts/23/",
      "title": "Monsters!",
      "content_html": "\n<!-- Setting the html code -->\n\n\n<!-- Setting the js code -->\n\n\n<!-- Rendering the html -->\n<div class=\"htmlBox\">\n<button id=\"shuffleButton\" class=\"full-width\">Shuffle!</button>\n<div id=\"app\" class=\"monsterGrid\"></div>\n<footer>\n  <hr />\n  <p>\n    Icons by\n    <a href=\"https://thenounproject.com/term/door/311732/\">Jamie Dickinson</a>,\n    <a href=\"https://thenounproject.com/term/monster/184225/\">Nicky Knicky</a>,\n    <a href=\"https://thenounproject.com/term/monster/1510400/\">Alvaro Cabrera</a\n    >, <a href=\"https://thenounproject.com/term/monster/28460/\">Eliricon</a>,\n    <a href=\"https://thenounproject.com/term/monster/82823/\">April Yang</a>,\n    <a href=\"https://thenounproject.com/term/monster/1062009/\">tk66</a>,\n    <a href=\"https://thenounproject.com/term/monster/24990/\">Alex WaZa</a>,\n    <a href=\"https://thenounproject.com/term/monster/37212/\">Husein Aziz</a>,\n    <a href=\"https://thenounproject.com/term/monster/2236082\">iconcheese</a>,\n    and\n    <a href=\"https://thenounproject.com/term/socks/38451/\">Yazmin Alanis</a>.\n  </p>\n</footer>\n</div>\n\n<!-- Rendering the html and js as syntax highlight -->\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>shuffleButton<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>full-width<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Shuffle!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>monsterGrid<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>footer</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hr</span> <span class=\"token punctuation\">/></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><br>    Icons by<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/door/311732/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Jamie Dickinson<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>,<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/184225/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Nicky Knicky<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>,<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/1510400/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Alvaro Cabrera<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><br>    <span class=\"token punctuation\">></span></span>, <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/28460/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Eliricon<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>,<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/82823/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>April Yang<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>,<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/1062009/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>tk66<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>,<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/24990/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Alex WaZa<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>,<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/37212/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Husein Aziz<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>,<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/2236082<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>iconcheese<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>,<br>    and<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/socks/38451/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Yazmin Alanis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>footer</span><span class=\"token punctuation\">></span></span><br> <br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br>  <span class=\"token comment\">// Variables</span><br>  <span class=\"token keyword\">let</span> elem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">let</span> btn <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#shuffleButton\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">let</span> monsters <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><br>    <span class=\"token string\">\"monster1\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"monster2\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"monster3\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"monster4\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"monster5\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"monster6\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"monster7\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"monster8\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"monster9\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"monster10\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"monster11\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"sock\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Methods</span><br>  <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">shuffle</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">let</span> currentIndex <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">let</span> temporaryValue<span class=\"token punctuation\">,</span> randomIndex<span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// While there remain elements to shuffle...</span><br>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">!==</span> currentIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token comment\">// Pick a remaining element...</span><br>      randomIndex <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> currentIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      currentIndex <span class=\"token operator\">-=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span><br><br>      <span class=\"token comment\">// And swap it with the current element.</span><br>      temporaryValue <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>currentIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>      array<span class=\"token punctuation\">[</span>currentIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>randomIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>      array<span class=\"token punctuation\">[</span>randomIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temporaryValue<span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><br>    <span class=\"token keyword\">return</span> array<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">monstersGrid</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    elem<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token function\">shuffle</span><span class=\"token punctuation\">(</span>monsters<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><br>      <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;img class=\"monsterGridItem\" src=\"../../img/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.svg\" alt=\"An image of a </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item <span class=\"token operator\">===</span> <span class=\"token string\">\"sock\"</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"sock\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"monster\"</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\">&lt;/img></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>      <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Inits and listeners</span><br>  <span class=\"token function\">monstersGrid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target <span class=\"token operator\">===</span> btn<span class=\"token punctuation\">)</span> <span class=\"token function\">monstersGrid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<!-- Inserting the js as a script -->\n\n<script>\n  // Variables\n  let elem = document.querySelector(\"#app\");\n  let btn = document.querySelector(\"#shuffleButton\");\n  let monsters = [\n    \"monster1\",\n    \"monster2\",\n    \"monster3\",\n    \"monster4\",\n    \"monster5\",\n    \"monster6\",\n    \"monster7\",\n    \"monster8\",\n    \"monster9\",\n    \"monster10\",\n    \"monster11\",\n    \"sock\",\n  ];\n\n  // Methods\n  let shuffle = function (array) {\n    let currentIndex = array.length;\n    let temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  };\n\n  let monstersGrid = function () {\n    elem.innerHTML = shuffle(monsters.slice())\n      .map(function (item) {\n        return `<img class=\"monsterGridItem\" src=\"../../img/${item}.svg\" alt=\"An image of a ${item === \"sock\" ? \"sock\" : \"monster\"}\"></img>`;\n      })\n      .join(\"\");\n  };\n\n  // Inits and listeners\n  monstersGrid();\n  document.addEventListener(\"click\", function (event) {\n    if (event.target === btn) monstersGrid();\n  });\n</script>\n\n",
      "date_published": "2020-11-03T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/25/",
      "url": "https://example.com/vanillajsacademy/posts/25/",
      "title": "Find the Monsters!",
      "content_html": "\n<!-- Setting the html code -->\n\n\n<!-- Setting the js code -->\n\n\n<!-- Rendering the html -->\n<div class=\"htmlBox\">\n<div id=\"app\" class=\"monsterGrid\"></div>\n<footer>\n  <hr />\n  <p>\n    Icons by\n    <a href=\"https://thenounproject.com/term/door/311732/\">Jamie Dickinson</a>,\n    <a href=\"https://thenounproject.com/term/monster/184225/\">Nicky Knicky</a>,\n    <a href=\"https://thenounproject.com/term/monster/1510400/\">Alvaro Cabrera</a\n    >, <a href=\"https://thenounproject.com/term/monster/28460/\">Eliricon</a>,\n    <a href=\"https://thenounproject.com/term/monster/82823/\">April Yang</a>,\n    <a href=\"https://thenounproject.com/term/monster/1062009/\">tk66</a>,\n    <a href=\"https://thenounproject.com/term/monster/24990/\">Alex WaZa</a>,\n    <a href=\"https://thenounproject.com/term/monster/37212/\">Husein Aziz</a>,\n    <a href=\"https://thenounproject.com/term/monster/2236082\">iconcheese</a>,\n    and\n    <a href=\"https://thenounproject.com/term/socks/38451/\">Yazmin Alanis</a>.\n  </p>\n</footer>\n</div>\n\n<!-- Rendering the html and js as syntax highlight -->\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>monsterGrid<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>footer</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hr</span> <span class=\"token punctuation\">/></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><br>    Icons by<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/door/311732/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Jamie Dickinson<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>,<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/184225/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Nicky Knicky<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>,<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/1510400/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Alvaro Cabrera<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><br>    <span class=\"token punctuation\">></span></span>, <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/28460/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Eliricon<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>,<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/82823/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>April Yang<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>,<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/1062009/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>tk66<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>,<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/24990/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Alex WaZa<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>,<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/37212/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Husein Aziz<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>,<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/2236082<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>iconcheese<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>,<br>    and<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/socks/38451/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Yazmin Alanis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>footer</span><span class=\"token punctuation\">></span></span><br> <br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br>  <span class=\"token comment\">// Variables</span><br>  <span class=\"token keyword\">let</span> elem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">let</span> monsters <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><br>    <span class=\"token string\">\"monster1\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"monster2\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"monster3\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"monster4\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"monster5\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"monster6\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"monster7\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"monster8\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"monster9\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"monster10\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"monster11\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"sock\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Methods</span><br>  <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">shuffle</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">let</span> currentIndex <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">let</span> temporaryValue<span class=\"token punctuation\">,</span> randomIndex<span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// While there remain elements to shuffle...</span><br>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">!==</span> currentIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token comment\">// Pick a remaining element...</span><br>      randomIndex <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> currentIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      currentIndex <span class=\"token operator\">-=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span><br><br>      <span class=\"token comment\">// And swap it with the current element.</span><br>      temporaryValue <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>currentIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>      array<span class=\"token punctuation\">[</span>currentIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>randomIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>      array<span class=\"token punctuation\">[</span>randomIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temporaryValue<span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><br>    <span class=\"token keyword\">return</span> array<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">monstersGrid</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    elem<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token function\">shuffle</span><span class=\"token punctuation\">(</span>monsters<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><br>      <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>        &lt;div class=\"monsterGridItem\" aria-live=\"polite\"><br>          &lt;button data-monster-id=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> class=\"\"><br>            &lt;img src=\"../../img/door.svg\" alt=\"A door whera monster lies behind\">&lt;/img><br>        &lt;/button><br>        &lt;/div></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>      <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">clickHandler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">let</span> monster <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">closest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[data-monster-id]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>monster<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">let</span> monsterID <span class=\"token operator\">=</span> monster<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-monster-id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    monster<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>    &lt;img class=\"monsterGridItem\" src=\"../../img/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>monsterID<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.svg\" alt=\"An image of a </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>monsterID <span class=\"token operator\">===</span> <span class=\"token string\">\"sock\"</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"sock\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"monster\"</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\">&lt;/img></span><span class=\"token template-punctuation string\">`</span></span><br>  <span class=\"token punctuation\">}</span><br>  <span class=\"token comment\">// Inits and listeners</span><br>  <span class=\"token function\">monstersGrid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> clickHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<!-- Inserting the js as a script -->\n\n<script>\n  // Variables\n  let elem = document.querySelector(\"#app\");\n  let monsters = [\n    \"monster1\",\n    \"monster2\",\n    \"monster3\",\n    \"monster4\",\n    \"monster5\",\n    \"monster6\",\n    \"monster7\",\n    \"monster8\",\n    \"monster9\",\n    \"monster10\",\n    \"monster11\",\n    \"sock\",\n  ];\n\n  // Methods\n  let shuffle = function (array) {\n    let currentIndex = array.length;\n    let temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  };\n\n  let monstersGrid = function () {\n    elem.innerHTML = shuffle(monsters.slice())\n      .map(function (item) {\n        return `\n        <div class=\"monsterGridItem\" aria-live=\"polite\">\n          <button data-monster-id=${item} class=\"\">\n            <img src=\"../../img/door.svg\" alt=\"A door whera monster lies behind\"></img>\n        </button>\n        </div>`;\n      })\n      .join(\"\");\n  };\n\n  let clickHandler = function (event) {\n    let monster = event.target.closest('[data-monster-id]');\n    if (!monster) return;\n    let monsterID = monster.getAttribute('data-monster-id');\n    monster.parentNode.innerHTML = `\n    <img class=\"monsterGridItem\" src=\"../../img/${monsterID}.svg\" alt=\"An image of a ${monsterID === \"sock\" ? \"sock\" : \"monster\"}\"></img>`\n  }\n  // Inits and listeners\n  monstersGrid();\n  document.addEventListener(\"click\", clickHandler);\n\n</script>\n\n",
      "date_published": "2020-11-06T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/27/",
      "url": "https://example.com/vanillajsacademy/posts/27/",
      "title": "Find the Monsters before the sock!",
      "content_html": "\n<!-- Setting the html code -->\n\n\n<!-- Setting the js code -->\n\n\n<!-- Rendering the html -->\n<div class=\"htmlBox\">\n<header class=\"full-width l-cluster scoreHeader\">\n  <div>\n    <p id=\"score\" aria-live=\"polite\">Score: 0</p>\n  </div>\n</header>\n<div id=\"app\" class=\"monsterGrid\"></div>\n<footer>\n  <hr />\n  <p>\n    Icons by\n    <a href=\"https://thenounproject.com/term/door/311732/\">Jamie Dickinson</a>,\n    <a href=\"https://thenounproject.com/term/monster/184225/\">Nicky Knicky</a>,\n    <a href=\"https://thenounproject.com/term/monster/1510400/\">Alvaro Cabrera</a>, <a\n      href=\"https://thenounproject.com/term/monster/28460/\">Eliricon</a>,\n    <a href=\"https://thenounproject.com/term/monster/82823/\">April Yang</a>,\n    <a href=\"https://thenounproject.com/term/monster/1062009/\">tk66</a>,\n    <a href=\"https://thenounproject.com/term/monster/24990/\">Alex WaZa</a>,\n    <a href=\"https://thenounproject.com/term/monster/37212/\">Husein Aziz</a>,\n    <a href=\"https://thenounproject.com/term/monster/2236082\">iconcheese</a>,\n    and\n    <a href=\"https://thenounproject.com/term/socks/38451/\">Yazmin Alanis</a>.\n  </p>\n</footer>\n</div>\n\n<!-- Rendering the html and js as syntax highlight -->\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>header</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>full-width l-cluster scoreHeader<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>score<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aria-live</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>polite<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Score: 0<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>header</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>monsterGrid<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>footer</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hr</span> <span class=\"token punctuation\">/></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><br>    Icons by<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/door/311732/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Jamie Dickinson<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>,<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/184225/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Nicky Knicky<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>,<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/1510400/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Alvaro Cabrera<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>, <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span><br>      <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/28460/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Eliricon<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>,<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/82823/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>April Yang<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>,<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/1062009/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>tk66<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>,<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/24990/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Alex WaZa<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>,<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/37212/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Husein Aziz<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>,<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/2236082<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>iconcheese<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>,<br>    and<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/socks/38451/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Yazmin Alanis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>.<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>footer</span><span class=\"token punctuation\">></span></span><br> <br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br>  <span class=\"token comment\">// Variables</span><br>  <span class=\"token keyword\">let</span> elem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">let</span> scoreElem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#score'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">let</span> score <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">let</span> monsters <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><br>    <span class=\"token string\">\"monster1\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"monster2\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"monster3\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"monster4\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"monster5\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"monster6\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"monster7\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"monster8\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"monster9\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"monster10\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"monster11\"</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">\"sock\"</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">let</span> playButton <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  playButton<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"playButton\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  playButton<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token string\">\"Play again\"</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Methods</span><br>  <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">shuffle</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">let</span> currentIndex <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">let</span> temporaryValue<span class=\"token punctuation\">,</span> randomIndex<span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// While there remain elements to shuffle...</span><br>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">!==</span> currentIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token comment\">// Pick a remaining element...</span><br>      randomIndex <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> currentIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      currentIndex <span class=\"token operator\">-=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span><br><br>      <span class=\"token comment\">// And swap it with the current element.</span><br>      temporaryValue <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>currentIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>      array<span class=\"token punctuation\">[</span>currentIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>randomIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>      array<span class=\"token punctuation\">[</span>randomIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temporaryValue<span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><br>    <span class=\"token keyword\">return</span> array<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">monstersGrid</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    elem<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token function\">shuffle</span><span class=\"token punctuation\">(</span>monsters<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><br>      <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>        &lt;div class=\"monsterGridItem\" aria-live=\"polite\"><br>          &lt;button data-monster-id=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>item<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> class=\"\"><br>            &lt;img src=\"../../img/door.svg\" alt=\"A door where a monster lies behind\">&lt;/img><br>        &lt;/button><br>        &lt;/div></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>      <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">swapImage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">monster<span class=\"token punctuation\">,</span> monsterID</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    monster<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>    &lt;img class=\"monsterGridItem\" src=\"../../img/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>monsterID<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.svg\" alt=\"An image of a </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>monsterID <span class=\"token operator\">===</span> <span class=\"token string\">\"sock\"</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"sock\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"monster\"</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\">&lt;/img></span><span class=\"token template-punctuation string\">`</span></span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">goodPick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    score<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>score <span class=\"token operator\">===</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      scoreElem<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Score: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>score<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">. Yay you've won! 🎉</span><span class=\"token template-punctuation string\">`</span></span><br>      <span class=\"token function\">endGame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    scoreElem<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Score: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>score<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">wrongPick</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    scoreElem<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Score: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>score<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">. You've found a sock and lost the game 😢</span><span class=\"token template-punctuation string\">`</span></span><br>    <span class=\"token function\">endGame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">endGame</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">let</span> doorsLeft <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[data-monster-id]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><br>    doorsLeft<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">door</span> <span class=\"token operator\">=></span> door<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    scoreElem<span class=\"token punctuation\">.</span><span class=\"token function\">after</span><span class=\"token punctuation\">(</span>playButton<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">restartGame</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#playButton'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    score <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><br>    scoreElem<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Score: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>score<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">monstersGrid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">clickHandler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">// if it is the playButton, restart game</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target <span class=\"token operator\">===</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#playButton'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">restartGame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token comment\">// if it is a door, swap images</span><br>    <span class=\"token keyword\">let</span> monster <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">closest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[data-monster-id]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>monster<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">let</span> monsterID <span class=\"token operator\">=</span> monster<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-monster-id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">swapImage</span><span class=\"token punctuation\">(</span>monster<span class=\"token punctuation\">,</span> monsterID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token comment\">// decide if it was a good or wrong pick</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>monsterID <span class=\"token operator\">===</span> <span class=\"token string\">\"sock\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token function\">wrongPick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token function\">goodPick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">// Inits and listeners</span><br>  <span class=\"token function\">monstersGrid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> clickHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<!-- Inserting the js as a script -->\n\n<script>\n  // Variables\n  let elem = document.querySelector(\"#app\");\n  let scoreElem = document.querySelector('#score');\n  let score = 0;\n  let monsters = [\n    \"monster1\",\n    \"monster2\",\n    \"monster3\",\n    \"monster4\",\n    \"monster5\",\n    \"monster6\",\n    \"monster7\",\n    \"monster8\",\n    \"monster9\",\n    \"monster10\",\n    \"monster11\",\n    \"sock\",\n  ];\n  let playButton = document.createElement('button');\n  playButton.setAttribute(\"id\", \"playButton\");\n  playButton.textContent = \"Play again\";\n\n  // Methods\n  let shuffle = function (array) {\n    let currentIndex = array.length;\n    let temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  };\n\n  let monstersGrid = function () {\n    elem.innerHTML = shuffle(monsters.slice())\n      .map(function (item) {\n        return `\n        <div class=\"monsterGridItem\" aria-live=\"polite\">\n          <button data-monster-id=${item} class=\"\">\n            <img src=\"../../img/door.svg\" alt=\"A door where a monster lies behind\"></img>\n        </button>\n        </div>`;\n      })\n      .join(\"\");\n  };\n\n  let swapImage = function (monster, monsterID) {\n    monster.parentNode.innerHTML = `\n    <img class=\"monsterGridItem\" src=\"../../img/${monsterID}.svg\" alt=\"An image of a ${monsterID === \"sock\" ? \"sock\" : \"monster\"}\"></img>`\n  }\n\n  let goodPick = function () {\n    score++;\n    if (score === 11) {\n      scoreElem.textContent = `Score: ${score}. Yay you've won! 🎉`\n      endGame();\n      return;\n    }\n    scoreElem.textContent = `Score: ${score}`;\n  }\n\n  let wrongPick = function () {\n    scoreElem.textContent = `Score: ${score}. You've found a sock and lost the game 😢`\n    endGame();\n  }\n\n  let endGame = function () {\n    let doorsLeft = Array.from(document.querySelectorAll('[data-monster-id]'))\n    doorsLeft.forEach(door => door.remove());\n    scoreElem.after(playButton);\n  }\n\n  let restartGame = function () {\n    document.querySelector('#playButton').remove();\n    score = 0;\n    scoreElem.textContent = `Score: ${score}`;\n    monstersGrid();\n  }\n\n  let clickHandler = function (event) {\n    // if it is the playButton, restart game\n    if (event.target === document.querySelector('#playButton')) return restartGame();\n    // if it is a door, swap images\n    let monster = event.target.closest('[data-monster-id]');\n    if (!monster) return;\n    let monsterID = monster.getAttribute('data-monster-id');\n    swapImage(monster, monsterID);\n    // decide if it was a good or wrong pick\n    if (monsterID === \"sock\") {\n      wrongPick();\n    }\n    else {\n      goodPick();\n    }\n  }\n\n  // Inits and listeners\n  monstersGrid();\n  document.addEventListener(\"click\", clickHandler);\n\n</script>\n",
      "date_published": "2020-11-07T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/29/",
      "url": "https://example.com/vanillajsacademy/posts/29/",
      "title": "Table of Contents",
      "content_html": "\n<!-- Setting the html code -->\n\n\n<!-- Setting the js code -->\n\n\n<!-- Rendering the html -->\n<div class=\"htmlBox\">\n<ol id=\"table-of-contents\"></ol>\n\n<h2 id=\"cat-o-nine-tails\">Cat O'Nine Tails</h2>\n\n<!-- etc etc -->\n\n  <p>Cat o'nine tails Pieces of Eight swab carouser tackle. Pink hornswaggle gabion Sea Legs Davy Jones' Locker.</p>\n\n<p>Hang the jib Nelsons folly trysail ahoy prow. Transom strike colors scallywag aft league.</p>\n\n<h3 id=\"the-brig\">The Brig</h3>\n\n<p>Dead men tell no tales topmast Sail ho Davy Jones' Locker chantey. Wherry fluke pillage rope's end brig.</p>\n\n<h4 id=\"privateer\">Privateer</h4>\n\n<p>Tack topgallant draft line flogging. Maroon overhaul grog blossom Privateer main sheet.</p>\n\n<p>Provost me cackle fruit Corsair Cat o'nine tails. Hempen halter Davy Jones' Locker clipper bring a spring upon her\n  cable run a shot across the bow.</p>\n\n<h2 id=\"ahoy\">Ahoy</h2>\n\n<p>Booty squiffy wench overhaul ahoy. Parrel Pirate Round long clothes long boat come about.</p>\n\n<p>Squiffy jack crow's nest bilged on her anchor barkadeer. Snow bucko mizzen six pounders tack.</p>\n\n<h3 id=\"man-of-war\">Man-of-War</h3>\n\n<p>Lee lad nipperkin avast pressgang. Man-of-war prow ho Sail ho landlubber or just lubber.</p>\n\n<p>Ho no prey, no pay fire ship salmagundi capstan. Hail-shot doubloon wherry loaded to the gunwalls cutlass.</p>\n\n<h2 id=\"corsair\">Corsair</h2>\n\n<p>Corsair chantey hardtack ahoy snow. Maroon cog galleon topmast tender.</p>\n\n<h3 id=\"shiver-me-timbers\">Shiver Me Timbers</h3>\n\n<p>Galleon nipper Shiver me timbers lugger Nelsons folly. Wench ballast scurvy man-of-war hearties.</p>\n\n<p>Poop deck clap of thunder Corsair grog hornswaggle. Dead men tell no tales brigantine long clothes black spot sutler.\n</p>\n\n<h4 id=\"scurvy-dog\">Scurvy Dog</h4>\n\n<p>Jury mast Letter of Marque boatswain scurvy sheet. Jolly boat plunder jack starboard Pirate Round.</p>\n\n<p>Holystone bring a spring upon her cable grog blossom deadlights league. Lanyard gabion reef sails booty gaff.</p>\n\n<h4 id=\"sea-legs\">Sea Legs</h4>\n\n<p>Sea Legs to go on account skysail Yellow Jack heave down. Spanker heave down yawl starboard barque.</p>\n\n<p>To go on account hulk swing the lead heave to tack. Fore fire in the hole prow run a rig Jack Ketch.</p>\n\n<h2 id=\"quarterdeck\">On the Quarterdeck</h2>\n\n<p>Tack chase red ensign league pinnace. Holystone quarterdeck me boatswain rope's end.</p>\n\n<p>Sink me lanyard Pieces of Eight starboard black spot. Blimey heave down crimp mutiny matey.</p>\n\n<h3 id=\"jolly-roger\">Jolly Roger</h3>\n\n<p>Belay piracy come about jolly boat transom. Heave to gally snow Arr wherry.</p>\n\n<p>Sutler Davy Jones' Locker ahoy walk the plank lugger. Jolly Roger matey hornswaggle Privateer marooned.</p>\n\n<h2 id=\"davy-jones-locker\">Davy Jones' Locker</h2>\n\n<p>Davy Jones' Locker jib trysail bowsprit heave down. Transom square-rigged clipper Jack Ketch chandler.</p>\n\n<p>Square-rigged yawl execution dock sloop American Main. Six pounders red ensign lugger heave to dead men tell no\n  tales.</p>\n\n<h3 id=\"sloop\">Sloop</h3>\n\n<p>Spanker rutters Arr sloop pinnace. List crimp swab Blimey grog.</p>\n\n<p>Shiver me timbers hulk black jack Pirate Round clap of thunder. Scuppers six pounders carouser spirits jib.</p>\n\n<footer>\n  <em>Text provided by <a href=\"https://pirateipsum.me/\">Pirate Ipsum</a>.</em>\n</footer>\n</div>\n\n<!-- Rendering the html and js as syntax highlight -->\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ol</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>table-of-contents<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ol</span><span class=\"token punctuation\">></span></span><br><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>cat-o-nine-tails<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Cat O'Nine Tails<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><br><br><span class=\"token comment\">&lt;!-- etc etc --></span><br> <br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br>  <span class=\"token comment\">// Variables</span><br>  <span class=\"token keyword\">let</span> toc <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#table-of-contents'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">let</span> headingsLevel2 <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'h2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Methods</span><br>  <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">renderTOC</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">headings<span class=\"token punctuation\">,</span> list</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    list<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> headings<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">heading</span> <span class=\"token operator\">=></span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;li>&lt;a href=\"#</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>heading<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>heading<span class=\"token punctuation\">.</span>textContent<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/a>&lt;/li></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">// Inits and listeners</span><br>  <span class=\"token function\">renderTOC</span><span class=\"token punctuation\">(</span>headingsLevel2<span class=\"token punctuation\">,</span> toc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<!-- Inserting the js as a script -->\n\n<script>\n  // Variables\n  let toc = document.querySelector('#table-of-contents');\n  let headingsLevel2 = Array.prototype.slice.call(document.querySelectorAll('h2'));\n\n  // Methods\n  let renderTOC = function (headings, list) {\n    list.innerHTML = headings.map(heading => `<li><a href=\"#${heading.id}\">${heading.textContent}</a></li>`).join('');\n  }\n\n  // Inits and listeners\n  renderTOC(headingsLevel2, toc);\n</script>\n",
      "date_published": "2020-11-09T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/31/",
      "url": "https://example.com/vanillajsacademy/posts/31/",
      "title": "Table of Contents - Missing IDs",
      "content_html": "\n<!-- Setting the html code -->\n\n\n<!-- Setting the js code -->\n\n\n<!-- Rendering the html -->\n<div class=\"htmlBox\">\n  \n<ol id=\"table-of-contents\"></ol>\n\n<!-- etc etc -->\n\n  <h2>Cat O'Nine Tails</h2>\n\n  <p>\n    Cat o'nine tails Pieces of Eight swab carouser tackle. Pink hornswaggle\n    gabion Sea Legs Davy Jones' Locker.\n  </p>\n\n  <p>\n    Hang the jib Nelsons folly trysail ahoy prow. Transom strike colors\n    scallywag aft league.\n  </p>\n\n  <h3 id=\"the-brig\">The Brig</h3>\n\n  <p>\n    Dead men tell no tales topmast Sail ho Davy Jones' Locker chantey. Wherry\n    fluke pillage rope's end brig.\n  </p>\n\n  <h4>Privateer</h4>\n\n  <p>\n    Tack topgallant draft line flogging. Maroon overhaul grog blossom Privateer\n    main sheet.\n  </p>\n\n  <p>\n    Provost me cackle fruit Corsair Cat o'nine tails. Hempen halter Davy Jones'\n    Locker clipper bring a spring upon her cable run a shot across the bow.\n  </p>\n\n  <h2>Ahoy</h2>\n\n  <p>\n    Booty squiffy wench overhaul ahoy. Parrel Pirate Round long clothes long\n    boat come about.\n  </p>\n\n  <p>\n    Squiffy jack crow's nest bilged on her anchor barkadeer. Snow bucko mizzen\n    six pounders tack.\n  </p>\n\n  <h3 id=\"man-of-war\">Man-of-War</h3>\n\n  <p>\n    Lee lad nipperkin avast pressgang. Man-of-war prow ho Sail ho landlubber or\n    just lubber.\n  </p>\n\n  <p>\n    Ho no prey, no pay fire ship salmagundi capstan. Hail-shot doubloon wherry\n    loaded to the gunwalls cutlass.\n  </p>\n\n  <h2 id=\"corsair\">Corsair</h2>\n\n  <p>Corsair chantey hardtack ahoy snow. Maroon cog galleon topmast tender.</p>\n\n  <h3 id=\"shiver-me-timbers\">Shiver Me Timbers</h3>\n\n  <p>\n    Galleon nipper Shiver me timbers lugger Nelsons folly. Wench ballast scurvy\n    man-of-war hearties.\n  </p>\n\n  <p>\n    Poop deck clap of thunder Corsair grog hornswaggle. Dead men tell no tales\n    brigantine long clothes black spot sutler.\n  </p>\n\n  <h4 id=\"scurvy-dog\">Scurvy Dog</h4>\n\n  <p>\n    Jury mast Letter of Marque boatswain scurvy sheet. Jolly boat plunder jack\n    starboard Pirate Round.\n  </p>\n\n  <p>\n    Holystone bring a spring upon her cable grog blossom deadlights league.\n    Lanyard gabion reef sails booty gaff.\n  </p>\n\n  <h4>Sea Legs</h4>\n\n  <p>\n    Sea Legs to go on account skysail Yellow Jack heave down. Spanker heave down\n    yawl starboard barque.\n  </p>\n\n  <p>\n    To go on account hulk swing the lead heave to tack. Fore fire in the hole\n    prow run a rig Jack Ketch.\n  </p>\n\n  <h2 id=\"quarterdeck\">On the Quarterdeck</h2>\n\n  <p>\n    Tack chase red ensign league pinnace. Holystone quarterdeck me boatswain\n    rope's end.\n  </p>\n\n  <p>\n    Sink me lanyard Pieces of Eight starboard black spot. Blimey heave down\n    crimp mutiny matey.\n  </p>\n\n  <h3 id=\"jolly-roger\">Jolly Roger</h3>\n\n  <p>\n    Belay piracy come about jolly boat transom. Heave to gally snow Arr wherry.\n  </p>\n\n  <p>\n    Sutler Davy Jones' Locker ahoy walk the plank lugger. Jolly Roger matey\n    hornswaggle Privateer marooned.\n  </p>\n\n  <h2>Davy Jones' Locker</h2>\n\n  <p>\n    Davy Jones' Locker jib trysail bowsprit heave down. Transom square-rigged\n    clipper Jack Ketch chandler.\n  </p>\n\n  <p>\n    Square-rigged yawl execution dock sloop American Main. Six pounders red\n    ensign lugger heave to dead men tell no tales.\n  </p>\n\n  <h3 id=\"sloop\">Sloop</h3>\n\n  <p>Spanker rutters Arr sloop pinnace. List crimp swab Blimey grog.</p>\n\n  <p>\n    Shiver me timbers hulk black jack Pirate Round clap of thunder. Scuppers six\n    pounders carouser spirits jib.\n  </p>\n\n  <footer>\n    <em>Text provided by <a href=\"https://pirateipsum.me/\">Pirate Ipsum</a>.</em>\n  </footer>\n</div>\n\n<!-- Rendering the html and js as syntax highlight -->\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ol</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>table-of-contents<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ol</span><span class=\"token punctuation\">></span></span><br><br><span class=\"token comment\">&lt;!-- etc etc --></span><br> <br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br>  <span class=\"token comment\">// Variables</span><br>  <span class=\"token keyword\">let</span> toc <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#table-of-contents\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">let</span> headingsLevel2 <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><br>    document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"h2\"</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Methods</span><br>  <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">prepareHeadings</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">headings</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    headings<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">heading</span> <span class=\"token operator\">=></span> heading<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> heading <span class=\"token operator\">:</span> <span class=\"token function\">makeID</span><span class=\"token punctuation\">(</span>heading<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">makeID</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">heading</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">let</span> newID <span class=\"token operator\">=</span> heading<span class=\"token punctuation\">.</span>textContent<br>      <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"g\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-\"</span><span class=\"token punctuation\">)</span><br>      <span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    heading<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> newID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">renderTOC</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">headings<span class=\"token punctuation\">,</span> list</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token function\">prepareHeadings</span><span class=\"token punctuation\">(</span>headings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    list<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> headings<br>      <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><br>        <span class=\"token punctuation\">(</span><span class=\"token parameter\">heading</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span><br>          <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;li>&lt;a href=\"#</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>heading<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>heading<span class=\"token punctuation\">.</span>textContent<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/a>&lt;/li></span><span class=\"token template-punctuation string\">`</span></span><br>      <span class=\"token punctuation\">)</span><br>      <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Inits and listeners</span><br>  <span class=\"token function\">renderTOC</span><span class=\"token punctuation\">(</span>headingsLevel2<span class=\"token punctuation\">,</span> toc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<!-- Inserting the js as a script -->\n\n<script>\n  // Variables\n  let toc = document.querySelector(\"#table-of-contents\");\n  let headingsLevel2 = Array.prototype.slice.call(\n    document.querySelectorAll(\"h2\")\n  );\n\n  // Methods\n  let prepareHeadings = function (headings) {\n    headings.map(heading => heading.hasAttribute(\"id\") ? heading : makeID(heading));\n  };\n\n  let makeID = function (heading) {\n    let newID = heading.textContent\n      .replace(new RegExp(\" \", \"g\"), \"-\")\n      .toLowerCase();\n    heading.setAttribute(\"id\", newID);\n  };\n\n  let renderTOC = function (headings, list) {\n    prepareHeadings(headings);\n    list.innerHTML = headings\n      .map(\n        (heading) =>\n          `<li><a href=\"#${heading.id}\">${heading.textContent}</a></li>`\n      )\n      .join(\"\");\n  };\n\n  // Inits and listeners\n  renderTOC(headingsLevel2, toc);\n</script>\n",
      "date_published": "2020-11-11T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/33/",
      "url": "https://example.com/vanillajsacademy/posts/33/",
      "title": "Table of Contents - Scope",
      "content_html": "\n<!-- Setting the html code -->\n\n\n<!-- Setting the js code -->\n\n\n<!-- Rendering the html -->\n<div class=\"htmlBox\">\n  \n<ol id=\"table-of-contents\"></ol>\n\n<!-- etc etc -->\n\n  <h2>Cat O'Nine Tails</h2>\n\n  <p>\n    Cat o'nine tails Pieces of Eight swab carouser tackle. Pink hornswaggle\n    gabion Sea Legs Davy Jones' Locker.\n  </p>\n\n  <p>\n    Hang the jib Nelsons folly trysail ahoy prow. Transom strike colors\n    scallywag aft league.\n  </p>\n\n  <h3 id=\"the-brig\">The Brig</h3>\n\n  <p>\n    Dead men tell no tales topmast Sail ho Davy Jones' Locker chantey. Wherry\n    fluke pillage rope's end brig.\n  </p>\n\n  <h4>Privateer</h4>\n\n  <p>\n    Tack topgallant draft line flogging. Maroon overhaul grog blossom Privateer\n    main sheet.\n  </p>\n\n  <p>\n    Provost me cackle fruit Corsair Cat o'nine tails. Hempen halter Davy Jones'\n    Locker clipper bring a spring upon her cable run a shot across the bow.\n  </p>\n\n  <h2>Ahoy</h2>\n\n  <p>\n    Booty squiffy wench overhaul ahoy. Parrel Pirate Round long clothes long\n    boat come about.\n  </p>\n\n  <p>\n    Squiffy jack crow's nest bilged on her anchor barkadeer. Snow bucko mizzen\n    six pounders tack.\n  </p>\n\n  <h3 id=\"man-of-war\">Man-of-War</h3>\n\n  <p>\n    Lee lad nipperkin avast pressgang. Man-of-war prow ho Sail ho landlubber or\n    just lubber.\n  </p>\n\n  <p>\n    Ho no prey, no pay fire ship salmagundi capstan. Hail-shot doubloon wherry\n    loaded to the gunwalls cutlass.\n  </p>\n\n  <h2 id=\"corsair\">Corsair</h2>\n\n  <p>Corsair chantey hardtack ahoy snow. Maroon cog galleon topmast tender.</p>\n\n  <h3 id=\"shiver-me-timbers\">Shiver Me Timbers</h3>\n\n  <p>\n    Galleon nipper Shiver me timbers lugger Nelsons folly. Wench ballast scurvy\n    man-of-war hearties.\n  </p>\n\n  <p>\n    Poop deck clap of thunder Corsair grog hornswaggle. Dead men tell no tales\n    brigantine long clothes black spot sutler.\n  </p>\n\n  <h4 id=\"scurvy-dog\">Scurvy Dog</h4>\n\n  <p>\n    Jury mast Letter of Marque boatswain scurvy sheet. Jolly boat plunder jack\n    starboard Pirate Round.\n  </p>\n\n  <p>\n    Holystone bring a spring upon her cable grog blossom deadlights league.\n    Lanyard gabion reef sails booty gaff.\n  </p>\n\n  <h4>Sea Legs</h4>\n\n  <p>\n    Sea Legs to go on account skysail Yellow Jack heave down. Spanker heave down\n    yawl starboard barque.\n  </p>\n\n  <p>\n    To go on account hulk swing the lead heave to tack. Fore fire in the hole\n    prow run a rig Jack Ketch.\n  </p>\n\n  <h2 id=\"quarterdeck\">On the Quarterdeck</h2>\n\n  <p>\n    Tack chase red ensign league pinnace. Holystone quarterdeck me boatswain\n    rope's end.\n  </p>\n\n  <p>\n    Sink me lanyard Pieces of Eight starboard black spot. Blimey heave down\n    crimp mutiny matey.\n  </p>\n\n  <h3 id=\"jolly-roger\">Jolly Roger</h3>\n\n  <p>\n    Belay piracy come about jolly boat transom. Heave to gally snow Arr wherry.\n  </p>\n\n  <p>\n    Sutler Davy Jones' Locker ahoy walk the plank lugger. Jolly Roger matey\n    hornswaggle Privateer marooned.\n  </p>\n\n  <h2>Davy Jones' Locker</h2>\n\n  <p>\n    Davy Jones' Locker jib trysail bowsprit heave down. Transom square-rigged\n    clipper Jack Ketch chandler.\n  </p>\n\n  <p>\n    Square-rigged yawl execution dock sloop American Main. Six pounders red\n    ensign lugger heave to dead men tell no tales.\n  </p>\n\n  <h3 id=\"sloop\">Sloop</h3>\n\n  <p>Spanker rutters Arr sloop pinnace. List crimp swab Blimey grog.</p>\n\n  <p>\n    Shiver me timbers hulk black jack Pirate Round clap of thunder. Scuppers six\n    pounders carouser spirits jib.\n  </p>\n\n  <footer>\n    <em>Text provided by <a href=\"https://pirateipsum.me/\">Pirate Ipsum</a>.</em>\n  </footer>\n</div>\n\n<!-- Rendering the html and js as syntax highlight -->\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ol</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>table-of-contents<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ol</span><span class=\"token punctuation\">></span></span><br><br><span class=\"token comment\">&lt;!-- etc etc --></span><br> <br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br><br>  <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">tocMaker</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">headingLevel<span class=\"token punctuation\">,</span> tocID</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token comment\">// Variables</span><br>    <span class=\"token keyword\">let</span> toc <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span>tocID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">let</span> headingsArray <span class=\"token operator\">=</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><br>      document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span>headingLevel<span class=\"token punctuation\">)</span><br>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Methods</span><br>    <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">prepareHeadings</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">headings</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      headings<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">heading</span> <span class=\"token operator\">=></span> heading<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> heading <span class=\"token operator\">:</span> <span class=\"token function\">makeID</span><span class=\"token punctuation\">(</span>heading<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">makeID</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">heading</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">let</span> newID <span class=\"token operator\">=</span> heading<span class=\"token punctuation\">.</span>textContent<br>        <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"g\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-\"</span><span class=\"token punctuation\">)</span><br>        <span class=\"token punctuation\">.</span><span class=\"token function\">toLowerCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      heading<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">,</span> newID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">let</span> <span class=\"token function-variable function\">renderTOC</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">headings<span class=\"token punctuation\">,</span> list</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token function\">prepareHeadings</span><span class=\"token punctuation\">(</span>headings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      list<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> headings<br>        <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><br>          <span class=\"token punctuation\">(</span><span class=\"token parameter\">heading</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span><br>            <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;li>&lt;a href=\"#</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>heading<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>heading<span class=\"token punctuation\">.</span>textContent<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/a>&lt;/li></span><span class=\"token template-punctuation string\">`</span></span><br>        <span class=\"token punctuation\">)</span><br>        <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Inits and listeners</span><br>    <span class=\"token function\">renderTOC</span><span class=\"token punctuation\">(</span>headingsArray<span class=\"token punctuation\">,</span> toc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token function\">tocMaker</span><span class=\"token punctuation\">(</span><span class=\"token string\">'h2'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'#table-of-contents'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<!-- Inserting the js as a script -->\n\n<script>\n\n  let tocMaker = function (headingLevel, tocID) {\n\n    // Variables\n    let toc = document.querySelector(tocID);\n    let headingsArray = Array.prototype.slice.call(\n      document.querySelectorAll(headingLevel)\n    );\n\n    // Methods\n    let prepareHeadings = function (headings) {\n      headings.map(heading => heading.hasAttribute(\"id\") ? heading : makeID(heading));\n    };\n    let makeID = function (heading) {\n      let newID = heading.textContent\n        .replace(new RegExp(\" \", \"g\"), \"-\")\n        .toLowerCase();\n      heading.setAttribute(\"id\", newID);\n    };\n    let renderTOC = function (headings, list) {\n      prepareHeadings(headings);\n      list.innerHTML = headings\n        .map(\n          (heading) =>\n            `<li><a href=\"#${heading.id}\">${heading.textContent}</a></li>`\n        )\n        .join(\"\");\n\n    };\n\n    // Inits and listeners\n    renderTOC(headingsArray, toc);\n    \n  }\n\n  tocMaker('h2','#table-of-contents');\n\n</script>\n",
      "date_published": "2020-11-13T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/35/",
      "url": "https://example.com/vanillajsacademy/posts/35/",
      "title": "Weather App",
      "content_html": "\n<!-- Setting the html code -->\n\n\n<!-- Setting the js code -->\n\n\n<!-- Rendering the html -->\n<div class=\"htmlBox\">\n  \n<div id=\"app\" class=\"weatherApp l-stack\">Checking the weather near you...</div>\n\n</div>\n\n<!-- Rendering the html and js as syntax highlight -->\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>weatherApp l-stack<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Checking the weather near you...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br> <br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br><br>  <span class=\"token comment\">// Variables</span><br>  <span class=\"token keyword\">let</span> locationAPI <span class=\"token operator\">=</span> <span class=\"token string\">'https://ipapi.co/json'</span><br>  <span class=\"token keyword\">let</span> city<span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">let</span> weatherAPI <span class=\"token operator\">=</span> <span class=\"token string\">' https://api.weatherbit.io/v2.0/current'</span><br>  <span class=\"token keyword\">let</span> weatherKey <span class=\"token operator\">=</span> <span class=\"token string\">'5503cec5734c4b79a0f908a36937391e'</span><br><br>  <span class=\"token keyword\">let</span> app <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Methods</span><br>  <span class=\"token keyword\">function</span> <span class=\"token function\">renderWeather</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prop</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    app<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>    &lt;p>&lt;svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"icon\">&lt;path d=\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z\">&lt;/path>&lt;circle cx=\"12\" cy=\"10\" r=\"3\">&lt;/circle>&lt;/svg> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>city<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/p><br>    &lt;div class=\"weatherGrid\"><br>      &lt;img src=\"https://www.weatherbit.io/static/img/icons/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>prop<span class=\"token punctuation\">.</span>weather<span class=\"token punctuation\">.</span>icon<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.png\" alt=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>prop<span class=\"token punctuation\">.</span>weather<span class=\"token punctuation\">.</span>description<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\">&lt;/img><br>      &lt;div><br>        &lt;p class=\"temperature\">&lt;strong></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>prop<span class=\"token punctuation\">.</span>app_temp<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">º C&lt;/strong>&lt;/span><br>        &lt;p class=\"description\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>prop<span class=\"token punctuation\">.</span>weather<span class=\"token punctuation\">.</span>description<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/p><br>      &lt;div><br>    &lt;/div></span><span class=\"token template-punctuation string\">`</span></span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">function</span> <span class=\"token function\">getWeather</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>locationAPI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">locationData</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      city <span class=\"token operator\">=</span> locationData<span class=\"token punctuation\">.</span>city<span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">let</span> lat <span class=\"token operator\">=</span> locationData<span class=\"token punctuation\">.</span>latitude<span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">let</span> lon <span class=\"token operator\">=</span> locationData<span class=\"token punctuation\">.</span>longitude<span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">let</span> locationParameters <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&amp;lat=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>lat<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;lon=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>lon<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>weatherAPI<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">?</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>locationParameters<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;key=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>weatherKey<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">weatherData</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">let</span> userWeather <span class=\"token operator\">=</span> weatherData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>      <span class=\"token function\">renderWeather</span><span class=\"token punctuation\">(</span>userWeather<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      console<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">// Inits and listeners</span><br>  <span class=\"token function\">getWeather</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<!-- Inserting the js as a script -->\n\n<script>\n\n  // Variables\n  let locationAPI = 'https://ipapi.co/json'\n  let city;\n\n  let weatherAPI = ' https://api.weatherbit.io/v2.0/current'\n  let weatherKey = '5503cec5734c4b79a0f908a36937391e'\n\n  let app = document.querySelector('#app');\n\n  // Methods\n  function renderWeather(prop) {\n    app.innerHTML = `\n    <p><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"icon\"><path d=\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z\"></path><circle cx=\"12\" cy=\"10\" r=\"3\"></circle></svg> ${city}</p>\n    <div class=\"weatherGrid\">\n      <img src=\"https://www.weatherbit.io/static/img/icons/${prop.weather.icon}.png\" alt=\"${prop.weather.description}\"></img>\n      <div>\n        <p class=\"temperature\"><strong>${prop.app_temp}º C</strong></span>\n        <p class=\"description\">${prop.weather.description}</p>\n      <div>\n    </div>`\n  }\n\n  function getWeather () {\n    fetch(locationAPI).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      } else {\n        return Promise.reject(response);\n      }\n    }).then(function (locationData) {\n      city = locationData.city;\n      let lat = locationData.latitude;\n      let lon = locationData.longitude;\n      let locationParameters = `&lat=${lat}&lon=${lon}`;\n      return fetch(`${weatherAPI}?${locationParameters}&key=${weatherKey}`);\n    }).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      } else {\n        return Promise.reject(response);\n      }\n    }).then(function (weatherData) {\n      let userWeather = weatherData.data[0];\n      renderWeather(userWeather); \n    }).catch(function (error) {\n      console.warn(error);\n    });\n  }\n\n  // Inits and listeners\n  getWeather();\n\n</script>\n",
      "date_published": "2020-11-15T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/37/",
      "url": "https://example.com/vanillajsacademy/posts/37/",
      "title": "Weather App - Plugin",
      "content_html": "\n<!-- Setting the html code -->\n\n\n<!-- Setting the js code -->\n\n\n<!-- Rendering the html -->\n<div class=\"htmlBox\">\n  \n<div id=\"app\" class=\"weatherApp l-stack\">Checking the weather near you...</div>\n\n</div>\n\n<!-- Rendering the html and js as syntax highlight -->\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>weatherApp l-stack<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Checking the weather near you...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br> <br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">createWeatherApp</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>  <span class=\"token comment\">// Default settings</span><br>  <span class=\"token keyword\">var</span> defaults <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><br>    selector<span class=\"token operator\">:</span> <span class=\"token string\">'#app'</span><span class=\"token punctuation\">,</span><br>    weatherAPI<span class=\"token operator\">:</span> <span class=\"token string\">' https://api.weatherbit.io/v2.0/current'</span><span class=\"token punctuation\">,</span><br>    weatherKey<span class=\"token operator\">:</span> <span class=\"token string\">'5503cec5734c4b79a0f908a36937391e'</span><span class=\"token punctuation\">,</span><br>    locationAPI<span class=\"token operator\">:</span> <span class=\"token string\">'https://ipapi.co/json'</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">// Merge any user options into the defaults</span><br>  <span class=\"token keyword\">var</span> settings <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>defaults<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Variables</span><br>  <span class=\"token keyword\">let</span> city<span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">let</span> app <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Methods</span><br>  <span class=\"token keyword\">function</span> <span class=\"token function\">renderWeather</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prop</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    app<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"><br>    &lt;p>&lt;svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"icon\">&lt;path d=\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z\">&lt;/path>&lt;circle cx=\"12\" cy=\"10\" r=\"3\">&lt;/circle>&lt;/svg> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>city<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/p><br>    &lt;div class=\"weatherGrid\"><br>      &lt;img src=\"https://www.weatherbit.io/static/img/icons/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>prop<span class=\"token punctuation\">.</span>weather<span class=\"token punctuation\">.</span>icon<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.png\" alt=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>prop<span class=\"token punctuation\">.</span>weather<span class=\"token punctuation\">.</span>description<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\">&lt;/img><br>      &lt;div><br>        &lt;p class=\"temperature\">&lt;strong></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>prop<span class=\"token punctuation\">.</span>app_temp<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">º C&lt;/strong>&lt;/span><br>        &lt;p class=\"description\"></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>prop<span class=\"token punctuation\">.</span>weather<span class=\"token punctuation\">.</span>description<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&lt;/p><br>      &lt;div><br>    &lt;/div></span><span class=\"token template-punctuation string\">`</span></span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">function</span> <span class=\"token function\">getWeather</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>locationAPI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">locationData</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      city <span class=\"token operator\">=</span> locationData<span class=\"token punctuation\">.</span>city<span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">let</span> lat <span class=\"token operator\">=</span> locationData<span class=\"token punctuation\">.</span>latitude<span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">let</span> lon <span class=\"token operator\">=</span> locationData<span class=\"token punctuation\">.</span>longitude<span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">let</span> locationParameters <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&amp;lat=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>lat<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;lon=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>lon<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">return</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>settings<span class=\"token punctuation\">.</span>weatherAPI<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">?</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>locationParameters<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;key=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>settings<span class=\"token punctuation\">.</span>weatherKey<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">weatherData</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">let</span> userWeather <span class=\"token operator\">=</span> weatherData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>      <span class=\"token function\">renderWeather</span><span class=\"token punctuation\">(</span>userWeather<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      console<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">// Inits and listeners</span><br>  <span class=\"token function\">getWeather</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br><span class=\"token function\">createWeatherApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br> <br><span class=\"token comment\">// Example with options</span><br><span class=\"token comment\">// createWeatherApp({</span><br><span class=\"token comment\">//   selector: 'something-else'</span><br><span class=\"token comment\">// })</span><br><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<!-- Inserting the js as a script -->\n\n<script>\nvar createWeatherApp = function (options) {\n\n  // Default settings\n  var defaults = {\n    selector: '#app',\n    weatherAPI: ' https://api.weatherbit.io/v2.0/current',\n    weatherKey: '5503cec5734c4b79a0f908a36937391e',\n    locationAPI: 'https://ipapi.co/json',\n  }\n\n  // Merge any user options into the defaults\n  var settings = Object.assign(defaults, options);\n\n  // Variables\n  let city;\n  let app = document.querySelector(settings.selector);\n\n  // Methods\n  function renderWeather(prop) {\n    app.innerHTML = `\n    <p><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"icon\"><path d=\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z\"></path><circle cx=\"12\" cy=\"10\" r=\"3\"></circle></svg> ${city}</p>\n    <div class=\"weatherGrid\">\n      <img src=\"https://www.weatherbit.io/static/img/icons/${prop.weather.icon}.png\" alt=\"${prop.weather.description}\"></img>\n      <div>\n        <p class=\"temperature\"><strong>${prop.app_temp}º C</strong></span>\n        <p class=\"description\">${prop.weather.description}</p>\n      <div>\n    </div>`\n  }\n\n  function getWeather () {\n    fetch(settings.locationAPI).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      } else {\n        return Promise.reject(response);\n      }\n    }).then(function (locationData) {\n      city = locationData.city;\n      let lat = locationData.latitude;\n      let lon = locationData.longitude;\n      let locationParameters = `&lat=${lat}&lon=${lon}`;\n      return fetch(`${settings.weatherAPI}?${locationParameters}&key=${settings.weatherKey}`);\n    }).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      } else {\n        return Promise.reject(response);\n      }\n    }).then(function (weatherData) {\n      let userWeather = weatherData.data[0];\n      renderWeather(userWeather); \n    }).catch(function (error) {\n      console.warn(error);\n    });\n  }\n\n  // Inits and listeners\n  getWeather();\n};\n\ncreateWeatherApp();\n \n// Example with options\n// createWeatherApp({\n//   selector: 'something-else'\n// })\n\n</script>\n",
      "date_published": "2020-11-15T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/39/",
      "url": "https://example.com/vanillajsacademy/posts/39/",
      "title": "Helper Library",
      "content_html": "<style>\n  .btn-blue {\n    background-color: #0088cc;\n    color: #ffffff;\n  }\n\n  .btn-purple {\n    background-color: rebeccapurple;\n    color: #ffffff;\n  }\n</style>\n<!-- Setting the html code -->\n\n<!-- Setting the js code -->\n\n\n<!-- Rendering the html -->\n<div class=\"htmlBox\">\n  \n<button class=\"btn-blue\" id=\"button-1\">Button 1</button>\n<button class=\"btn-blue\" id=\"button-2\">Button 2</button>\n<button class=\"btn-blue\" id=\"button-3\">Button 3</button>\n\n</div>\n\n<!-- Rendering the html and js as syntax highlight -->\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn-blue<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button-1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Button 1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn-blue<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button-2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Button 2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn-blue<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button-3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Button 3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><br> <br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br><span class=\"token keyword\">var</span> _ <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>  <span class=\"token comment\">// variables</span><br>  <span class=\"token keyword\">var</span> methods <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br><br>  <span class=\"token comment\">// methods</span><br>  methods<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">makeArray</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">nodelist</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>nodelist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br>  methods<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">getFirst</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">selector</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br>  methods<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">getAll</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">selector</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> methods<span class=\"token punctuation\">.</span><span class=\"token function\">makeArray</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br>  methods<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">addClass</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">c<span class=\"token punctuation\">,</span> a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    a<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span> <span class=\"token operator\">=></span> element<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br>  methods<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">removeClass</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">c<span class=\"token punctuation\">,</span> a</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    a<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span> <span class=\"token operator\">=></span> element<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br><br>  <span class=\"token comment\">// return public methods</span><br>  <span class=\"token keyword\">return</span> methods<span class=\"token punctuation\">;</span><br><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">// _.toArray()</span><br><span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">makeArray</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'_.makeArray()'</span><span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">// _.get()</span><br><span class=\"token keyword\">var</span> btn <span class=\"token operator\">=</span> _<span class=\"token punctuation\">.</span><span class=\"token function\">getAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#button-2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'_getAll()'</span><span class=\"token punctuation\">,</span> btn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><br><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<!-- Inserting the js as a script -->\n\n<script>\nvar _ = (function () {\n\n  // variables\n  var methods = {};\n\n\n  // methods\n  methods.makeArray = function (nodelist) {\n    return Array.from(nodelist);\n  }\n  methods.getFirst = function (selector) {\n    return document.querySelector(selector);\n  }\n  methods.getAll = function (selector) {\n    return methods.makeArray(document.querySelectorAll(selector));\n  }\n  methods.addClass = function (c, a) {\n    a.forEach(element => element.classList.add(c));\n  }\n  methods.removeClass = function (c, a) {\n    a.forEach(element => element.classList.remove(c));\n  }\n\n\n  // return public methods\n  return methods;\n})();\n\n// _.toArray()\nvar arr = _.makeArray(document.querySelectorAll('button'));\nconsole.log('_.makeArray()', arr);\n\n// _.get()\nvar btn = _.getAll('#button-2');\nconsole.log('_getAll()', btn);\n\n\n\n</script>\n",
      "date_published": "2020-11-19T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/41/",
      "url": "https://example.com/vanillajsacademy/posts/41/",
      "title": "DOM Manipulation Library",
      "content_html": "<style>\n  .btn-blue {\n    background-color: #0088cc;\n    color: #ffffff;\n  }\n\n  .btn-purple {\n    background-color: rebeccapurple;\n    color: #ffffff;\n  }\n</style>\n<!-- Setting the html code -->\n\n<!-- Setting the js code -->\n\n\n<!-- Rendering the html -->\n<div class=\"htmlBox\">\n  \n<p>\n  <button class=\"btn-blue\" id=\"button-1\">Button 1</button>\n  <button class=\"btn-blue\" id=\"button-2\">Button 2</button>\n  <button class=\"btn-blue\" id=\"button-3\">Button 3</button>\n</p>\n\n<ul>\n  <li>Item 1</li>\n  <li>Item 2</li>\n  <li>Item 3</li>\n</ul>\n\n</div>\n\n<!-- Rendering the html and js as syntax highlight -->\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn-blue<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button-1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Button 1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn-blue<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button-2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Button 2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn-blue<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button-3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Button 3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>Item 1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>Item 2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>Item 3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span><br> <br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br>  <span class=\"token keyword\">var</span> $ <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">getArray</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> methods<span class=\"token punctuation\">.</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// The constructor object</span><br>    <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">Constructor</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">selector</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>elems <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Get an immutable copy of the matching elements </span><br>    <span class=\"token class-name\">Constructor</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">items</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>elems<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token class-name\">Constructor</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">first</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>elems<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token class-name\">Constructor</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">last</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>elems<span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>elems<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token class-name\">Constructor</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">addClass</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">className</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">items</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">elem</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        elem<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token class-name\">Constructor</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">removeClass</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">className</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">items</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">elem</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        elem<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Return the constructor</span><br>    <span class=\"token keyword\">return</span> Constructor<span class=\"token punctuation\">;</span><br><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Create new instances</span><br>  <span class=\"token keyword\">var</span> btns <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">var</span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ul'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><br>  <span class=\"token comment\">// $.items()</span><br>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'$.items()'</span><span class=\"token punctuation\">,</span> btns<span class=\"token punctuation\">.</span><span class=\"token function\">items</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'$.items()'</span><span class=\"token punctuation\">,</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">items</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">// $.first()</span><br>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'$.first()'</span><span class=\"token punctuation\">,</span> btns<span class=\"token punctuation\">.</span><span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">// $.last()</span><br>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'$.last()'</span><span class=\"token punctuation\">,</span> btns<span class=\"token punctuation\">.</span><span class=\"token function\">last</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">// $.addClass()</span><br>btns<span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'btn-purple'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">// $.removeClass()</span><br>btns<span class=\"token punctuation\">.</span><span class=\"token function\">removeClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'btn-blue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><br><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<!-- Inserting the js as a script -->\n\n<script>\n  var $ = (function () {\n\n    var getArray = function (arr) {\n      return methods.Array.from(document.querySelectorAll(arr));\n    };\n\n    // The constructor object\n    var Constructor = function (selector) {\n      this.elems = document.querySelectorAll(selector);\n    };\n\n    // Get an immutable copy of the matching elements \n    Constructor.prototype.items = function () {\n      return Array.prototype.slice.call(this.elems);\n    };\n\n    Constructor.prototype.first = function () {\n      return this.elems[0];\n    };\n\n    Constructor.prototype.last = function () {\n      return this.elems[this.elems.length - 1];\n    };\n\n    Constructor.prototype.addClass = function (className) {\n      this.items().forEach(function (elem) {\n        elem.classList.add(className);\n      });\n    };\n\n    Constructor.prototype.removeClass = function (className) {\n      this.items().forEach(function (elem) {\n        elem.classList.remove(className);\n      });\n    };\n\n    // Return the constructor\n    return Constructor;\n\n  })();\n\n  // Create new instances\n  var btns = new $('button');\n  var list = new $('ul');\n\n\n  // $.items()\nconsole.log('$.items()', btns.items());\nconsole.log('$.items()', list.items());\n\n// $.first()\nconsole.log('$.first()', btns.first());\n\n// $.last()\nconsole.log('$.last()', btns.last());\n\n// $.addClass()\nbtns.addClass('btn-purple');\n\n// $.removeClass()\nbtns.removeClass('btn-blue');\n\n\n\n</script>\n",
      "date_published": "2021-01-17T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/43/",
      "url": "https://example.com/vanillajsacademy/posts/43/",
      "title": "DOM Manipulation Library with chaining methods",
      "content_html": "<style>\n  .btn-blue {\n    background-color: #0088cc;\n    color: #ffffff;\n  }\n\n  .btn-purple {\n    background-color: rebeccapurple;\n    color: #ffffff;\n  }\n</style>\n<!-- Setting the html code -->\n\n<!-- Setting the js code -->\n\n\n<!-- Rendering the html -->\n<div class=\"htmlBox\">\n  \n<p>\n  <button class=\"btn-blue\" id=\"button-1\">Button 1</button>\n  <button class=\"btn-blue\" id=\"button-2\">Button 2</button>\n  <button class=\"btn-blue\" id=\"button-3\">Button 3</button>\n</p>\n\n<ul>\n  <li>Item 1</li>\n  <li>Item 2</li>\n  <li>Item 3</li>\n</ul>\n\n</div>\n\n<!-- Rendering the html and js as syntax highlight -->\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn-blue<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button-1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Button 1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn-blue<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button-2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Button 2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btn-blue<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button-3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Button 3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>Item 1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>Item 2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">></span></span>Item 3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span><br> <br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br>  <span class=\"token keyword\">var</span> $ <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">getArray</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">arr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> methods<span class=\"token punctuation\">.</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// The constructor object</span><br>    <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">Constructor</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">selector</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>elems <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Get an immutable copy of the matching elements </span><br>    <span class=\"token class-name\">Constructor</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">items</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>elems<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token class-name\">Constructor</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">first</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>elems<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token class-name\">Constructor</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">last</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>elems<span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>elems<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token class-name\">Constructor</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">addClass</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">className</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">items</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">elem</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        elem<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token class-name\">Constructor</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">removeClass</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">className</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">items</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">elem</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        elem<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span>className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Return the constructor</span><br>    <span class=\"token keyword\">return</span> Constructor<span class=\"token punctuation\">;</span><br><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Create new instances</span><br>  <span class=\"token keyword\">var</span> btns <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">var</span> list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ul'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><br>  <span class=\"token comment\">// $.items()</span><br>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'$.items()'</span><span class=\"token punctuation\">,</span> btns<span class=\"token punctuation\">.</span><span class=\"token function\">items</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'$.items()'</span><span class=\"token punctuation\">,</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">items</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">// $.first()</span><br>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'$.first()'</span><span class=\"token punctuation\">,</span> btns<span class=\"token punctuation\">.</span><span class=\"token function\">first</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">// $.last()</span><br>console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'$.last()'</span><span class=\"token punctuation\">,</span> btns<span class=\"token punctuation\">.</span><span class=\"token function\">last</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">// $.addClass()</span><br>btns<span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'btn-purple'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><span class=\"token comment\">// $.removeClass()</span><br>btns<span class=\"token punctuation\">.</span><span class=\"token function\">removeClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'btn-blue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br><br><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<!-- Inserting the js as a script -->\n\n<script>\n  var $ = (function () {\n\n    var getArray = function (arr) {\n      return methods.Array.from(document.querySelectorAll(arr));\n    };\n\n    // The constructor object\n    var Constructor = function (selector) {\n      this.elems = document.querySelectorAll(selector);\n    };\n\n    // Get an immutable copy of the matching elements \n    Constructor.prototype.items = function () {\n      return Array.prototype.slice.call(this.elems);\n    };\n\n    Constructor.prototype.first = function () {\n      return this.elems[0];\n    };\n\n    Constructor.prototype.last = function () {\n      return this.elems[this.elems.length - 1];\n    };\n\n    Constructor.prototype.addClass = function (className) {\n      this.items().forEach(function (elem) {\n        elem.classList.add(className);\n      });\n      return this;\n    };\n\n    Constructor.prototype.removeClass = function (className) {\n      this.items().forEach(function (elem) {\n        elem.classList.remove(className);\n      });\n      return this;\n    };\n\n    // Return the constructor\n    return Constructor;\n\n  })();\n\n  // Create new instances\n  var btns = new $('button');\n  var list = new $('ul');\n\n\n  // $.items()\nconsole.log('$.items()', btns.items());\nconsole.log('$.items()', list.items());\n\n// $.first()\nconsole.log('$.first()', btns.first());\n\n// $.last()\nconsole.log('$.last()', btns.last());\n\n// $.addClass()\nbtns.addClass('btn-purple');\n\n// $.removeClass()\nbtns.removeClass('btn-blue');\n\n\n\n</script>\n",
      "date_published": "2021-01-17T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/45/",
      "url": "https://example.com/vanillajsacademy/posts/45/",
      "title": "Debugging Broken Code",
      "content_html": "<style>\n  body {\n    margin: 1em auto;\n    max-width: 40em;\n    width: 88%;\n  }\n\n  /**\n\t\t * A simple grid layout\n\t\t */\n  .row {\n    display: grid;\n    grid-template-columns: auto auto auto;\n    text-align: center;\n  }\n\n  .grid {\n    min-height: 6em;\n    padding: 1em;\n  }\n\n  /**\n\t\t * Make sure images scale\n\t\t */\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n\n  /**\n\t\t * Scale image to the full width of the page\n\t\t */\n  .img-full {\n    width: 100%;\n  }\n\n  /**\n\t\t * Style buttons to not look like buttons\n\t\t */\n  [data-monster-id] {\n    background-color: transparent;\n    border: 0;\n  }\n</style>\n<!-- Setting the html code -->\n\n<!-- Setting the js code -->\n\n\n<!-- Rendering the html -->\n<div class=\"htmlBox\">\n  \n<h1>Monsters! - Debug</h1>\n\n<div id=\"app\" aria-live=\"polite\"></div>\n\n<footer>\n  <hr>\n  <p class=\"text-small text-muted\">Icons by <a href=\"https://thenounproject.com/term/door/311732/\">Jamie Dickinson</a>,\n    <a href=\"https://thenounproject.com/term/monster/184225/\">Nicky Knicky</a>, <a\n      href=\"https://thenounproject.com/term/monster/1510400/\">Alvaro Cabrera</a>, <a\n      href=\"https://thenounproject.com/term/monster/28460/\">Eliricon</a>, <a\n      href=\"https://thenounproject.com/term/monster/82823/\">April Yang</a>, <a\n      href=\"https://thenounproject.com/term/monster/1062009/\">tk66</a>, <a\n      href=\"https://thenounproject.com/term/monster/24990/\">Alex WaZa</a>, <a\n      href=\"https://thenounproject.com/term/monster/37212/\">Husein Aziz</a>, <a\n      href=\"https://thenounproject.com/term/monster/2236082\">iconcheese</a>, and <a\n      href=\"https://thenounproject.com/term/socks/38451/\">Yazmin Alanis</a>.</p>\n</footer>\n\n</div>\n\n<!-- Rendering the html and js as syntax highlight -->\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Monsters! - Debug<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><br><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aria-live</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>polite<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>footer</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hr</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text-small text-muted<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Icons by <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/door/311732/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Jamie Dickinson<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>,<br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/184225/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Nicky Knicky<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>, <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span><br>      <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/1510400/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Alvaro Cabrera<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>, <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span><br>      <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/28460/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Eliricon<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>, <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span><br>      <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/82823/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>April Yang<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>, <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span><br>      <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/1062009/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>tk66<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>, <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span><br>      <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/24990/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Alex WaZa<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>, <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span><br>      <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/37212/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Husein Aziz<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>, <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span><br>      <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/monster/2236082<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>iconcheese<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>, and <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span><br>      <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://thenounproject.com/term/socks/38451/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Yazmin Alanis<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>footer</span><span class=\"token punctuation\">></span></span><br> <br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br>  <span class=\"token comment\">//</span><br>  <span class=\"token comment\">// Variables</span><br>  <span class=\"token comment\">//</span><br><br>  <span class=\"token comment\">// The monsters and socks</span><br>  <span class=\"token keyword\">var</span> monsters <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><br>    <span class=\"token string\">'monster1'</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">'monster2'</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">'monster3'</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">'monster4'</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">'monster5'</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">'monster6'</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">'monster7'</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">'monster8'</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">'monster9'</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">'monster10'</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">'monster11'</span><span class=\"token punctuation\">,</span><br>    <span class=\"token string\">'sock'</span><br>  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Get the #app element</span><br>  <span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// The number of monsters who have been found</span><br>  <span class=\"token keyword\">var</span> found<span class=\"token punctuation\">;</span><br>    <span class=\"token comment\">// 👆 was count instead of found</span><br><br><br>  <span class=\"token comment\">//</span><br>  <span class=\"token comment\">// Methods</span><br>  <span class=\"token comment\">//</span><br><br>  <span class=\"token comment\">/**<br>   * Randomly shuffle an array<br>   * https://stackoverflow.com/a/2450976/1293256<br>   * @param  {Array} array The array to shuffle<br>   * @return {String}      The first item in the shuffled array<br>   */</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">shuffle</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">array</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token keyword\">var</span> currentIndex <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">var</span> temporaryValue<span class=\"token punctuation\">,</span> randomIndex<span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// While there remain elements to shuffle...</span><br>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">!==</span> currentIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token comment\">// Pick a remaining element...</span><br>      randomIndex <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> currentIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      currentIndex <span class=\"token operator\">-=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span><br><br>      <span class=\"token comment\">// And swap it with the current element.</span><br>      temporaryValue <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>currentIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>      array<span class=\"token punctuation\">[</span>currentIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>randomIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>      array<span class=\"token punctuation\">[</span>randomIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> temporaryValue<span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><br>    <span class=\"token keyword\">return</span> array<span class=\"token punctuation\">;</span><br><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/**<br>   * Render the grid of monsters onto the game board<br>   */</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">renderMonsters</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token comment\">// Reset the number of monsters who have been found</span><br>    found <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Shuffle the monsters array</span><br>    <span class=\"token function\">shuffle</span><span class=\"token punctuation\">(</span>monsters<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Create the HTML and inject it into the DOM</span><br>    <span class=\"token comment\">// A button element is focusable and conveys to screen readers that it can be clicked</span><br>    <span class=\"token comment\">// The data-monster-id stores the index of the monster in our array</span><br>    app<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span><br>      <span class=\"token string\">'&lt;p>Click a door to reveal a monster. Try not to find the sock.&lt;/p>'</span> <span class=\"token operator\">+</span><br>      <span class=\"token string\">'&lt;div class=\"row\">'</span> <span class=\"token operator\">+</span><br>      monsters<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">monster<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">var</span> html <span class=\"token operator\">=</span><br>          <span class=\"token string\">'&lt;div class=\"grid\">'</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">'&lt;button data-monster-id=\"'</span> <span class=\"token operator\">+</span> index <span class=\"token operator\">+</span> <span class=\"token string\">'\">'</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">'&lt;img alt=\"Click the door to see what\\'s behind it\" src=\"door.svg\">'</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">'&lt;/button>'</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">'&lt;/div>'</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">return</span> html<span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><br>      <span class=\"token string\">'&lt;/div>'</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/**<br>   * Render a new UI when the player loses<br>   */</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">renderLost</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    app<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span><br>      <span class=\"token string\">'&lt;img class=\"img-full\" alt=\"\" src=\"https://media.giphy.com/media/13zUNhE9WZspMc/giphy.gif\">'</span> <span class=\"token operator\">+</span><br>      <span class=\"token string\">'&lt;h2>Oops, you found a sock!&lt;/h2>'</span> <span class=\"token operator\">+</span><br>      <span class=\"token string\">'&lt;p>'</span> <span class=\"token operator\">+</span><br>      <span class=\"token string\">'&lt;button class=\"btn\" data-monster-play-again>Play Again&lt;/button>'</span> <span class=\"token operator\">+</span><br>      <span class=\"token string\">'&lt;/p>'</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/**<br>   * Render a new UI when the player wins<br>   */</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">renderWon</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    app<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span><br>      <span class=\"token string\">'&lt;img class=\"img-full\" alt=\"\" src=\"https://media.giphy.com/media/1242bJFCbb3FxC/giphy.gif\">'</span> <span class=\"token operator\">+</span><br>      <span class=\"token string\">'&lt;h2>You won!&lt;/h2>'</span> <span class=\"token operator\">+</span><br>      <span class=\"token string\">'&lt;p>You found all of the monsters. Congrats!&lt;/p>'</span> <span class=\"token operator\">+</span><br>      <span class=\"token string\">'&lt;p>'</span> <span class=\"token operator\">+</span><br>      <span class=\"token string\">'&lt;button data-monster-play-again>Play Again&lt;/button>'</span> <span class=\"token operator\">+</span><br>      <span class=\"token string\">'&lt;/p>'</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/**<br>   * Handle click events<br>   * @param  {Event} event The event object<br>   */</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">clickHandler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token comment\">// If a \"play again\" button was clicked, reset the UI and end the callback function</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-monster-play-again'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">// 👆 does not need [] on the selector</span><br>      <span class=\"token function\">renderMonsters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><br>    <span class=\"token comment\">// Check if clicked element or it's parent has a [data-monster-id] attribute</span><br>    <span class=\"token comment\">// If not, it's not a monster</span><br>    <span class=\"token comment\">// return and stop running our callback function</span><br>    <span class=\"token keyword\">var</span> monster <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">closest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[data-monster-id]'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token comment\">// 👆 lacked [] on the selector</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>monster<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Get the monster's index in the array</span><br>    <span class=\"token keyword\">var</span> id <span class=\"token operator\">=</span> monster<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-monster-id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// If the door reveals a sock, render the lost UI</span><br>    <span class=\"token comment\">// Then, end the callback function</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>monsters<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">'sock'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">// 👆 should be === instead of =</span><br>    <span class=\"token comment\">// 👆 should be sock isntead of socks</span><br>      <span class=\"token function\">renderLost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><br>    <span class=\"token comment\">// Update the HTML for the button's parent element</span><br>    <span class=\"token comment\">// This will replace the button so that the content can't be clicked again</span><br>    <span class=\"token comment\">// We'll use the id to get the monster from our shuffled array</span><br>    monster<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;img alt=\"'</span> <span class=\"token operator\">+</span> monsters<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\" src=\"'</span> <span class=\"token operator\">+</span> monsters<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'.svg\">'</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Increase the number of monsters who have been found by 1</span><br>    found<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// If the number of monsters found is equal to the total number (-1 for the sock)</span><br>    <span class=\"token comment\">// then all monsters have been found and we can render the win UI</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>found <span class=\"token operator\">===</span> <span class=\"token punctuation\">(</span>monsters<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token function\">renderWon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br><br>  <span class=\"token comment\">//</span><br>  <span class=\"token comment\">// Inits &amp; Event Listeners</span><br>  <span class=\"token comment\">//</span><br><br>  <span class=\"token comment\">// Render the initial game board</span><br>  <span class=\"token function\">renderMonsters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Listen for click events</span><br>  document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> clickHandler<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<!-- Inserting the js as a script -->\n\n<script>\n  //\n  // Variables\n  //\n\n  // The monsters and socks\n  var monsters = [\n    'monster1',\n    'monster2',\n    'monster3',\n    'monster4',\n    'monster5',\n    'monster6',\n    'monster7',\n    'monster8',\n    'monster9',\n    'monster10',\n    'monster11',\n    'sock'\n  ];\n\n  // Get the #app element\n  var app = document.querySelector('#app');\n\n  // The number of monsters who have been found\n  var found;\n    // 👆 was count instead of found\n\n\n  //\n  // Methods\n  //\n\n  /**\n   * Randomly shuffle an array\n   * https://stackoverflow.com/a/2450976/1293256\n   * @param  {Array} array The array to shuffle\n   * @return {String}      The first item in the shuffled array\n   */\n  var shuffle = function (array) {\n\n    var currentIndex = array.length;\n    var temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n\n  };\n\n  /**\n   * Render the grid of monsters onto the game board\n   */\n  var renderMonsters = function () {\n\n    // Reset the number of monsters who have been found\n    found = 0;\n\n    // Shuffle the monsters array\n    shuffle(monsters);\n\n    // Create the HTML and inject it into the DOM\n    // A button element is focusable and conveys to screen readers that it can be clicked\n    // The data-monster-id stores the index of the monster in our array\n    app.innerHTML =\n      '<p>Click a door to reveal a monster. Try not to find the sock.</p>' +\n      '<div class=\"row\">' +\n      monsters.map(function (monster, index) {\n        var html =\n          '<div class=\"grid\">' +\n          '<button data-monster-id=\"' + index + '\">' +\n          '<img alt=\"Click the door to see what\\'s behind it\" src=\"door.svg\">' +\n          '</button>' +\n          '</div>';\n        return html;\n      }).join('') +\n      '</div>';\n\n  };\n\n  /**\n   * Render a new UI when the player loses\n   */\n  var renderLost = function () {\n    app.innerHTML =\n      '<img class=\"img-full\" alt=\"\" src=\"https://media.giphy.com/media/13zUNhE9WZspMc/giphy.gif\">' +\n      '<h2>Oops, you found a sock!</h2>' +\n      '<p>' +\n      '<button class=\"btn\" data-monster-play-again>Play Again</button>' +\n      '</p>';\n  };\n\n  /**\n   * Render a new UI when the player wins\n   */\n  var renderWon = function () {\n    app.innerHTML =\n      '<img class=\"img-full\" alt=\"\" src=\"https://media.giphy.com/media/1242bJFCbb3FxC/giphy.gif\">' +\n      '<h2>You won!</h2>' +\n      '<p>You found all of the monsters. Congrats!</p>' +\n      '<p>' +\n      '<button data-monster-play-again>Play Again</button>' +\n      '</p>';\n  };\n\n  /**\n   * Handle click events\n   * @param  {Event} event The event object\n   */\n  var clickHandler = function (event) {\n\n    // If a \"play again\" button was clicked, reset the UI and end the callback function\n    if (event.target.hasAttribute('data-monster-play-again')) {\n    // 👆 does not need [] on the selector\n      renderMonsters();\n      return;\n    }\n\n    // Check if clicked element or it's parent has a [data-monster-id] attribute\n    // If not, it's not a monster\n    // return and stop running our callback function\n    var monster = event.target.closest('[data-monster-id]');\n    // 👆 lacked [] on the selector\n    if (!monster) return;\n\n    // Get the monster's index in the array\n    var id = monster.getAttribute('data-monster-id');\n\n    // If the door reveals a sock, render the lost UI\n    // Then, end the callback function\n    if (monsters[id] === 'sock') {\n    // 👆 should be === instead of =\n    // 👆 should be sock isntead of socks\n      renderLost();\n      return;\n    }\n\n    // Update the HTML for the button's parent element\n    // This will replace the button so that the content can't be clicked again\n    // We'll use the id to get the monster from our shuffled array\n    monster.parentNode.innerHTML = '<img alt=\"' + monsters[id] + '\" src=\"' + monsters[id] + '.svg\">';\n\n    // Increase the number of monsters who have been found by 1\n    found++;\n\n    // If the number of monsters found is equal to the total number (-1 for the sock)\n    // then all monsters have been found and we can render the win UI\n    if (found === (monsters.length - 1)) {\n      renderWon();\n    }\n\n  };\n\n\n  //\n  // Inits & Event Listeners\n  //\n\n  // Render the initial game board\n  renderMonsters();\n\n  // Listen for click events\n  document.addEventListener('click', clickHandler, false);\n\n</script>\n",
      "date_published": "2021-01-17T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/47/",
      "url": "https://example.com/vanillajsacademy/posts/47/",
      "title": "Autosave",
      "content_html": "<style>\n\n</style>\n<!-- Setting the html code -->\n\n<!-- Setting the js code -->\n\n\n<!-- Rendering the html -->\n<div class=\"htmlBox\">\n  \n<form class=\"save-me\" id=\"save-me\">\n\n  <label for=\"name\">Name</label>\n  <input type=\"text\" name=\"name\" id=\"name\">\n\n  <label for=\"address\">Address</label>\n  <input type=\"text\" name=\"address\" id=\"address\">\n\n  <label for=\"email\">Email</label>\n  <input type=\"email\" name=\"email\" id=\"email\">\n\n  <label for=\"more\">Additional thoughts?</label>\n  <textarea name=\"more\" id=\"more\"></textarea>\n\n  <p>\n    <button type=\"submit\">Submit</button>\n  </p>\n\n</form>\n\n</div>\n\n<!-- Rendering the html and js as syntax highlight -->\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>save-me<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>save-me<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Name<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>address<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Address<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>address<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>address<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Email<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>more<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Additional thoughts?<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>more<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>more<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Submit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span><br> <br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br>  <span class=\"token keyword\">var</span> storagePrefix <span class=\"token operator\">=</span> <span class=\"token string\">'form-autosave_'</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">inputHandler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">closest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#save-me'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token keyword\">var</span> id <span class=\"token operator\">=</span> <span class=\"token function\">getID</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br><br>    localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span>storagePrefix <span class=\"token operator\">+</span> id<span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">submitHandler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> <span class=\"token string\">'save-me'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token function\">clearData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">getID</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">field</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> field<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> field<span class=\"token punctuation\">.</span>name<br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">loadData</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">// Get all of the form fields</span><br>    <span class=\"token keyword\">var</span> fields <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#save-me input, #save-me textarea'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Loop through each field and load any saved data in localStorage</span><br>    <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">field</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>      <span class=\"token comment\">// If the field has no usable ID, skip it</span><br>      <span class=\"token keyword\">var</span> id <span class=\"token operator\">=</span> <span class=\"token function\">getID</span><span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br><br>      <span class=\"token comment\">// If there's no saved value in localStorage, skip it</span><br>      <span class=\"token keyword\">var</span> saved <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span>storagePrefix <span class=\"token operator\">+</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>saved<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br><br>      <span class=\"token comment\">// Set the field value to the saved data in localStorage</span><br>      field<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> saved<span class=\"token punctuation\">;</span><br><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">clearData</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token comment\">// Get all of the form fields</span><br>    <span class=\"token keyword\">var</span> fields <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#save-me input, #save-me textarea'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Loop through each field and load any saved data in localStorage</span><br>    <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">field</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>      <span class=\"token comment\">// If the field has no usable ID, skip it</span><br>      <span class=\"token keyword\">var</span> id <span class=\"token operator\">=</span> <span class=\"token function\">getID</span><span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br><br>      <span class=\"token comment\">// Remove the item from localStorage</span><br>      localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">removeItem</span><span class=\"token punctuation\">(</span>storagePrefix <span class=\"token operator\">+</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">,</span> inputHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'submit'</span><span class=\"token punctuation\">,</span> submitHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<!-- Inserting the js as a script -->\n\n<script>\n  var storagePrefix = 'form-autosave_';\n\n  var inputHandler = function (event) {\n    if (!event.target.closest('#save-me')) return;\n\n    var id = getID(event.target);\n    if (!id) return;\n\n    localStorage.setItem(storagePrefix + id, event.target.value);\n  };\n\n  var submitHandler = function (event) {\n    if (event.target.id !== 'save-me') return;\n\n    clearData();\n  }\n\n  var getID = function (field) {\n    if (field.id.length > 0) {\n      return field.id;\n    }\n\n    if (field.name.length > 0) {\n      return field.name\n    }\n    return null;\n  };\n\n  var loadData = function () {\n    // Get all of the form fields\n    var fields = document.querySelectorAll('#save-me input, #save-me textarea');\n\n    // Loop through each field and load any saved data in localStorage\n    Array.prototype.slice.call(fields).forEach(function (field) {\n\n      // If the field has no usable ID, skip it\n      var id = getID(field);\n      if (!id) return;\n\n      // If there's no saved value in localStorage, skip it\n      var saved = localStorage.getItem(storagePrefix + id);\n      if (!saved) return;\n\n      // Set the field value to the saved data in localStorage\n      field.value = saved;\n\n    });\n  };\n\n  var clearData = function () {\n\n    // Get all of the form fields\n    var fields = document.querySelectorAll('#save-me input, #save-me textarea');\n\n    // Loop through each field and load any saved data in localStorage\n    Array.prototype.slice.call(fields).forEach(function (field) {\n\n      // If the field has no usable ID, skip it\n      var id = getID(field);\n      if (!id) return;\n\n      // Remove the item from localStorage\n      localStorage.removeItem(storagePrefix + id);\n\n    });\n\n  };\n\n  loadData();\n  document.addEventListener('input', inputHandler);\n  document.addEventListener('submit', submitHandler);\n\n</script>\n",
      "date_published": "2021-01-17T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/49/",
      "url": "https://example.com/vanillajsacademy/posts/49/",
      "title": "Autosave on a single entry",
      "content_html": "<style>\n\n</style>\n<!-- Setting the html code -->\n\n<!-- Setting the js code -->\n\n\n<!-- Rendering the html -->\n<div class=\"htmlBox\">\n  \n<form class=\"save-me\" id=\"save-me\">\n\n  <label for=\"name\">Name</label>\n  <input type=\"text\" name=\"name\" id=\"name\">\n\n  <label for=\"address\">Address</label>\n  <input type=\"text\" name=\"address\" id=\"address\">\n\n  <label for=\"email\">Email</label>\n  <input type=\"email\" name=\"email\" id=\"email\">\n\n  <label for=\"more\">Additional thoughts?</label>\n  <textarea name=\"more\" id=\"more\"></textarea>\n\n  <p>\n    <button type=\"submit\">Submit</button>\n  </p>\n\n</form>\n\n</div>\n\n<!-- Rendering the html and js as syntax highlight -->\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>save-me<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>save-me<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Name<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>address<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Address<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>address<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>address<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Email<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>more<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Additional thoughts?<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>more<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>more<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Submit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span><br> <br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br>  <span class=\"token keyword\">var</span> storagePrefix <span class=\"token operator\">=</span> <span class=\"token string\">'form-autosave-single_'</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">inputHandler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">closest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#save-me'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token keyword\">var</span> id <span class=\"token operator\">=</span> <span class=\"token function\">getID</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br><br>    localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span>storagePrefix <span class=\"token operator\">+</span> id<span class=\"token punctuation\">,</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">submitHandler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> <span class=\"token string\">'save-me'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token function\">clearData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">getID</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">field</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> field<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> field<span class=\"token punctuation\">.</span>name<br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">loadData</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token comment\">// Get all of the form fields</span><br>    <span class=\"token keyword\">var</span> fields <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#save-me input, #save-me textarea'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Loop through each field and load any saved data in localStorage</span><br>    <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">field</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>      <span class=\"token comment\">// If the field has no usable ID, skip it</span><br>      <span class=\"token keyword\">var</span> id <span class=\"token operator\">=</span> <span class=\"token function\">getID</span><span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br><br>      <span class=\"token comment\">// If there's no saved data in localStorage, skip it</span><br>      <span class=\"token keyword\">var</span> saved <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span>storagePrefix <span class=\"token operator\">+</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>saved<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br><br>      <span class=\"token comment\">// Set the field value to the saved data in localStorage</span><br>      field<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> saved<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">clearData</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <br>    <span class=\"token comment\">// Get all of the form fields</span><br>    <span class=\"token keyword\">var</span> fields <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#save-me input, #save-me textarea'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Loop through each field and load any saved data in localStorage</span><br>    <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEarch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">fields</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <br>      <span class=\"token comment\">// if the field has no usable id, skip it</span><br>      <span class=\"token keyword\">var</span> id <span class=\"token operator\">=</span> <span class=\"token function\">getID</span><span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br><br>      <span class=\"token comment\">// remove the item from localStorage</span><br>      localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">removeItem</span><span class=\"token punctuation\">(</span>storagePrefix <span class=\"token operator\">+</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">,</span> inputHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'submit'</span><span class=\"token punctuation\">,</span> submitHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<!-- Inserting the js as a script -->\n\n<script>\n  var storagePrefix = 'form-autosave-single_';\n\n  var inputHandler = function (event) {\n    if (!event.target.closest('#save-me')) return;\n\n    var id = getID(event.target);\n    if (!id) return;\n\n    localStorage.setItem(storagePrefix + id,event.target.value);\n  };\n\n  var submitHandler = function (event) {\n    if (event.target.id !== 'save-me') return;\n\n    clearData();\n  }\n\n  var getID = function (field) {\n    if (field.id.length > 0) {\n      return field.id;\n    }\n\n    if (field.name.length > 0) {\n      return field.name\n    }\n    return null;\n  };\n\n  var loadData = function () {\n\n    // Get all of the form fields\n    var fields = document.querySelectorAll('#save-me input, #save-me textarea');\n\n    // Loop through each field and load any saved data in localStorage\n    Array.prototype.slice.call(fields).forEach(function (field) {\n\n      // If the field has no usable ID, skip it\n      var id = getID(field);\n      if (!id) return;\n\n      // If there's no saved data in localStorage, skip it\n      var saved = localStorage.getItem(storagePrefix + id);\n      if (!saved[id]) return;\n\n      // Set the field value to the saved data in localStorage\n      field.value = saved[id];\n\n    });\n\n  };\n\n  var clearData = function () {\n    \n    // Get all of the form fields\n    var fields = document.querySelectorAll('#save-me input, #save-me textarea');\n\n    // Loop through each field and load any saved data in localStorage\n    Array.prototype.slice.call(fields).forEarch(function (fields) {\n      \n      // if the field has no usable id, skip it\n      var id = getID(field);\n      if(!id) return;\n\n      // remove the item from localStorage\n      localStorage.removeItem(storagePrefix + id);\n\n    })\n  }\n\n  loadData();\n  document.addEventListener('input', inputHandler);\n  document.addEventListener('submit', submitHandler);\n\n</script>\n",
      "date_published": "2021-01-17T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/51/",
      "url": "https://example.com/vanillajsacademy/posts/51/",
      "title": "Autosave with other fields types",
      "content_html": "<style>\n\n</style>\n<!-- Setting the html code -->\n\n<!-- Setting the js code -->\n\n\n<!-- Rendering the html -->\n<div class=\"htmlBox\">\n  \n<form class=\"save-me\" id=\"save-me\">\n\n  <label for=\"name\">Name</label>\n  <input type=\"text\" name=\"name\" id=\"name\">\n\n  <label for=\"address\">Address</label>\n  <input type=\"text\" name=\"address\" id=\"address\">\n\n  <label for=\"email\">Email</label>\n  <input type=\"email\" name=\"email\" id=\"email\">\n\n  <label for=\"hear-about-us\">How did you hear about us?</label>\n  <select name=\"hear-about-us\" id=\"hear-about-us\">\n    <option value=\"\"></option>\n    <option value=\"google\">Google</option>\n    <option value=\"referral\">Referred by a Friend</option>\n    <option value=\"tv\">A TV Ad</option>\n    <option value=\"radio\">A Radio Ad</option>\n  </select>\n\n  <label for=\"more\">Additional thoughts?</label>\n  <textarea name=\"more\" id=\"more\"></textarea>\n\n  <p><strong>Do you agree to our terms of service?</strong></p>\n  <label>\n    <input type=\"radio\" name=\"tos\" value=\"yes\">\n    Yes\n  </label>\n  <label>\n    <input type=\"radio\" name=\"tos\" value=\"no\">\n    No\n  </label>\n\n  <p><strong>Pick your favorite super heros.</strong></p>\n\n  <label>\n    <input type=\"checkbox\" name=\"spiderman\">\n    Spiderman\n  </label>\n\n  <label>\n    <input type=\"checkbox\" name=\"wonderwoman\">\n    Wonder Woman\n  </label>\n\n  <label>\n    <input type=\"checkbox\" name=\"blackpanther\">\n    Black Panther\n  </label>\n\n  <p>\n    <button type=\"submit\">Submit</button>\n  </p>\n\n</form>\n\n</div>\n\n<!-- Rendering the html and js as syntax highlight -->\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>save-me<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>save-me<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Name<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>address<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Address<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>address<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>address<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Email<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hear-about-us<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>How did you hear about us?<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hear-about-us<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hear-about-us<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>google<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Google<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>referral<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Referred by a Friend<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tv<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>A TV Ad<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>A Radio Ad<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>more<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Additional thoughts?<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>more<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>more<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">></span></span>Do you agree to our terms of service?<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tos<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>yes<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    Yes<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tos<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>no<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    No<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">></span></span>Pick your favorite super heros.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>spiderman<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    Spiderman<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>wonderwoman<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    Wonder Woman<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>checkbox<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>blackpanther<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>    Black Panther<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Submit<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span><br> <br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br>  <span class=\"token keyword\">var</span> storagePrefix <span class=\"token operator\">=</span> <span class=\"token string\">'form-autosave-single-other-types_'</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">getID</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">field</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> field<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> field<span class=\"token punctuation\">.</span>name<br>    <span class=\"token punctuation\">}</span><br>    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">loadData</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token comment\">// get localstorage data</span><br>    <span class=\"token keyword\">var</span> saved <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span>storageID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>saved<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>    saved <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>saved<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Get all of the form fields</span><br>    <span class=\"token keyword\">var</span> fields <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelectorAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#save-me input, #save-me textarea, #save-me select'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Loop through each field and load any saved data in localStorage</span><br>    <span class=\"token class-name\">Array</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>fields<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">field</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>      <span class=\"token comment\">// If the field has no usable ID, skip it</span><br>      <span class=\"token keyword\">var</span> id <span class=\"token operator\">=</span> <span class=\"token function\">getID</span><span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br><br>      <span class=\"token comment\">// If there's no saved data in localStorage, skip it</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>saved<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br><br>      <span class=\"token comment\">// Set the field value to the saved data in localStorage</span><br>      <span class=\"token comment\">// if it is a checkbox, set its checked state</span><br>      <span class=\"token comment\">// if it is a radio button and its value matches, set its checked state</span><br>      <span class=\"token comment\">// otherwise, set the value</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'checkbox'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        field<span class=\"token punctuation\">.</span>checked <span class=\"token operator\">=</span> saved<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string\">'on'</span> <span class=\"token operator\">?</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>field<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'radio'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        field<span class=\"token punctuation\">.</span>checked <span class=\"token operator\">=</span> saved<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> field<span class=\"token punctuation\">.</span>value <span class=\"token operator\">?</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span><br>        field<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> saved<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">inputHandler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">// only run for fields in the #save-me form</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">closest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#save-me'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// get an id for the field</span><br>    <span class=\"token keyword\">var</span> id <span class=\"token operator\">=</span> <span class=\"token function\">getID</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// get existing data from localstorage</span><br>    <span class=\"token keyword\">var</span> saved <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span>storageID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    saved <span class=\"token operator\">=</span> saved <span class=\"token operator\">?</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>saved<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><br><br>    <span class=\"token comment\">// add the field to the localstorage object</span><br>    <span class=\"token comment\">// if it is a checkbox, use on/off values</span><br>    <span class=\"token comment\">// otherwise, save the value</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'checkbox'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      saved<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>checked <span class=\"token operator\">?</span> <span class=\"token string\">'on'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'off'</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span><br>      saved<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><br>    <span class=\"token comment\">// save the object back to localstorage</span><br>    localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span>storageID<span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>saved<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">submitHandler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>id <span class=\"token operator\">!==</span> <span class=\"token string\">'save-me'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br><br>    localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">removeItem</span><span class=\"token punctuation\">(</span>storageID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">,</span> inputHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'submit'</span><span class=\"token punctuation\">,</span> submitHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<!-- Inserting the js as a script -->\n\n<script>\n  var storagePrefix = 'form-autosave-single-other-types_';\n\n  var getID = function (field) {\n    if (field.id.length > 0) {\n      return field.id;\n    }\n\n    if (field.name.length > 0) {\n      return field.name\n    }\n    return null;\n  };\n\n  var loadData = function () {\n\n    // get localstorage data\n    var saved = localStorage.getItem(storageID);\n    if (!saved) return;\n    saved = JSON.parse(saved);\n\n    // Get all of the form fields\n    var fields = document.querySelectorAll('#save-me input, #save-me textarea, #save-me select');\n\n    // Loop through each field and load any saved data in localStorage\n    Array.prototype.slice.call(fields).forEach(function (field) {\n\n      // If the field has no usable ID, skip it\n      var id = getID(field);\n      if (!id) return;\n\n      // If there's no saved data in localStorage, skip it\n      if (!saved[id]) return;\n\n      // Set the field value to the saved data in localStorage\n      // if it is a checkbox, set its checked state\n      // if it is a radio button and its value matches, set its checked state\n      // otherwise, set the value\n      if (field.type === 'checkbox') {\n        field.checked = saved[id] === 'on' ? true : false;\n      } else if (field.type === 'radio') {\n        field.checked = saved[id] === field.value ? true : false;\n      } else {\n        field.value = saved[id];\n      }\n    });\n  };\n\n  var inputHandler = function (event) {\n    // only run for fields in the #save-me form\n    if (!event.target.closest('#save-me')) return;\n\n    // get an id for the field\n    var id = getID(event.target);\n    if (!id) return;\n\n    // get existing data from localstorage\n    var saved = localStorage.getItem(storageID);\n    saved = saved ? JSON.parse(saved) : {}\n\n    // add the field to the localstorage object\n    // if it is a checkbox, use on/off values\n    // otherwise, save the value\n    if (event.target.type === 'checkbox') {\n      saved[id] = event.target.checked ? 'on' : 'off';\n    } else {\n      saved[id] = event.target.value;\n    }\n\n    // save the object back to localstorage\n    localStorage.setItem(storageID, JSON.stringify(saved));\n  };\n\n  var submitHandler = function (event) {\n    if (event.target.id !== 'save-me') return;\n\n    localStorage.removeItem(storageID);\n  }\n\n  loadData();\n  document.addEventListener('input', inputHandler);\n  document.addEventListener('submit', submitHandler);\n\n</script>\n",
      "date_published": "2021-01-24T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/53/",
      "url": "https://example.com/vanillajsacademy/posts/53/",
      "title": "API cache",
      "content_html": "<style>\n\n</style>\n<!-- Setting the html code -->\n\n<!-- Setting the js code -->\n\n\n<!-- Rendering the html -->\n<div class=\"htmlBox\">\n  \n<div id=\"app\">\n  Loading...\n</div>\n\n</div>\n\n<!-- Rendering the html and js as syntax highlight -->\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  Loading...<br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br> <br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br>  <span class=\"token comment\">// get the app element</span><br>  <span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// define a localStorage id</span><br>  <span class=\"token keyword\">var</span> storageID <span class=\"token operator\">=</span> <span class=\"token string\">'pirateCache'</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// sanitize html from API</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">sanitizeHTML</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">str</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">var</span> temp <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    temp<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> str<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">return</span> temp<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// get articles from the cache if still valid, or from the API if not</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">fetchArticles</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token comment\">// check for valid cached data</span><br>    <span class=\"token comment\">// if it exists, use it</span><br>    <span class=\"token keyword\">var</span> saved <span class=\"token operator\">=</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>saved<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token function\">renderNews</span><span class=\"token punctuation\">(</span>saved<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'loaded from cache'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><br>    <span class=\"token comment\">// fetch articles from the API</span><br>    <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://vanillajsacademy.com/api/pirates.json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token function\">renderNews</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token function\">saveData</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fetched from API'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token function\">renderNoArticles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// render articles into the ui</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">renderNews</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token comment\">// if there are no articles, render a message into the UI</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>articles<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token function\">renderNoArticles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><br>    <span class=\"token comment\">// otherwise, render the UI</span><br>    app<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>articles<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">article</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>      <span class=\"token comment\">// create html</span><br>      <span class=\"token keyword\">var</span> html <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;article>'</span> <span class=\"token operator\">+</span><br>        <span class=\"token string\">'&lt;h2>'</span> <span class=\"token operator\">+</span> <span class=\"token function\">sanitizeHTML</span><span class=\"token punctuation\">(</span>article<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;/h2>'</span> <span class=\"token operator\">+</span><br>        <span class=\"token string\">'&lt;p>&lt;em>By '</span> <span class=\"token operator\">+</span> <span class=\"token function\">sanitizeHTML</span><span class=\"token punctuation\">(</span>article<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">' on '</span> <span class=\"token operator\">+</span> <span class=\"token function\">sanitizeHTML</span><span class=\"token punctuation\">(</span>article<span class=\"token punctuation\">.</span>pubdate<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;/em>&lt;/p>'</span> <span class=\"token operator\">+</span><br>        <span class=\"token function\">sanitizeHTML</span><span class=\"token punctuation\">(</span>article<span class=\"token punctuation\">.</span>article<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><br>        <span class=\"token string\">'&lt;/article>'</span><span class=\"token punctuation\">;</span><br><br>      <span class=\"token keyword\">return</span> html<span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;p>&lt;em>Articles from &lt;a href=\"'</span> <span class=\"token operator\">+</span> <span class=\"token function\">sanitizeHTML</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>attribution<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\">'</span> <span class=\"token operator\">+</span> <span class=\"token function\">sanitizeHTML</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>attribution<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;/a>&lt;/em>&lt;/p>'</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// render a message when there are no articles to share</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">renderNoArticles</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    app<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;p>There be no pirate news afoot, matey. Check back later.&lt;/p>'</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// save article data to localStorage</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">saveData</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token comment\">// create a cache object with a timestamp</span><br>    <span class=\"token keyword\">var</span> cache <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><br>      data<span class=\"token operator\">:</span> data<span class=\"token punctuation\">,</span><br>      timestamp<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// stringify it and save it to localstorage</span><br>    localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span>storageID<span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>cache<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// get API data from localStorage</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">getData</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token comment\">// get saved daa from localStorage</span><br>    <span class=\"token keyword\">var</span> saved <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span>storageID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>saved<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>    saved <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>saved<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// if data  has not expired, return it</span><br>    <span class=\"token comment\">// use cached data from 30 seconds</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isDataValid</span><span class=\"token punctuation\">(</span>saved<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span> <span class=\"token operator\">*</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> saved<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">// check if the data is valid</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">isDataValid</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">saved<span class=\"token punctuation\">,</span> goodFor</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token comment\">// check that there is data, and a timestamp key</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>saved <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>saved<span class=\"token punctuation\">.</span>data <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>saved<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// get the difference between the timestamp and current time</span><br>    <span class=\"token keyword\">var</span> difference <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> saved<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">;</span><br><br>    <span class=\"token keyword\">return</span> difference <span class=\"token operator\">&lt;</span> goodFor<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br><br>  <span class=\"token function\">fetchArticles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<!-- Inserting the js as a script -->\n\n<script>\n  // get the app element\n  var app = document.querySelector('#app');\n\n  // define a localStorage id\n  var storageID = 'pirateCache';\n\n  // sanitize html from API\n  var sanitizeHTML = function (str) {\n    var temp = document.createElement('div');\n    temp.textContent = str;\n    return temp.innerHTML;\n  };\n\n  // get articles from the cache if still valid, or from the API if not\n  var fetchArticles = function () {\n\n    // check for valid cached data\n    // if it exists, use it\n    var saved = getData();\n    if (saved) {\n      renderNews(saved);\n      console.log('loaded from cache');\n      return;\n    }\n\n    // fetch articles from the API\n    fetch('https://vanillajsacademy.com/api/pirates.json').then(function (response) {\n      if (response.ok) {\n        return response.json();\n      } else {\n        return Promise.reject(response);\n      }\n    }).then(function (data) {\n      renderNews(data);\n      saveData(data);\n      console.log('fetched from API');\n    }).catch(function () {\n      renderNoArticles();\n    });\n  };\n\n  // render articles into the ui\n  var renderNews = function (data) {\n\n    // if there are no articles, render a message into the UI\n    if (data.articles.length < 1) {\n      renderNoArticles();\n      return;\n    }\n\n    // otherwise, render the UI\n    app.innerHTML = data.articles.map(function (article) {\n\n      // create html\n      var html = '<article>' +\n        '<h2>' + sanitizeHTML(article.title) + '</h2>' +\n        '<p><em>By ' + sanitizeHTML(article.author) + ' on ' + sanitizeHTML(article.pubdate) + '</em></p>' +\n        sanitizeHTML(article.article) +\n        '</article>';\n\n      return html;\n    }).join('') + '<p><em>Articles from <a href=\"' + sanitizeHTML(data.attribution.url) + '\">' + sanitizeHTML(data.attribution.name) + '</a></em></p>';\n  };\n\n  // render a message when there are no articles to share\n  var renderNoArticles = function () {\n    app.innerHTML = '<p>There be no pirate news afoot, matey. Check back later.</p>';\n  };\n\n  // save article data to localStorage\n  var saveData = function (data) {\n\n    // create a cache object with a timestamp\n    var cache = {\n      data: data,\n      timestamp: new Date().getTime()\n    };\n\n    // stringify it and save it to localstorage\n    localStorage.setItem(storageID, JSON.stringify(cache));\n  };\n\n  // get API data from localStorage\n  var getData = function () {\n\n    // get saved daa from localStorage\n    var saved = localStorage.getItem(storageID);\n    if (!saved) return;\n    saved = JSON.parse(saved);\n\n    // if data  has not expired, return it\n    // use cached data from 30 seconds\n    if (isDataValid(saved, 1000 * 30)) {\n      return saved.data;\n    }\n  }\n\n  // check if the data is valid\n  var isDataValid = function (saved, goodFor) {\n\n    // check that there is data, and a timestamp key\n    if (!saved || !saved.data || !saved.timestamp) return false;\n\n    // get the difference between the timestamp and current time\n    var difference = new Date().getTime() - saved.timestamp;\n\n    return difference < goodFor;\n  }\n\n\n  fetchArticles();\n</script>\n",
      "date_published": "2021-01-24T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/55/",
      "url": "https://example.com/vanillajsacademy/posts/55/",
      "title": "API cache - fallback",
      "content_html": "<style>\n\n</style>\n<!-- Setting the html code -->\n\n<!-- Setting the js code -->\n\n\n<!-- Rendering the html -->\n<div class=\"htmlBox\">\n  \n<div id=\"app\">\n  Loading...\n</div>\n\n</div>\n\n<!-- Rendering the html and js as syntax highlight -->\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  Loading...<br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br> <br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br>  <span class=\"token comment\">// get the app element</span><br>  <span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// define a localStorage id</span><br>  <span class=\"token keyword\">var</span> storageID <span class=\"token operator\">=</span> <span class=\"token string\">'pirateCache'</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// sanitize html from API</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">sanitizeHTML</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">str</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">var</span> temp <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    temp<span class=\"token punctuation\">.</span>textContent <span class=\"token operator\">=</span> str<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">return</span> temp<span class=\"token punctuation\">.</span>innerHTML<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>  <br>  <span class=\"token comment\">// get articles from the cache if still valid, or from the API if not</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">fetchArticles</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token comment\">// check for valid cached data</span><br>    <span class=\"token comment\">// if it exists, use it</span><br>    <span class=\"token keyword\">var</span> saved <span class=\"token operator\">=</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>saved<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token function\">renderNews</span><span class=\"token punctuation\">(</span>saved<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'loaded from cache'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><br>    <span class=\"token comment\">// fetch articles from the API</span><br>    <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token function\">getEndpoint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token function\">renderNews</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token function\">saveData</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fetched from API'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token function\">renderFallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// render articles into the ui</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">renderNews</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token comment\">// if there are no articles, render a message into the UI</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>articles<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token function\">renderNoArticles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><br>    <span class=\"token comment\">// otherwise, render the UI</span><br>    app<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>articles<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">article</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>      <span class=\"token comment\">// create html</span><br>      <span class=\"token keyword\">var</span> html <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;article>'</span> <span class=\"token operator\">+</span><br>        <span class=\"token string\">'&lt;h2>'</span> <span class=\"token operator\">+</span> <span class=\"token function\">sanitizeHTML</span><span class=\"token punctuation\">(</span>article<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;/h2>'</span> <span class=\"token operator\">+</span><br>        <span class=\"token string\">'&lt;p>&lt;em>By '</span> <span class=\"token operator\">+</span> <span class=\"token function\">sanitizeHTML</span><span class=\"token punctuation\">(</span>article<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">' on '</span> <span class=\"token operator\">+</span> <span class=\"token function\">sanitizeHTML</span><span class=\"token punctuation\">(</span>article<span class=\"token punctuation\">.</span>pubdate<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;/em>&lt;/p>'</span> <span class=\"token operator\">+</span><br>        <span class=\"token function\">sanitizeHTML</span><span class=\"token punctuation\">(</span>article<span class=\"token punctuation\">.</span>article<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><br>        <span class=\"token string\">'&lt;/article>'</span><span class=\"token punctuation\">;</span><br><br>      <span class=\"token keyword\">return</span> html<span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;p>&lt;em>Articles from &lt;a href=\"'</span> <span class=\"token operator\">+</span> <span class=\"token function\">sanitizeHTML</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>attribution<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'\">'</span> <span class=\"token operator\">+</span> <span class=\"token function\">sanitizeHTML</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>attribution<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;/a>&lt;/em>&lt;/p>'</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// render a message when there are no articles to share</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">renderNoArticles</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    app<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;p>There be no pirate news afoot, matey. Check back later.&lt;/p>'</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// save article data to localStorage</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">saveData</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token comment\">// create a cache object with a timestamp</span><br>    <span class=\"token keyword\">var</span> cache <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><br>      data<span class=\"token operator\">:</span> data<span class=\"token punctuation\">,</span><br>      timestamp<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// stringify it and save it to localstorage</span><br>    localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span>storageID<span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>cache<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// get API data from localStorage</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">getData</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token comment\">// get saved daa from localStorage</span><br>    <span class=\"token keyword\">var</span> saved <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span>storageID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>saved<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>    saved <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>saved<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// if data  has not expired, return it</span><br>    <span class=\"token comment\">// use cached data from 30 seconds</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isDataValid</span><span class=\"token punctuation\">(</span>saved<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span> <span class=\"token operator\">*</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> saved<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">// check if the data is valid</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">isDataValid</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">saved<span class=\"token punctuation\">,</span> goodFor</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token comment\">// check that there is data, and a timestamp key</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>saved <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>saved<span class=\"token punctuation\">.</span>data <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>saved<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// get the difference between the timestamp and current time</span><br>    <span class=\"token keyword\">var</span> difference <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> saved<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">;</span><br><br>    <span class=\"token keyword\">return</span> difference <span class=\"token operator\">&lt;</span> goodFor<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">// dinamically vary the API endpoint</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">getEndpoint</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">var</span> endpoint <span class=\"token operator\">=</span> <span class=\"token string\">'https://vanillajsacademy.com/api/'</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">var</span> random <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>random <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> endpoint <span class=\"token operator\">+</span> <span class=\"token string\">'pirates.json'</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">return</span> endpoint <span class=\"token operator\">+</span> <span class=\"token string\">'fail.json'</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// render content from API cache on failed request</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">renderFallback</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <br>    <span class=\"token comment\">// get data from localstorage</span><br>    <span class=\"token keyword\">var</span> saved <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span>storageID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// if there is no API cache, show message in the UI</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>saved<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token function\">renderNoArticles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><br>    <span class=\"token comment\">// parse saved data</span><br>    saved <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>saved<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// render articles with cached data</span><br>    <span class=\"token function\">renderNews</span><span class=\"token punctuation\">(</span>saved<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fallback from cache after failure'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token function\">fetchArticles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<!-- Inserting the js as a script -->\n\n<script>\n  // get the app element\n  var app = document.querySelector('#app');\n\n  // define a localStorage id\n  var storageID = 'pirateCache';\n\n  // sanitize html from API\n  var sanitizeHTML = function (str) {\n    var temp = document.createElement('div');\n    temp.textContent = str;\n    return temp.innerHTML;\n  };\n  \n  // get articles from the cache if still valid, or from the API if not\n  var fetchArticles = function () {\n\n    // check for valid cached data\n    // if it exists, use it\n    var saved = getData();\n    if (saved) {\n      renderNews(saved);\n      console.log('loaded from cache');\n      return;\n    }\n\n    // fetch articles from the API\n    fetch(getEndpoint()).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      } else {\n        return Promise.reject(response);\n      }\n    }).then(function (data) {\n      renderNews(data);\n      saveData(data);\n      console.log('fetched from API');\n    }).catch(function () {\n      renderFallback();\n    });\n  };\n\n  // render articles into the ui\n  var renderNews = function (data) {\n\n    // if there are no articles, render a message into the UI\n    if (data.articles.length < 1) {\n      renderNoArticles();\n      return;\n    }\n\n    // otherwise, render the UI\n    app.innerHTML = data.articles.map(function (article) {\n\n      // create html\n      var html = '<article>' +\n        '<h2>' + sanitizeHTML(article.title) + '</h2>' +\n        '<p><em>By ' + sanitizeHTML(article.author) + ' on ' + sanitizeHTML(article.pubdate) + '</em></p>' +\n        sanitizeHTML(article.article) +\n        '</article>';\n\n      return html;\n    }).join('') + '<p><em>Articles from <a href=\"' + sanitizeHTML(data.attribution.url) + '\">' + sanitizeHTML(data.attribution.name) + '</a></em></p>';\n  };\n\n  // render a message when there are no articles to share\n  var renderNoArticles = function () {\n    app.innerHTML = '<p>There be no pirate news afoot, matey. Check back later.</p>';\n  };\n\n  // save article data to localStorage\n  var saveData = function (data) {\n\n    // create a cache object with a timestamp\n    var cache = {\n      data: data,\n      timestamp: new Date().getTime()\n    };\n\n    // stringify it and save it to localstorage\n    localStorage.setItem(storageID, JSON.stringify(cache));\n  };\n\n  // get API data from localStorage\n  var getData = function () {\n\n    // get saved daa from localStorage\n    var saved = localStorage.getItem(storageID);\n    if (!saved) return;\n    saved = JSON.parse(saved);\n\n    // if data  has not expired, return it\n    // use cached data from 30 seconds\n    if (isDataValid(saved, 1000 * 30)) {\n      return saved.data;\n    }\n  }\n\n  // check if the data is valid\n  var isDataValid = function (saved, goodFor) {\n\n    // check that there is data, and a timestamp key\n    if (!saved || !saved.data || !saved.timestamp) return false;\n\n    // get the difference between the timestamp and current time\n    var difference = new Date().getTime() - saved.timestamp;\n\n    return difference < goodFor;\n  }\n\n  // dinamically vary the API endpoint\n  var getEndpoint = function () {\n    var endpoint = 'https://vanillajsacademy.com/api/';\n    var random = Math.random();\n    if (random < 0.5) return endpoint + 'pirates.json';\n    return endpoint + 'fail.json';\n  };\n\n  // render content from API cache on failed request\n  var renderFallback = function () {\n    \n    // get data from localstorage\n    var saved = localStorage.getItem(storageID);\n\n    // if there is no API cache, show message in the UI\n    if (!saved) {\n      renderNoArticles();\n      return;\n    }\n\n    // parse saved data\n    saved = JSON.parse(saved);\n\n    // render articles with cached data\n    renderNews(saved.data);\n    console.log('fallback from cache after failure');\n  };\n\n  fetchArticles();\n</script>\n",
      "date_published": "2021-01-24T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/57/",
      "url": "https://example.com/vanillajsacademy/posts/57/",
      "title": "Countdown Timer",
      "content_html": "<style>\n\n</style>\n<!-- Setting the html code -->\n\n<!-- Setting the js code -->\n\n\n<!-- Rendering the html -->\n<div class=\"htmlBox\">\n  \n<div id=\"app\"></div>\n\n</div>\n\n<!-- Rendering the html and js as syntax highlight -->\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br> <br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br><br>  <span class=\"token comment\">// State based UI component</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">Rue</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">selector<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>elem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>template <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>template<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Render a new UI</span><br>  <span class=\"token class-name\">Rue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">render</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>elem<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">template</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">// The countdown</span><br>  <span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Rue</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br>    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>      count<span class=\"token operator\">:</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token function-variable function\">template</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">var</span> html <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>props<span class=\"token punctuation\">.</span>count<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">return</span> html<span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br><br>  <span class=\"token comment\">// Render the countdown</span><br>  app<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Decrements count per second</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">startCount</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">var</span> countDown <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>count<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>count <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      window<span class=\"token punctuation\">.</span><span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>countDown<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>count <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">End &lt;button id=\"restart\">Restart&lt;/button></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>    app<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token function\">startCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">let</span> restart <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#restart'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target <span class=\"token operator\">!=</span> restart<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span><br>    <span class=\"token punctuation\">}</span><br>    app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>count <span class=\"token operator\">=</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span><br>    app<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">startCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<!-- Inserting the js as a script -->\n\n<script>\n\n  // State based UI component\n  var Rue = function (selector, options) {\n    this.elem = document.querySelector(selector);\n    this.data = options.data;\n    this.template = options.template;\n  };\n\n  // Render a new UI\n  Rue.prototype.render = function () {\n    this.elem.innerHTML = this.template(this.data);\n  }\n\n  // The countdown\n  var app = new Rue('#app', {\n    data: {\n      count: 60,\n    },\n    template: function (props) {\n      var html = `${props.count}`;\n      return html;\n    }\n  })\n\n  // Render the countdown\n  app.render();\n\n  // Decrements count per second\n  var startCount = function() {\n    var countDown = window.setInterval(function () {\n    app.data.count--;\n    if (app.data.count === 0) {\n      window.clearInterval(countDown);\n      app.data.count = `End <button id=\"restart\">Restart</button>`;\n    };\n    app.render();\n  }, 1000);\n  };\n\n  startCount();\n\n  document.addEventListener('click', function (event) {\n    let restart = document.querySelector('#restart');\n    if (event.target != restart) {\n      return\n    }\n    app.data.count = 60;\n    app.render();\n    startCount();\n  })\n\n</script>\n",
      "date_published": "2020-12-07T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/59/",
      "url": "https://example.com/vanillajsacademy/posts/59/",
      "title": "Countdown Timer - formatted",
      "content_html": "<style>\n\n</style>\n<!-- Setting the html code -->\n\n<!-- Setting the js code -->\n\n\n<!-- Rendering the html -->\n<div class=\"htmlBox\">\n  \n<div id=\"app\"></div>\n\n</div>\n\n<!-- Rendering the html and js as syntax highlight -->\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br> <br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br>  <span class=\"token comment\">//</span><br>  <span class=\"token comment\">// Variables</span><br>  <span class=\"token comment\">//</span><br><br>  <span class=\"token keyword\">var</span> duration <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">var</span> timer<span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">//</span><br>  <span class=\"token comment\">// Methods</span><br>  <span class=\"token comment\">//</span><br><br>  <span class=\"token comment\">/**<br>   * State-based UI Component<br>   * @param {String} selector The selector for the target element<br>   * @param {Object} options  Component options<br>   */</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">Rue</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">selector<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>elem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>template <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>template<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/**<br>   * Render a new UI<br>   */</span><br>  <span class=\"token class-name\">Rue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">render</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>elem<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">template</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/**<br>   * Stop the timer<br>   */</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">stopTimer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>time <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/**<br>   * Start the timer<br>   */</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">startTimer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token comment\">// Reset app data</span><br>    app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>time <span class=\"token operator\">=</span> duration<span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Render the initial UI</span><br>    app<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Start the countdown timer</span><br>    timer <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>countdown<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/**<br>   * Countdown the timer by 1<br>   */</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">countdown</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token comment\">// Reduce the time by 1 second</span><br>    app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>time<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Check if the timer should be stopped</span><br>    <span class=\"token function\">stopTimer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Update the UI</span><br>    app<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/**<br>   * Handle click events<br>   * @param  {Event} event The Event object<br>   */</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">clickHandler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token comment\">// Only run if the restart button was clicked</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-restart-timer'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Start the timer</span><br>    <span class=\"token function\">startTimer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/**<br>   * Create the timer component<br>   * @param  {Object} props The component options<br>   */</span><br>  <span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Rue</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br>    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>      time<span class=\"token operator\">:</span> duration<br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token function-variable function\">template</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>      <span class=\"token comment\">// If the timer is done, show a button to restart it</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>time <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> <span class=\"token string\">'⏰ &lt;p>&lt;button data-restart-timer>Restart Timer&lt;/button>&lt;/p>'</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br><br>      <span class=\"token comment\">// Otherwise, show the current time</span><br>      <span class=\"token keyword\">return</span> <span class=\"token function\">getTimerHTML</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token punctuation\">}</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Get the active timer html</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">getTimerHTML</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <br>    <span class=\"token comment\">// Get the minues and seconds</span><br>    <span class=\"token keyword\">var</span> minutes <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>time <span class=\"token operator\">/</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">var</span> seconds <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>time <span class=\"token operator\">%</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Return the formatted time</span><br>    <span class=\"token keyword\">return</span> minutes<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">':'</span> <span class=\"token operator\">+</span> seconds<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">padStart</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br><br>  <span class=\"token comment\">//</span><br>  <span class=\"token comment\">// Inits &amp; Events</span><br>  <span class=\"token comment\">//</span><br><br>  <span class=\"token function\">startTimer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> clickHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<!-- Inserting the js as a script -->\n\n<script>\n  //\n  // Variables\n  //\n\n  var duration = 5;\n  var timer;\n\n  //\n  // Methods\n  //\n\n  /**\n   * State-based UI Component\n   * @param {String} selector The selector for the target element\n   * @param {Object} options  Component options\n   */\n  var Rue = function (selector, options) {\n    this.elem = document.querySelector(selector);\n    this.data = options.data;\n    this.template = options.template;\n  };\n\n  /**\n   * Render a new UI\n   */\n  Rue.prototype.render = function () {\n    this.elem.innerHTML = this.template(this.data);\n  };\n\n  /**\n   * Stop the timer\n   */\n  var stopTimer = function () {\n    if (app.data.time > 0) return;\n    clearInterval(timer);\n  };\n\n  /**\n   * Start the timer\n   */\n  var startTimer = function () {\n\n    // Reset app data\n    app.data.time = duration;\n\n    // Render the initial UI\n    app.render();\n\n    // Start the countdown timer\n    timer = setInterval(countdown, 1000);\n\n  };\n\n  /**\n   * Countdown the timer by 1\n   */\n  var countdown = function () {\n\n    // Reduce the time by 1 second\n    app.data.time--;\n\n    // Check if the timer should be stopped\n    stopTimer();\n\n    // Update the UI\n    app.render();\n\n  };\n\n  /**\n   * Handle click events\n   * @param  {Event} event The Event object\n   */\n  var clickHandler = function (event) {\n\n    // Only run if the restart button was clicked\n    if (!event.target.hasAttribute('data-restart-timer')) return;\n\n    // Start the timer\n    startTimer();\n\n  };\n\n  /**\n   * Create the timer component\n   * @param  {Object} props The component options\n   */\n  var app = new Rue('#app', {\n    data: {\n      time: duration\n    },\n    template: function (props) {\n\n      // If the timer is done, show a button to restart it\n      if (props.time < 1) {\n        return '⏰ <p><button data-restart-timer>Restart Timer</button></p>';\n      }\n\n      // Otherwise, show the current time\n      return getTimerHTML(props);\n\n    }\n  });\n\n  // Get the active timer html\n  var getTimerHTML = function (props) {\n    \n    // Get the minues and seconds\n    var minutes = parseInt(props.time / 60, 10);\n    var seconds = props.time % 60;\n\n    // Return the formatted time\n    return minutes.toString() + ':' + seconds.toString().padStart(2, '0');\n  }\n\n  //\n  // Inits & Events\n  //\n\n  startTimer();\n  document.addEventListener('click', clickHandler);\n</script>\n",
      "date_published": "2020-12-07T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/61/",
      "url": "https://example.com/vanillajsacademy/posts/61/",
      "title": "Countdown Timer - start and pause",
      "content_html": "<style>\n\n</style>\n<!-- Setting the html code -->\n\n<!-- Setting the js code -->\n\n\n<!-- Rendering the html -->\n<div class=\"htmlBox\">\n  \n<div id=\"app\"></div>\n\n</div>\n\n<!-- Rendering the html and js as syntax highlight -->\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br> <br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br>  <span class=\"token comment\">//</span><br>  <span class=\"token comment\">// Variables</span><br>  <span class=\"token comment\">//</span><br><br>  <span class=\"token keyword\">var</span> duration <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">var</span> timer<span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">//</span><br>  <span class=\"token comment\">// Methods</span><br>  <span class=\"token comment\">//</span><br><br>  <span class=\"token comment\">/**<br>   * State-based UI Component<br>   * @param {String} selector The selector for the target element<br>   * @param {Object} options  Component options<br>   */</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">Rue</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">selector<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>elem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>template <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>template<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/**<br>   * Render a new UI<br>   */</span><br>  <span class=\"token class-name\">Rue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">render</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>elem<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">template</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/**<br>   * Stop the timer<br>   */</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">stopTimer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/**<br>   * Countdown the timer by 1<br>   */</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">countdown</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token comment\">// Reduce the time by 1 second</span><br>    app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>time<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Check if the timer should be stopped</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>time <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token function\">stopTimer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><br>    <span class=\"token comment\">// Update the UI</span><br>    app<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/**<br>   * Handle click events<br>   * @param  {Event} event The Event object<br>   */</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">clickHandler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token function\">startTimer</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">pauseTimer</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">restartTimer</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/**<br> * Start the timer<br> * @param  {Event} event The Event object<br> */</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">startTimer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token comment\">// Only run if the restart button was clicked</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-start-timer'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// If the timer is done, restart instead</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>time <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token function\">restartTimer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><br>    <span class=\"token comment\">// Unpause the timer</span><br>    app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>paused <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Render the initial UI</span><br>    app<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Start the countdown timer</span><br>    timer <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>countdown<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/**<br> * Pause the timer<br> * @param  {Event} event The Event object<br> */</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">pauseTimer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token comment\">// Only run if pause button was clicked</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-pause-timer'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Stop the countdown timer</span><br>    <span class=\"token function\">stopTimer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Update the app data</span><br>    app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>paused <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Render an updated UI</span><br>    app<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/**<br> * Restart the timer<br> * @param  {Event} event The Event object<br> */</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">restartTimer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token comment\">// Only run if the restart button was clicked</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-restart-timer'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Stop any current running timers</span><br>    <span class=\"token function\">stopTimer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Reset app data</span><br>    app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>time <span class=\"token operator\">=</span> duration<span class=\"token punctuation\">;</span><br>    app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>paused <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Render the initial UI</span><br>    app<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Start the countdown timer</span><br>    timer <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>countdown<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br><br>  <span class=\"token comment\">/**<br>   * Create the timer component<br>   * @param  {Object} props The component options<br>   */</span><br>  <span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Rue</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br>    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>      time<span class=\"token operator\">:</span> duration<span class=\"token punctuation\">,</span><br>      paused<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token function-variable function\">template</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>      <span class=\"token comment\">// If the timer is done, show a button to restart it</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>time <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> <span class=\"token string\">'⏰ &lt;p>&lt;button data-restart-timer>Restart Timer&lt;/button>&lt;/p>'</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br><br>      <span class=\"token comment\">// Otherwise, show the current time</span><br>      <span class=\"token keyword\">return</span> <span class=\"token function\">getTimerHTML</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token punctuation\">}</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Get the active timer html</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">getTimerHTML</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token comment\">// Get the minues and seconds</span><br>    <span class=\"token keyword\">var</span> minutes <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>time <span class=\"token operator\">/</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">var</span> seconds <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>time <span class=\"token operator\">%</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Create the timer html</span><br>    <span class=\"token keyword\">var</span> html <span class=\"token operator\">=</span><br>      minutes<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">':'</span> <span class=\"token operator\">+</span> seconds<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">padStart</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><br>      <span class=\"token string\">'&lt;p>'</span> <span class=\"token operator\">+</span><br>      <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>paused <span class=\"token operator\">?</span> <span class=\"token string\">'&lt;button data-start-timer>Start&lt;/button>'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'&lt;button data-pause-timer>Pause&lt;/button>'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><br>      <span class=\"token string\">' &lt;button data-restart-timer>Restart&lt;/button>'</span> <span class=\"token operator\">+</span><br>      <span class=\"token string\">'&lt;/p>'</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token keyword\">return</span> html<span class=\"token punctuation\">;</span><br><br>  <span class=\"token punctuation\">}</span><br><br><br>  <span class=\"token comment\">//</span><br>  <span class=\"token comment\">// Inits &amp; Events</span><br>  <span class=\"token comment\">//</span><br><br>  app<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> clickHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<!-- Inserting the js as a script -->\n\n<script>\n  //\n  // Variables\n  //\n\n  var duration = 5;\n  var timer;\n\n  //\n  // Methods\n  //\n\n  /**\n   * State-based UI Component\n   * @param {String} selector The selector for the target element\n   * @param {Object} options  Component options\n   */\n  var Rue = function (selector, options) {\n    this.elem = document.querySelector(selector);\n    this.data = options.data;\n    this.template = options.template;\n  };\n\n  /**\n   * Render a new UI\n   */\n  Rue.prototype.render = function () {\n    this.elem.innerHTML = this.template(this.data);\n  };\n\n  /**\n   * Stop the timer\n   */\n  var stopTimer = function () {\n    clearInterval(timer);\n  };\n\n  /**\n   * Countdown the timer by 1\n   */\n  var countdown = function () {\n\n    // Reduce the time by 1 second\n    app.data.time--;\n\n    // Check if the timer should be stopped\n    if (app.data.time < 1) {\n      stopTimer();\n    }\n\n    // Update the UI\n    app.render();\n\n  };\n\n  /**\n   * Handle click events\n   * @param  {Event} event The Event object\n   */\n  var clickHandler = function (event) {\n    startTimer(event);\n    pauseTimer(event);\n    restartTimer(event);\n  };\n\n  /**\n * Start the timer\n * @param  {Event} event The Event object\n */\n  var startTimer = function (event) {\n\n    // Only run if the restart button was clicked\n    if (!event.target.hasAttribute('data-start-timer')) return;\n\n    // If the timer is done, restart instead\n    if (app.data.time < 1) {\n      restartTimer();\n      return;\n    }\n\n    // Unpause the timer\n    app.data.paused = false;\n\n    // Render the initial UI\n    app.render();\n\n    // Start the countdown timer\n    timer = setInterval(countdown, 1000);\n\n  };\n\n  /**\n * Pause the timer\n * @param  {Event} event The Event object\n */\n  var pauseTimer = function (event) {\n\n    // Only run if pause button was clicked\n    if (!event.target.hasAttribute('data-pause-timer')) return;\n\n    // Stop the countdown timer\n    stopTimer();\n\n    // Update the app data\n    app.data.paused = true;\n\n    // Render an updated UI\n    app.render();\n\n  };\n\n  /**\n * Restart the timer\n * @param  {Event} event The Event object\n */\n  var restartTimer = function (event) {\n\n    // Only run if the restart button was clicked\n    if (!event.target.hasAttribute('data-restart-timer')) return;\n\n    // Stop any current running timers\n    stopTimer();\n\n    // Reset app data\n    app.data.time = duration;\n    app.data.paused = false;\n\n    // Render the initial UI\n    app.render();\n\n    // Start the countdown timer\n    timer = setInterval(countdown, 1000);\n\n  };\n\n\n  /**\n   * Create the timer component\n   * @param  {Object} props The component options\n   */\n  var app = new Rue('#app', {\n    data: {\n      time: duration,\n      paused: true\n    },\n    template: function (props) {\n\n      // If the timer is done, show a button to restart it\n      if (props.time < 1) {\n        return '⏰ <p><button data-restart-timer>Restart Timer</button></p>';\n      }\n\n      // Otherwise, show the current time\n      return getTimerHTML(props);\n\n    }\n  });\n\n  // Get the active timer html\n  var getTimerHTML = function (props) {\n\n    // Get the minues and seconds\n    var minutes = parseInt(props.time / 60, 10);\n    var seconds = props.time % 60;\n\n    // Create the timer html\n    var html =\n      minutes.toString() + ':' + seconds.toString().padStart(2, '0') +\n      '<p>' +\n      (props.paused ? '<button data-start-timer>Start</button>' : '<button data-pause-timer>Pause</button>') +\n      ' <button data-restart-timer>Restart</button>' +\n      '</p>';\n\n    return html;\n\n  }\n\n\n  //\n  // Inits & Events\n  //\n\n  app.render();\n  document.addEventListener('click', clickHandler);\n</script>\n",
      "date_published": "2020-12-07T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/63/",
      "url": "https://example.com/vanillajsacademy/posts/63/",
      "title": "Countdown Timer - reactive data",
      "content_html": "<style>\n\n</style>\n<!-- Setting the html code -->\n\n<!-- Setting the js code -->\n\n\n<!-- Rendering the html -->\n<div class=\"htmlBox\">\n  \n<div id=\"app\"></div>\n\n</div>\n\n<!-- Rendering the html and js as syntax highlight -->\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br> <br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br>  <span class=\"token comment\">//</span><br>  <span class=\"token comment\">// Variables</span><br>  <span class=\"token comment\">//</span><br><br>  <span class=\"token keyword\">var</span> duration <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">var</span> timer<span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">//</span><br>  <span class=\"token comment\">// Methods</span><br>  <span class=\"token comment\">//</span><br><br>  <span class=\"token comment\">/**<br>\t\t * Get the Proxy handler object<br>\t\t * @param  {Constructor} instance The current instance of the constructor<br>\t\t * @return {Object}               The proxy handler object<br>\t*/</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">handler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">instance</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token function-variable function\">get</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">obj<span class=\"token punctuation\">,</span> prop</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'[object Object]'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'[object Array]'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token function\">handler</span><span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><br>        <span class=\"token keyword\">return</span> obj<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>        instance<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token function-variable function\">set</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">obj<span class=\"token punctuation\">,</span> prop<span class=\"token punctuation\">,</span> value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        obj<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span><br>        instance<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token function-variable function\">deleteProperty</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">obj<span class=\"token punctuation\">,</span> prop</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">delete</span> obj<span class=\"token punctuation\">[</span>prop<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><br>        instance<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/**<br>   * State-based UI Component<br>   * @param {String} selector The selector for the target element<br>   * @param {Object} options  Component options<br>   */</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">Rue</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">selector<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token comment\">// Variables</span><br>    <span class=\"token keyword\">var</span> _this <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span><br>    _this<span class=\"token punctuation\">.</span>elem <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span>selector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">var</span> _data <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span> <span class=\"token function\">handler</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    _this<span class=\"token punctuation\">.</span>template <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>template<span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Define setter and getter for data</span><br>    Object<span class=\"token punctuation\">.</span><span class=\"token function\">defineProperty</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'data'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token function-variable function\">get</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> _data<span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>      <span class=\"token function-variable function\">set</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        _data <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Proxy</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token function\">handler</span><span class=\"token punctuation\">(</span>_this<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        _this<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><br>  <span class=\"token comment\">/**<br>   * Render a new UI<br>   */</span><br>  <span class=\"token class-name\">Rue</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">render</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>elem<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">template</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/**<br>   * Stop the timer<br>   */</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">stopTimer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/**<br>   * Countdown the timer by 1<br>   */</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">countdown</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token comment\">// Reduce the time by 1 second</span><br>    app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>time<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Check if the timer should be stopped</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>time <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token function\">stopTimer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/**<br>   * Handle click events<br>   * @param  {Event} event The Event object<br>   */</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">clickHandler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token function\">startTimer</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">pauseTimer</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">restartTimer</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/**<br> * Start the timer<br> * @param  {Event} event The Event object<br> */</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">startTimer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token comment\">// Only run if the restart button was clicked</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-start-timer'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// If the timer is done, restart instead</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>time <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token function\">restartTimer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><br>    <span class=\"token comment\">// Unpause the timer</span><br>    app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>paused <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Stop any current runnign timers</span><br>    <span class=\"token function\">stopTimer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Start the countdown timer</span><br>    timer <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>countdown<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/**<br> * Pause the timer<br> * @param  {Event} event The Event object<br> */</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">pauseTimer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token comment\">// Only run if pause button was clicked</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-pause-timer'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Stop the countdown timer</span><br>    <span class=\"token function\">stopTimer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Update the app data</span><br>    app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>paused <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">/**<br> * Restart the timer<br> * @param  {Event} event The Event object<br> */</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">restartTimer</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token comment\">// Only run if the restart button was clicked</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-restart-timer'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Stop any current running timers</span><br>    <span class=\"token function\">stopTimer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Reset app data</span><br>    app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>time <span class=\"token operator\">=</span> duration<span class=\"token punctuation\">;</span><br>    app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>paused <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Start the countdown timer</span><br>    timer <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>countdown<span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br><br>  <span class=\"token comment\">/**<br>   * Create the timer component<br>   * @param  {Object} props The component options<br>   */</span><br>  <span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Rue</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br>    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><br>      time<span class=\"token operator\">:</span> duration<span class=\"token punctuation\">,</span><br>      paused<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token function-variable function\">template</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>      <span class=\"token comment\">// If the timer is done, show a button to restart it</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>time <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> <span class=\"token string\">'⏰ &lt;p>&lt;button data-restart-timer>Restart Timer&lt;/button>&lt;/p>'</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br><br>      <span class=\"token comment\">// Otherwise, show the current time</span><br>      <span class=\"token keyword\">return</span> <span class=\"token function\">getTimerHTML</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token punctuation\">}</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Get the active timer html</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">getTimerHTML</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br><br>    <span class=\"token comment\">// Get the minues and seconds</span><br>    <span class=\"token keyword\">var</span> minutes <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>time <span class=\"token operator\">/</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">var</span> seconds <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>time <span class=\"token operator\">%</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// Create the timer html</span><br>    <span class=\"token keyword\">var</span> html <span class=\"token operator\">=</span><br>      minutes<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">':'</span> <span class=\"token operator\">+</span> seconds<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">padStart</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><br>      <span class=\"token string\">'&lt;p>'</span> <span class=\"token operator\">+</span><br>      <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>paused <span class=\"token operator\">?</span> <span class=\"token string\">'&lt;button data-start-timer>Start&lt;/button>'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'&lt;button data-pause-timer>Pause&lt;/button>'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><br>      <span class=\"token string\">' &lt;button data-restart-timer>Restart&lt;/button>'</span> <span class=\"token operator\">+</span><br>      <span class=\"token string\">'&lt;/p>'</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token keyword\">return</span> html<span class=\"token punctuation\">;</span><br><br>  <span class=\"token punctuation\">}</span><br><br><br>  <span class=\"token comment\">//</span><br>  <span class=\"token comment\">// Inits &amp; Events</span><br>  <span class=\"token comment\">//</span><br><br>  app<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> clickHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<!-- Inserting the js as a script -->\n\n<script>\n  //\n  // Variables\n  //\n\n  var duration = 5;\n  var timer;\n\n  //\n  // Methods\n  //\n\n  /**\n\t\t * Get the Proxy handler object\n\t\t * @param  {Constructor} instance The current instance of the constructor\n\t\t * @return {Object}               The proxy handler object\n\t*/\n  var handler = function (instance) {\n    return {\n      get: function (obj, prop) {\n        if (['[object Object]','[object Array]'].indexOf(Object.prototype.toString.call(obj[prop])) > -1) {\n          return new Proxy(obj[prop], handler(instance));\n        }\n        return obj[prop];\n        instance.render();\n      },\n      set: function (obj, prop, value) {\n        obj[prop] = value;\n        instance.render();\n        return true;\n      },\n      deleteProperty: function (obj, prop) {\n        delete obj[prop];\n        instance.render();\n        return true;\n      }\n    };\n  };\n\n  /**\n   * State-based UI Component\n   * @param {String} selector The selector for the target element\n   * @param {Object} options  Component options\n   */\n  var Rue = function (selector, options) {\n\n    // Variables\n    var _this = this;\n    _this.elem = document.querySelector(selector);\n    var _data = new Proxy(options.data, handler(this));\n    _this.template = options.template;\n\n    // Define setter and getter for data\n    Object.defineProperty(this, 'data', {\n      get: function () {\n        return _data;\n      },\n      set: function (data) {\n        _data = new Proxy(data, handler(_this));\n        _this.render();\n        return true;\n      }\n    });\n  }\n  /**\n   * Render a new UI\n   */\n  Rue.prototype.render = function () {\n    this.elem.innerHTML = this.template(this.data);\n  };\n\n  /**\n   * Stop the timer\n   */\n  var stopTimer = function () {\n    clearInterval(timer);\n  };\n\n  /**\n   * Countdown the timer by 1\n   */\n  var countdown = function () {\n\n    // Reduce the time by 1 second\n    app.data.time--;\n\n    // Check if the timer should be stopped\n    if (app.data.time < 1) {\n      stopTimer();\n    }\n\n  };\n\n  /**\n   * Handle click events\n   * @param  {Event} event The Event object\n   */\n  var clickHandler = function (event) {\n    startTimer(event);\n    pauseTimer(event);\n    restartTimer(event);\n  };\n\n  /**\n * Start the timer\n * @param  {Event} event The Event object\n */\n  var startTimer = function (event) {\n\n    // Only run if the restart button was clicked\n    if (!event.target.hasAttribute('data-start-timer')) return;\n\n    // If the timer is done, restart instead\n    if (app.data.time < 1) {\n      restartTimer();\n      return;\n    }\n\n    // Unpause the timer\n    app.data.paused = false;\n\n    // Stop any current runnign timers\n    stopTimer();\n\n    // Start the countdown timer\n    timer = setInterval(countdown, 1000);\n\n  };\n\n  /**\n * Pause the timer\n * @param  {Event} event The Event object\n */\n  var pauseTimer = function (event) {\n\n    // Only run if pause button was clicked\n    if (!event.target.hasAttribute('data-pause-timer')) return;\n\n    // Stop the countdown timer\n    stopTimer();\n\n    // Update the app data\n    app.data.paused = true;\n\n  };\n\n  /**\n * Restart the timer\n * @param  {Event} event The Event object\n */\n  var restartTimer = function (event) {\n\n    // Only run if the restart button was clicked\n    if (!event.target.hasAttribute('data-restart-timer')) return;\n\n    // Stop any current running timers\n    stopTimer();\n\n    // Reset app data\n    app.data.time = duration;\n    app.data.paused = false;\n\n    // Start the countdown timer\n    timer = setInterval(countdown, 1000);\n\n  };\n\n\n  /**\n   * Create the timer component\n   * @param  {Object} props The component options\n   */\n  var app = new Rue('#app', {\n    data: {\n      time: duration,\n      paused: true\n    },\n    template: function (props) {\n\n      // If the timer is done, show a button to restart it\n      if (props.time < 1) {\n        return '⏰ <p><button data-restart-timer>Restart Timer</button></p>';\n      }\n\n      // Otherwise, show the current time\n      return getTimerHTML(props);\n\n    }\n  });\n\n  // Get the active timer html\n  var getTimerHTML = function (props) {\n\n    // Get the minues and seconds\n    var minutes = parseInt(props.time / 60, 10);\n    var seconds = props.time % 60;\n\n    // Create the timer html\n    var html =\n      minutes.toString() + ':' + seconds.toString().padStart(2, '0') +\n      '<p>' +\n      (props.paused ? '<button data-start-timer>Start</button>' : '<button data-pause-timer>Pause</button>') +\n      ' <button data-restart-timer>Restart</button>' +\n      '</p>';\n\n    return html;\n\n  }\n\n\n  //\n  // Inits & Events\n  //\n\n  app.render();\n  document.addEventListener('click', clickHandler);\n</script>\n",
      "date_published": "2020-03-07T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/65/",
      "url": "https://example.com/vanillajsacademy/posts/65/",
      "title": "Places",
      "content_html": "<style>\n/**\n * Grid Layout\n */\n @media (min-width: 40em) {\n\t.place {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 1fr 2fr;\n\t\tgrid-template-rows: 1fr;\n\t\tgrid-column-gap: 2em;\n\t}\n}\n\n/**\n * Responsive Images\n */\nimg {\n\theight: auto;\n\tmax-width: 100%;\n}\n</style>\n<!-- Setting the html code -->\n\n<!-- Setting the js code -->\n\n\n<!-- Rendering the html -->\n<div class=\"htmlBox\">\n  \n<p>Explore cool, quirky places in your own backyard.</p>\n\n<div id=\"app\">Loading...</div>\n\n</div>\n\n<!-- Rendering the html and js as syntax highlight -->\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Explore cool, quirky places in your own backyard.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Loading...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br> <br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/reefjs@8/dist/reef.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br>  <span class=\"token comment\">// Get place data from the API and update app state</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">getPlaces</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://vanillajsacademy.com/api/places.json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br>      <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>places <span class=\"token operator\">=</span> data<span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      console<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>places <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// The app component</span><br>  <span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Reef</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#app'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br>    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token function-variable function\">template</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <br>      <span class=\"token comment\">// If there are places, render them</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>places <span class=\"token operator\">&amp;&amp;</span> data<span class=\"token punctuation\">.</span>places<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> <span class=\"token function\">getPlacesHTML</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br><br>      <span class=\"token comment\">// Otherwise, show an error</span><br>      <span class=\"token keyword\">return</span> <span class=\"token function\">getNoPlacesHTML</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Get the message to dispay if there is no palce data</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">getNoPlacesHTML</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;p>&lt;em>Unable to find any places right now. Please try again later. Sorry!&lt;/em>&lt;/p></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Create HTML for each of the palces from the app data</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">getPlacesHTML</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> props<span class=\"token punctuation\">.</span>places<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">place</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">var</span> html <span class=\"token operator\">=</span> <span class=\"token string\">'&lt;div class=\"place\">'</span> <span class=\"token operator\">+</span><br>\t\t\t\t<span class=\"token string\">'&lt;div>'</span> <span class=\"token operator\">+</span><br>\t\t\t\t\t<span class=\"token string\">'&lt;img alt=\"\" src=\"'</span> <span class=\"token operator\">+</span> place<span class=\"token punctuation\">.</span>img <span class=\"token operator\">+</span> <span class=\"token string\">'\">'</span> <span class=\"token operator\">+</span><br>\t\t\t\t<span class=\"token string\">'&lt;/div>'</span> <span class=\"token operator\">+</span><br>\t\t\t\t<span class=\"token string\">'&lt;div>'</span> <span class=\"token operator\">+</span><br>\t\t\t\t\t<span class=\"token string\">'&lt;h2>'</span> <span class=\"token operator\">+</span> place<span class=\"token punctuation\">.</span>place <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;/h2>'</span> <span class=\"token operator\">+</span><br>\t\t\t\t\t<span class=\"token string\">'&lt;p>'</span> <span class=\"token operator\">+</span> place<span class=\"token punctuation\">.</span>description <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;/p>'</span> <span class=\"token operator\">+</span><br>\t\t\t\t\t<span class=\"token string\">'&lt;p>&lt;em>'</span> <span class=\"token operator\">+</span> place<span class=\"token punctuation\">.</span>location <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;/em>&lt;br>&lt;a href=\"'</span> <span class=\"token operator\">+</span> place<span class=\"token punctuation\">.</span>url <span class=\"token operator\">+</span> <span class=\"token string\">'\">'</span> <span class=\"token operator\">+</span> place<span class=\"token punctuation\">.</span>url <span class=\"token operator\">+</span> <span class=\"token string\">'&lt;/a>&lt;/p>'</span> <span class=\"token operator\">+</span><br>\t\t\t\t<span class=\"token string\">'&lt;/div>'</span> <span class=\"token operator\">+</span><br>      <span class=\"token string\">'&lt;/div>'</span><span class=\"token punctuation\">;</span><br>      <span class=\"token keyword\">return</span> html<span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Inits</span><br>  <span class=\"token function\">getPlaces</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<!-- Inserting the js as a script -->\n\n<script src=\"https://cdn.jsdelivr.net/npm/reefjs@8/dist/reef.min.js\"></script>\n<script>\n  // Get place data from the API and update app state\n  var getPlaces = function () {\n    fetch('https://vanillajsacademy.com/api/places.json').then(function (response) {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(response);\n    }).then(function (data) {\n      app.data.places = data;\n    }).catch(function (err) {\n      console.warn(err);\n      app.data.places = null;\n    });\n  };\n\n  // The app component\n  var app = new Reef('#app', {\n    data: {},\n    template: function (data) {\n      \n      // If there are places, render them\n      if (data.places && data.places.length) {\n        return getPlacesHTML(data);\n      }\n\n      // Otherwise, show an error\n      return getNoPlacesHTML();\n    }\n  });\n\n  // Get the message to dispay if there is no palce data\n  var getNoPlacesHTML = function () {\n    return `<p><em>Unable to find any places right now. Please try again later. Sorry!</em></p>`;\n  };\n\n  // Create HTML for each of the palces from the app data\n  var getPlacesHTML = function (props) {\n    return props.places.map(function (place) {\n      var html = '<div class=\"place\">' +\n\t\t\t\t'<div>' +\n\t\t\t\t\t'<img alt=\"\" src=\"' + place.img + '\">' +\n\t\t\t\t'</div>' +\n\t\t\t\t'<div>' +\n\t\t\t\t\t'<h2>' + place.place + '</h2>' +\n\t\t\t\t\t'<p>' + place.description + '</p>' +\n\t\t\t\t\t'<p><em>' + place.location + '</em><br><a href=\"' + place.url + '\">' + place.url + '</a></p>' +\n\t\t\t\t'</div>' +\n      '</div>';\n      return html;\n    }).join('');\n  };\n\n  // Inits\n  getPlaces();\n</script>\n",
      "date_published": "2020-02-07T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/67/",
      "url": "https://example.com/vanillajsacademy/posts/67/",
      "title": "Places - Favorites",
      "content_html": "\n<style>\n  /**\n * Grid Layout\n */\n  @media (min-width: 40em) {\n    .place {\n      display: grid;\n      grid-template-columns: 1fr 2fr;\n      grid-template-rows: 1fr;\n      gap: 8rem 1rem;\n    }\n  }\n\n  /**\n * Responsive Images\n */\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n\n  button {\n    background-color: #f7f7f7;\n    border: 1px solid #e5e5e5;\n    color: #272727;\n    font-size: 1.5em;\n    padding: 0 0.5em;\n  }\n\n  button[aria-pressed=\"true\"] {\n    background-color: #de391f;\n    border-color: #de391f;\n    color: #ffffff;\n  }\n</style>\n<!-- Setting the html code -->\n\n<!-- Setting the js code -->\n\n\n<!-- Rendering the html -->\n<div class=\"htmlBox\">\n<p>Explore cool, quirky places in your own backyard.</p>\n\n<div id=\"app\">Loading...</div>\n</div>\n\n<!-- Rendering the html and js as syntax highlight -->\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Explore cool, quirky places in your own backyard.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Loading...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br> <br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/reefjs@8/dist/reef.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br>  <span class=\"token comment\">// Get place data from the API and update app state</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">getPlaces</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://vanillajsacademy.com/api/places.json\"</span><span class=\"token punctuation\">)</span><br>      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><br>        <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>faves <span class=\"token operator\">=</span> <span class=\"token function\">getFaves</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>places <span class=\"token operator\">=</span> data<span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>      <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        console<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>places <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// The app component</span><br>  <span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Reef</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br>    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token function-variable function\">template</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token comment\">// If there are places, render them</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>places <span class=\"token operator\">&amp;&amp;</span> data<span class=\"token punctuation\">.</span>places<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> <span class=\"token function\">getPlacesHTML</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br><br>      <span class=\"token comment\">// Otherwise, show an error</span><br>      <span class=\"token keyword\">return</span> <span class=\"token function\">getNoPlacesHTML</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Get the message to dispay if there is no palce data</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">getNoPlacesHTML</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;p>&lt;em>Unable to find any places right now. Please try again later. Sorry!&lt;/em>&lt;/p></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Create HTML for each of the palces from the app data</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">getPlacesHTML</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> props<span class=\"token punctuation\">.</span>places<br>      <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">place</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">var</span> html <span class=\"token operator\">=</span><br>          <span class=\"token string\">'&lt;div class=\"place\">'</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">\"&lt;div>\"</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">'&lt;img alt=\"\" src=\"'</span> <span class=\"token operator\">+</span><br>          place<span class=\"token punctuation\">.</span>img <span class=\"token operator\">+</span><br>          <span class=\"token string\">'\">'</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">\"&lt;/div>\"</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">\"&lt;div>\"</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">\"&lt;h2>\"</span> <span class=\"token operator\">+</span><br>          place<span class=\"token punctuation\">.</span>place <span class=\"token operator\">+</span><br>          <span class=\"token string\">\"&lt;/h2>\"</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">\"&lt;p>\"</span> <span class=\"token operator\">+</span><br>          place<span class=\"token punctuation\">.</span>description <span class=\"token operator\">+</span><br>          <span class=\"token string\">\"&lt;/p>\"</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">\"&lt;p>&lt;em>\"</span> <span class=\"token operator\">+</span><br>          place<span class=\"token punctuation\">.</span>location <span class=\"token operator\">+</span><br>          <span class=\"token string\">'&lt;/em>&lt;br>&lt;a href=\"'</span> <span class=\"token operator\">+</span><br>          place<span class=\"token punctuation\">.</span>url <span class=\"token operator\">+</span><br>          <span class=\"token string\">'\">'</span> <span class=\"token operator\">+</span><br>          place<span class=\"token punctuation\">.</span>url <span class=\"token operator\">+</span><br>          <span class=\"token string\">\"&lt;/a>&lt;/p>\"</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">'&lt;p>&lt;button data-fave=\"'</span> <span class=\"token operator\">+</span><br>          place<span class=\"token punctuation\">.</span>id <span class=\"token operator\">+</span><br>          <span class=\"token string\">'\" aria-label=\"Save '</span> <span class=\"token operator\">+</span><br>          place<span class=\"token punctuation\">.</span>place <span class=\"token operator\">+</span><br>          <span class=\"token string\">'\" aria-pressed=\"'</span> <span class=\"token operator\">+</span><br>          props<span class=\"token punctuation\">.</span>faves<span class=\"token punctuation\">[</span>place<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">'\">♥&lt;/button>&lt;/p>'</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">\"&lt;/div>\"</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">\"&lt;/div>\"</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">return</span> html<span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>      <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Handle click events</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">clickHandler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">// Only run on fave buttons</span><br>    <span class=\"token keyword\">var</span> place <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data-fave\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>place<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// If place is already saved, remove it</span><br>    <span class=\"token comment\">// Other, save it</span><br>    app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>faves<span class=\"token punctuation\">[</span>place<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>faves<span class=\"token punctuation\">[</span>place<span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// localStorage</span><br>  <span class=\"token keyword\">var</span> favesID <span class=\"token operator\">=</span> <span class=\"token string\">\"exploreFaves\"</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Save favorite places to localStorage</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">saveFaves</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">faves</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span>favesID<span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>faves<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Handle render events</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">renderHandler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">// Save favorites to localStorage on render</span><br>    <span class=\"token function\">saveFaves</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>faves<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Get favorite places from localStorage</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">getFaves</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">var</span> faves <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span>favesID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">var</span> favesObj <span class=\"token operator\">=</span> faves <span class=\"token operator\">?</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>faves<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">return</span> favesObj<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Inits</span><br>  <span class=\"token function\">getPlaces</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> clickHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"reef:render\"</span><span class=\"token punctuation\">,</span> renderHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<!-- Inserting the js as a script -->\n\n<script src=\"https://cdn.jsdelivr.net/npm/reefjs@8/dist/reef.min.js\"></script>\n<script>\n  // Get place data from the API and update app state\n  var getPlaces = function () {\n    fetch(\"https://vanillajsacademy.com/api/places.json\")\n      .then(function (response) {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(response);\n      })\n      .then(function (data) {\n        app.data.faves = getFaves();\n        app.data.places = data;\n      })\n      .catch(function (err) {\n        console.warn(err);\n        app.data.places = null;\n      });\n  };\n\n  // The app component\n  var app = new Reef(\"#app\", {\n    data: {},\n    template: function (data) {\n      // If there are places, render them\n      if (data.places && data.places.length) {\n        return getPlacesHTML(data);\n      }\n\n      // Otherwise, show an error\n      return getNoPlacesHTML();\n    },\n  });\n\n  // Get the message to dispay if there is no palce data\n  var getNoPlacesHTML = function () {\n    return `<p><em>Unable to find any places right now. Please try again later. Sorry!</em></p>`;\n  };\n\n  // Create HTML for each of the palces from the app data\n  var getPlacesHTML = function (props) {\n    return props.places\n      .map(function (place) {\n        var html =\n          '<div class=\"place\">' +\n          \"<div>\" +\n          '<img alt=\"\" src=\"' +\n          place.img +\n          '\">' +\n          \"</div>\" +\n          \"<div>\" +\n          \"<h2>\" +\n          place.place +\n          \"</h2>\" +\n          \"<p>\" +\n          place.description +\n          \"</p>\" +\n          \"<p><em>\" +\n          place.location +\n          '</em><br><a href=\"' +\n          place.url +\n          '\">' +\n          place.url +\n          \"</a></p>\" +\n          '<p><button data-fave=\"' +\n          place.id +\n          '\" aria-label=\"Save ' +\n          place.place +\n          '\" aria-pressed=\"' +\n          props.faves[place.id] +\n          '\">♥</button></p>' +\n          \"</div>\" +\n          \"</div>\";\n        return html;\n      })\n      .join(\"\");\n  };\n\n  // Handle click events\n  var clickHandler = function (event) {\n    // Only run on fave buttons\n    var place = event.target.getAttribute(\"data-fave\");\n    if (!place) return;\n\n    // If place is already saved, remove it\n    // Other, save it\n    app.data.faves[place] = app.data.faves[place] ? false : true;\n  };\n\n  // localStorage\n  var favesID = \"exploreFaves\";\n\n  // Save favorite places to localStorage\n  var saveFaves = function (faves) {\n    localStorage.setItem(favesID, JSON.stringify(faves));\n  };\n\n  // Handle render events\n  var renderHandler = function (event) {\n    // Save favorites to localStorage on render\n    saveFaves(app.data.faves);\n  };\n\n  // Get favorite places from localStorage\n  var getFaves = function () {\n    var faves = localStorage.getItem(favesID);\n    var favesObj = faves ? JSON.parse(faves) : {};\n    return favesObj;\n  };\n\n  // Inits\n  getPlaces();\n  document.addEventListener(\"click\", clickHandler);\n  document.addEventListener(\"reef:render\", renderHandler);\n</script>\n\n",
      "date_published": "2020-02-07T00:00:00Z"
    },{
      "id": "https://example.com/vanillajsacademy/posts/69/",
      "url": "https://example.com/vanillajsacademy/posts/69/",
      "title": "Places - Filter",
      "content_html": "\n<style>\n  /**\n * Grid Layout\n */\n  @media (min-width: 40em) {\n    .place {\n      display: grid;\n      grid-template-columns: 1fr 2fr;\n      grid-template-rows: 1fr;\n      gap: 8rem 1rem;\n    }\n  }\n\n  /**\n * Responsive Images\n */\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n\n  button {\n    background-color: #f7f7f7;\n    border: 1px solid #e5e5e5;\n    color: #272727;\n    font-size: 1.5em;\n    padding: 0 0.5em;\n  }\n\n  [data-type=\"faves\"][aria-pressed=\"true\"] {\n    background-color: #de391f;\n    border-color: #de391f;\n    color: #ffffff;\n  }\n\n  [data-type=\"visited\"][aria-pressed=\"true\"] {\n    background-color: #272727;\n    border-color: #272727;\n    color: #ffffff;\n  }\n\n  .hidden {\n    display: none;\n  }\n</style>\n<!-- Setting the html code -->\n\n<!-- Setting the js code -->\n\n\n<!-- Rendering the html -->\n<div class=\"htmlBox\">\n<p>Explore cool, quirky places in your own backyard.</p>\n\n<div class=\"filters\">\n  <strong>Filter:</strong>\n  <label>\n    <input type=\"radio\" name=\"view\" value=\"all\" checked />\n    All Places\n  </label>\n\n  <label>\n    <input type=\"radio\" name=\"view\" value=\"faves\" />\n    Favorites\n  </label>\n\n  <label>\n    <input type=\"radio\" name=\"view\" value=\"visited\" />\n    Visited\n  </label>\n\n  <label>\n    <input type=\"radio\" name=\"view\" value=\"not-visited\" />\n    Not Visited\n  </label>\n</div>\n\n<div id=\"app\">Loading...</div>\n</div>\n\n<!-- Rendering the html and js as syntax highlight -->\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Explore cool, quirky places in your own backyard.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><br><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>filters<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">></span></span>Filter:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">></span></span><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>view<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>all<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">checked</span> <span class=\"token punctuation\">/></span></span><br>    All Places<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>view<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>faves<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    Favorites<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>view<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>visited<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    Visited<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br><br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span><span class=\"token punctuation\">></span></span><br>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>radio<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>view<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>not-visited<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><br>    Not Visited<br>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>app<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Loading...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><br> <br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>../../node_modules/reefjs/dist/reef.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span><br><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"><br>  <span class=\"token comment\">// Get place data from the API and update app state</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">getPlaces</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://vanillajsacademy.com/api/places.json\"</span><span class=\"token punctuation\">)</span><br>      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>ok<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>          <span class=\"token keyword\">return</span> response<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        <span class=\"token punctuation\">}</span><br>        <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">reject</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>      <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>faves <span class=\"token operator\">=</span> <span class=\"token function\">getFromStorage</span><span class=\"token punctuation\">(</span>favesID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>visited <span class=\"token operator\">=</span> <span class=\"token function\">getFromStorage</span><span class=\"token punctuation\">(</span>visitedID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>filter <span class=\"token operator\">=</span> <span class=\"token string\">\"all\"</span><span class=\"token punctuation\">;</span><br>        app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>places <span class=\"token operator\">=</span> data<span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>      <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        console<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>        app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>places <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// The app component</span><br>  <span class=\"token keyword\">var</span> app <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Reef</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#app\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><br>    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>    <span class=\"token function-variable function\">template</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token comment\">// If there are places, render them</span><br>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>places <span class=\"token operator\">&amp;&amp;</span> data<span class=\"token punctuation\">.</span>places<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">return</span> <span class=\"token function\">getPlacesHTML</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><br><br>      <span class=\"token comment\">// Otherwise, show an error</span><br>      <span class=\"token keyword\">return</span> <span class=\"token function\">getNoPlacesHTML</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Get the message to dispay if there is no palce data</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">getNoPlacesHTML</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;p>&lt;em>Unable to find any places right now. Please try again later. Sorry!&lt;/em>&lt;/p></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Create HTML for each of the palces from the app data</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">getPlacesHTML</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">return</span> props<span class=\"token punctuation\">.</span>places<br>      <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">place</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>        <span class=\"token keyword\">var</span> html <span class=\"token operator\">=</span><br>          <span class=\"token string\">'&lt;div class=\"place'</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span><br>          <span class=\"token function\">getHidden</span><span class=\"token punctuation\">(</span>place<span class=\"token punctuation\">,</span> props<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">'\"'</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">\">\"</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">\"&lt;div>\"</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">'&lt;img alt=\"\" src=\"'</span> <span class=\"token operator\">+</span><br>          place<span class=\"token punctuation\">.</span>img <span class=\"token operator\">+</span><br>          <span class=\"token string\">'\">'</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">\"&lt;/div>\"</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">\"&lt;div>\"</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">\"&lt;h2>\"</span> <span class=\"token operator\">+</span><br>          place<span class=\"token punctuation\">.</span>place <span class=\"token operator\">+</span><br>          <span class=\"token string\">\"&lt;/h2>\"</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">\"&lt;p>\"</span> <span class=\"token operator\">+</span><br>          place<span class=\"token punctuation\">.</span>description <span class=\"token operator\">+</span><br>          <span class=\"token string\">\"&lt;/p>\"</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">\"&lt;p>&lt;em>\"</span> <span class=\"token operator\">+</span><br>          place<span class=\"token punctuation\">.</span>location <span class=\"token operator\">+</span><br>          <span class=\"token string\">'&lt;/em>&lt;br>&lt;a href=\"'</span> <span class=\"token operator\">+</span><br>          place<span class=\"token punctuation\">.</span>url <span class=\"token operator\">+</span><br>          <span class=\"token string\">'\">'</span> <span class=\"token operator\">+</span><br>          place<span class=\"token punctuation\">.</span>url <span class=\"token operator\">+</span><br>          <span class=\"token string\">\"&lt;/a>&lt;/p>\"</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">\"&lt;p>\"</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">'&lt;button data-type=\"faves\" data-id=\"'</span> <span class=\"token operator\">+</span><br>          place<span class=\"token punctuation\">.</span>id <span class=\"token operator\">+</span><br>          <span class=\"token string\">'\" aria-label=\"Save '</span> <span class=\"token operator\">+</span><br>          place<span class=\"token punctuation\">.</span>place <span class=\"token operator\">+</span><br>          <span class=\"token string\">'\" aria-pressed=\"'</span> <span class=\"token operator\">+</span><br>          props<span class=\"token punctuation\">.</span>faves<span class=\"token punctuation\">[</span>place<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">'\">♥&lt;/button>'</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">'&lt;button data-type=\"visited\" data-id=\"'</span> <span class=\"token operator\">+</span><br>          place<span class=\"token punctuation\">.</span>id <span class=\"token operator\">+</span><br>          <span class=\"token string\">'\" aria-label=\"Visited '</span> <span class=\"token operator\">+</span><br>          place<span class=\"token punctuation\">.</span>place <span class=\"token operator\">+</span><br>          <span class=\"token string\">'\" aria-pressed=\"'</span> <span class=\"token operator\">+</span><br>          props<span class=\"token punctuation\">.</span>visited<span class=\"token punctuation\">[</span>place<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">'\">✓&lt;/button>'</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">\"&lt;/p>\"</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">\"&lt;/div>\"</span> <span class=\"token operator\">+</span><br>          <span class=\"token string\">\"&lt;/div>\"</span><span class=\"token punctuation\">;</span><br>        <span class=\"token keyword\">return</span> html<span class=\"token punctuation\">;</span><br>      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br>      <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Determine if a place should be visible or not based on filters</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">getHidden</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">place<span class=\"token punctuation\">,</span> props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">// If filter is 'not visited' and place has been visited, hide</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>filter <span class=\"token operator\">===</span> <span class=\"token string\">\"not-visited\"</span> <span class=\"token operator\">&amp;&amp;</span> props<span class=\"token punctuation\">.</span>visited<span class=\"token punctuation\">[</span>place<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> <span class=\"token string\">\"hidden\"</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><br>    <span class=\"token comment\">// If filter is 'faves' or 'visited' and place has not been favorited or visited, hide</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">[</span>props<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>props<span class=\"token punctuation\">[</span>props<span class=\"token punctuation\">.</span>filter<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>place<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span> <span class=\"token string\">\"hidden\"</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><br>    <span class=\"token comment\">// Otherwise, show it\\</span><br>    <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// localStorage</span><br>  <span class=\"token keyword\">var</span> favesID <span class=\"token operator\">=</span> <span class=\"token string\">\"exploreFaves\"</span><span class=\"token punctuation\">;</span><br>  <span class=\"token keyword\">var</span> visitedID <span class=\"token operator\">=</span> <span class=\"token string\">\"exploreVisited\"</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Get items from localStorage</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">getFromStorage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token keyword\">var</span> saved <span class=\"token operator\">=</span> localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">var</span> savedObj <span class=\"token operator\">=</span> saved <span class=\"token operator\">?</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>saved<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">return</span> savedObj<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Save items to localStorage</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">saveToStorage</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">items<span class=\"token punctuation\">,</span> id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    localStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>items<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Handle click events</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">clickHandler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">// Only run on fave buttons</span><br>    <span class=\"token keyword\">var</span> type <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data-type\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">var</span> id <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data-id\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>type <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br><br>    <span class=\"token comment\">// If place is already saved, remove it</span><br>    <span class=\"token comment\">// Other, save it</span><br>    app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Handle change events</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">changeHandler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">// Only run on .filters inpts</span><br>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">closest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".filters\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><br>    <span class=\"token punctuation\">}</span><br><br>    <span class=\"token comment\">// Reactively update filter view</span><br>    app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>filter <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Handle render events</span><br>  <span class=\"token keyword\">var</span> <span class=\"token function-variable function\">renderHandler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br>    <span class=\"token comment\">// Save favorites and visited places to localStorage on render</span><br>    <span class=\"token function\">saveToStorage</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>faves<span class=\"token punctuation\">,</span> favesID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>    <span class=\"token function\">saveToStorage</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>visited<span class=\"token punctuation\">,</span> visitedID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span><br><br>  <span class=\"token comment\">// Inits</span><br>  <span class=\"token function\">getPlaces</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"click\"</span><span class=\"token punctuation\">,</span> clickHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"change\"</span><span class=\"token punctuation\">,</span> changeHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br>  document<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"reef:render\"</span><span class=\"token punctuation\">,</span> renderHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><br></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre>\n\n<!-- Inserting the js as a script -->\n\n<script src=\"../../node_modules/reefjs/dist/reef.min.js\"></script>\n<script>\n  // Get place data from the API and update app state\n  var getPlaces = function () {\n    fetch(\"https://vanillajsacademy.com/api/places.json\")\n      .then(function (response) {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject(response);\n      })\n      .then(function (data) {\n        app.data.faves = getFromStorage(favesID);\n        app.data.visited = getFromStorage(visitedID);\n        app.data.filter = \"all\";\n        app.data.places = data;\n      })\n      .catch(function (err) {\n        console.warn(err);\n        app.data.places = null;\n      });\n  };\n\n  // The app component\n  var app = new Reef(\"#app\", {\n    data: {},\n    template: function (data) {\n      // If there are places, render them\n      if (data.places && data.places.length) {\n        return getPlacesHTML(data);\n      }\n\n      // Otherwise, show an error\n      return getNoPlacesHTML();\n    },\n  });\n\n  // Get the message to dispay if there is no palce data\n  var getNoPlacesHTML = function () {\n    return `<p><em>Unable to find any places right now. Please try again later. Sorry!</em></p>`;\n  };\n\n  // Create HTML for each of the palces from the app data\n  var getPlacesHTML = function (props) {\n    return props.places\n      .map(function (place) {\n        var html =\n          '<div class=\"place' +\n          \" \" +\n          getHidden(place, props) +\n          '\"' +\n          \">\" +\n          \"<div>\" +\n          '<img alt=\"\" src=\"' +\n          place.img +\n          '\">' +\n          \"</div>\" +\n          \"<div>\" +\n          \"<h2>\" +\n          place.place +\n          \"</h2>\" +\n          \"<p>\" +\n          place.description +\n          \"</p>\" +\n          \"<p><em>\" +\n          place.location +\n          '</em><br><a href=\"' +\n          place.url +\n          '\">' +\n          place.url +\n          \"</a></p>\" +\n          \"<p>\" +\n          '<button data-type=\"faves\" data-id=\"' +\n          place.id +\n          '\" aria-label=\"Save ' +\n          place.place +\n          '\" aria-pressed=\"' +\n          props.faves[place.id] +\n          '\">♥</button>' +\n          '<button data-type=\"visited\" data-id=\"' +\n          place.id +\n          '\" aria-label=\"Visited ' +\n          place.place +\n          '\" aria-pressed=\"' +\n          props.visited[place.id] +\n          '\">✓</button>' +\n          \"</p>\" +\n          \"</div>\" +\n          \"</div>\";\n        return html;\n      })\n      .join(\"\");\n  };\n\n  // Determine if a place should be visible or not based on filters\n  var getHidden = function (place, props) {\n    // If filter is 'not visited' and place has been visited, hide\n    if (props.filter === \"not-visited\" && props.visited[place.id]) {\n      return \"hidden\";\n    }\n\n    // If filter is 'faves' or 'visited' and place has not been favorited or visited, hide\n    if (props[props.filter] && !props[props.filter][place.id]) {\n      return \"hidden\";\n    }\n\n    // Otherwise, show it\\\n    return \"\";\n  };\n\n  // localStorage\n  var favesID = \"exploreFaves\";\n  var visitedID = \"exploreVisited\";\n\n  // Get items from localStorage\n  var getFromStorage = function (id) {\n    var saved = localStorage.getItem(id);\n    var savedObj = saved ? JSON.parse(saved) : {};\n    return savedObj;\n  };\n\n  // Save items to localStorage\n  var saveToStorage = function (items, id) {\n    localStorage.setItem(id, JSON.stringify(items));\n  };\n\n  // Handle click events\n  var clickHandler = function (event) {\n    // Only run on fave buttons\n    var type = event.target.getAttribute(\"data-type\");\n    var id = event.target.getAttribute(\"data-id\");\n    if (!type || !id) return;\n\n    // If place is already saved, remove it\n    // Other, save it\n    app.data[type][id] = app.data[type][id] ? false : true;\n  };\n\n  // Handle change events\n  var changeHandler = function (event) {\n    // Only run on .filters inpts\n    if (!event.target.closest(\".filters\")) {\n      return;\n    }\n\n    // Reactively update filter view\n    app.data.filter = event.target.value;\n  };\n\n  // Handle render events\n  var renderHandler = function (event) {\n    // Save favorites and visited places to localStorage on render\n    saveToStorage(app.data.faves, favesID);\n    saveToStorage(app.data.visited, visitedID);\n  };\n\n  // Inits\n  getPlaces();\n  document.addEventListener(\"click\", clickHandler);\n  document.addEventListener(\"change\", changeHandler);\n  document.addEventListener(\"reef:render\", renderHandler);\n</script>\n\n",
      "date_published": "2020-02-07T00:00:00Z"
    }
  ]
}
